Search.setIndex({"docnames": ["cleanlab/benchmarking/index", "cleanlab/benchmarking/noise_generation", "cleanlab/classification", "cleanlab/count", "cleanlab/datalab/datalab", "cleanlab/datalab/guide/custom_issue_manager", "cleanlab/datalab/guide/generating_cluster_ids", "cleanlab/datalab/guide/index", "cleanlab/datalab/guide/issue_type_description", "cleanlab/datalab/index", "cleanlab/datalab/internal/data", "cleanlab/datalab/internal/data_issues", "cleanlab/datalab/internal/factory", "cleanlab/datalab/internal/index", "cleanlab/datalab/internal/issue_finder", "cleanlab/datalab/internal/issue_manager/_notices/not_registered", "cleanlab/datalab/internal/issue_manager/data_valuation", "cleanlab/datalab/internal/issue_manager/duplicate", "cleanlab/datalab/internal/issue_manager/imbalance", "cleanlab/datalab/internal/issue_manager/index", "cleanlab/datalab/internal/issue_manager/issue_manager", "cleanlab/datalab/internal/issue_manager/label", "cleanlab/datalab/internal/issue_manager/multilabel/index", "cleanlab/datalab/internal/issue_manager/multilabel/label", "cleanlab/datalab/internal/issue_manager/noniid", "cleanlab/datalab/internal/issue_manager/null", "cleanlab/datalab/internal/issue_manager/outlier", "cleanlab/datalab/internal/issue_manager/regression/index", "cleanlab/datalab/internal/issue_manager/regression/label", "cleanlab/datalab/internal/issue_manager/underperforming_group", "cleanlab/datalab/internal/report", "cleanlab/datalab/internal/task", "cleanlab/datalab/optional_dependencies", "cleanlab/dataset", "cleanlab/experimental/cifar_cnn", "cleanlab/experimental/coteaching", "cleanlab/experimental/index", "cleanlab/experimental/label_issues_batched", "cleanlab/experimental/mnist_pytorch", "cleanlab/experimental/span_classification", "cleanlab/filter", "cleanlab/internal/index", "cleanlab/internal/label_quality_utils", "cleanlab/internal/latent_algebra", "cleanlab/internal/multiannotator_utils", "cleanlab/internal/multilabel_scorer", "cleanlab/internal/multilabel_utils", "cleanlab/internal/outlier", "cleanlab/internal/token_classification_utils", "cleanlab/internal/util", "cleanlab/internal/validation", "cleanlab/models/fasttext", "cleanlab/models/index", "cleanlab/models/keras", "cleanlab/multiannotator", "cleanlab/multilabel_classification/dataset", "cleanlab/multilabel_classification/filter", "cleanlab/multilabel_classification/index", "cleanlab/multilabel_classification/rank", "cleanlab/object_detection/filter", "cleanlab/object_detection/index", "cleanlab/object_detection/rank", "cleanlab/object_detection/summary", "cleanlab/outlier", "cleanlab/rank", "cleanlab/regression/index", "cleanlab/regression/learn", "cleanlab/regression/rank", "cleanlab/segmentation/filter", "cleanlab/segmentation/index", "cleanlab/segmentation/rank", "cleanlab/segmentation/summary", "cleanlab/token_classification/filter", "cleanlab/token_classification/index", "cleanlab/token_classification/rank", "cleanlab/token_classification/summary", "index", "migrating/migrate_v2", "tutorials/audio", "tutorials/datalab/datalab_advanced", "tutorials/datalab/datalab_quickstart", "tutorials/datalab/index", "tutorials/datalab/tabular", "tutorials/datalab/text", "tutorials/dataset_health", "tutorials/faq", "tutorials/image", "tutorials/indepth_overview", "tutorials/index", "tutorials/multiannotator", "tutorials/multilabel_classification", "tutorials/object_detection", "tutorials/outliers", "tutorials/pred_probs_cross_val", "tutorials/regression", "tutorials/segmentation", "tutorials/tabular", "tutorials/text", "tutorials/token_classification"], "filenames": ["cleanlab/benchmarking/index.rst", "cleanlab/benchmarking/noise_generation.rst", "cleanlab/classification.rst", "cleanlab/count.rst", "cleanlab/datalab/datalab.rst", "cleanlab/datalab/guide/custom_issue_manager.rst", "cleanlab/datalab/guide/generating_cluster_ids.rst", "cleanlab/datalab/guide/index.rst", "cleanlab/datalab/guide/issue_type_description.rst", "cleanlab/datalab/index.rst", "cleanlab/datalab/internal/data.rst", "cleanlab/datalab/internal/data_issues.rst", "cleanlab/datalab/internal/factory.rst", "cleanlab/datalab/internal/index.rst", "cleanlab/datalab/internal/issue_finder.rst", "cleanlab/datalab/internal/issue_manager/_notices/not_registered.rst", "cleanlab/datalab/internal/issue_manager/data_valuation.rst", "cleanlab/datalab/internal/issue_manager/duplicate.rst", "cleanlab/datalab/internal/issue_manager/imbalance.rst", "cleanlab/datalab/internal/issue_manager/index.rst", "cleanlab/datalab/internal/issue_manager/issue_manager.rst", "cleanlab/datalab/internal/issue_manager/label.rst", "cleanlab/datalab/internal/issue_manager/multilabel/index.rst", "cleanlab/datalab/internal/issue_manager/multilabel/label.rst", "cleanlab/datalab/internal/issue_manager/noniid.rst", "cleanlab/datalab/internal/issue_manager/null.rst", "cleanlab/datalab/internal/issue_manager/outlier.rst", "cleanlab/datalab/internal/issue_manager/regression/index.rst", "cleanlab/datalab/internal/issue_manager/regression/label.rst", "cleanlab/datalab/internal/issue_manager/underperforming_group.rst", "cleanlab/datalab/internal/report.rst", "cleanlab/datalab/internal/task.rst", "cleanlab/datalab/optional_dependencies.rst", "cleanlab/dataset.rst", "cleanlab/experimental/cifar_cnn.rst", "cleanlab/experimental/coteaching.rst", "cleanlab/experimental/index.rst", "cleanlab/experimental/label_issues_batched.rst", "cleanlab/experimental/mnist_pytorch.rst", "cleanlab/experimental/span_classification.rst", "cleanlab/filter.rst", "cleanlab/internal/index.rst", "cleanlab/internal/label_quality_utils.rst", "cleanlab/internal/latent_algebra.rst", "cleanlab/internal/multiannotator_utils.rst", "cleanlab/internal/multilabel_scorer.rst", "cleanlab/internal/multilabel_utils.rst", "cleanlab/internal/outlier.rst", "cleanlab/internal/token_classification_utils.rst", "cleanlab/internal/util.rst", "cleanlab/internal/validation.rst", "cleanlab/models/fasttext.rst", "cleanlab/models/index.rst", "cleanlab/models/keras.rst", "cleanlab/multiannotator.rst", "cleanlab/multilabel_classification/dataset.rst", "cleanlab/multilabel_classification/filter.rst", "cleanlab/multilabel_classification/index.rst", "cleanlab/multilabel_classification/rank.rst", "cleanlab/object_detection/filter.rst", "cleanlab/object_detection/index.rst", "cleanlab/object_detection/rank.rst", "cleanlab/object_detection/summary.rst", "cleanlab/outlier.rst", "cleanlab/rank.rst", "cleanlab/regression/index.rst", "cleanlab/regression/learn.rst", "cleanlab/regression/rank.rst", "cleanlab/segmentation/filter.rst", "cleanlab/segmentation/index.rst", "cleanlab/segmentation/rank.rst", "cleanlab/segmentation/summary.rst", "cleanlab/token_classification/filter.rst", "cleanlab/token_classification/index.rst", "cleanlab/token_classification/rank.rst", "cleanlab/token_classification/summary.rst", "index.rst", "migrating/migrate_v2.rst", "tutorials/audio.ipynb", "tutorials/datalab/datalab_advanced.ipynb", "tutorials/datalab/datalab_quickstart.ipynb", "tutorials/datalab/index.rst", "tutorials/datalab/tabular.ipynb", "tutorials/datalab/text.ipynb", "tutorials/dataset_health.ipynb", "tutorials/faq.ipynb", "tutorials/image.ipynb", "tutorials/indepth_overview.ipynb", "tutorials/index.rst", "tutorials/multiannotator.ipynb", "tutorials/multilabel_classification.ipynb", "tutorials/object_detection.ipynb", "tutorials/outliers.ipynb", "tutorials/pred_probs_cross_val.rst", "tutorials/regression.ipynb", "tutorials/segmentation.ipynb", "tutorials/tabular.ipynb", "tutorials/text.ipynb", "tutorials/token_classification.ipynb"], "titles": ["benchmarking", "noise_generation", "classification", "count", "datalab", "Creating Your Own Issues Manager", "Generating Cluster IDs", "Datalab guides", "Datalab Issue Types", "datalab", "data", "data_issues", "factory", "internal", "issue_finder", "&lt;no title&gt;", "data_valuation", "duplicate", "imbalance", "issue_manager", "issue_manager", "label", "multilabel", "label", "noniid", "null", "outlier", "regression", "label", "underperforming_group", "report", "task", "&lt;no title&gt;", "dataset", "cifar_cnn", "coteaching", "experimental", "label_issues_batched", "mnist_pytorch", "&lt;no title&gt;", "filter", "internal", "label_quality_utils", "latent_algebra", "multiannotator_utils", "multilabel_scorer", "multilabel_utils", "outlier", "token_classification_utils", "util", "validation", "fasttext", "models", "keras", "multiannotator", "dataset", "filter", "multilabel_classification", "rank", "filter", "object_detection", "rank", "summary", "outlier", "rank", "regression", "regression.learn", "regression.rank", "filter", "segmentation", "rank", "summary", "filter", "token_classification", "rank", "summary", "cleanlab open-source documentation", "How to migrate to versions &gt;= 2.0.0 from pre 1.0.1", "Audio Classification with SpeechBrain and Cleanlab", "Datalab: Advanced workflows to audit your data", "Datalab: A unified audit to detect all kinds of issues in data and labels", "Datalab Tutorials", "Detecting Issues in Tabular Data\u00a0(Numeric/Categorical columns) with Datalab", "Detecting Issues in a Text Dataset with Datalab", "Find Dataset-level Issues for Dataset Curation", "FAQ", "Image Classification with PyTorch and Cleanlab", "The Workflows of Data-centric AI for Classification with Noisy Labels", "Tutorials", "Estimate Consensus and Annotator Quality for Data Labeled by Multiple Annotators", "Find Label Errors in Multi-Label Classification Datasets", "Finding Label Errors in Object Detection Datasets", "Detect Outliers with Cleanlab and PyTorch Image Models (timm)", "Computing Out-of-Sample Predicted Probabilities with Cross-Validation", "Find Noisy Labels in Regression Datasets", "Find Label Errors in Semantic Segmentation Datasets", "Classification with Tabular Data using Scikit-Learn and Cleanlab", "Text Classification with Noisy Labels", "Find Label Errors in Token Classification (Text) Datasets"], "terms": {"noise_gener": [0, 77, 79, 80, 87, 89, 90], "noise_matrix_is_valid": [0, 1], "generate_noisy_label": [0, 1, 79, 80, 87, 89, 90], "generate_noise_matrix_from_trac": [0, 1, 79, 80, 87, 89, 90], "generate_n_rand_probabilities_that_sum_to_m": [0, 1], "randomly_distribute_n_balls_into_k_bin": [0, 1], "helper": [1, 14, 37, 42, 44, 45, 46, 47, 48, 49, 61, 84, 86, 98], "method": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "ar": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98], "us": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 76, 77, 79, 84, 88, 93], "benchmark": [1, 34, 76, 77, 79, 80, 87, 89, 90], "cleanlab": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 80, 84, 88, 93], "": [1, 2, 3, 8, 16, 33, 34, 38, 42, 45, 47, 49, 54, 55, 59, 61, 62, 63, 64, 66, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "core": [1, 37, 40, 68, 70], "algorithm": [1, 2, 6, 8, 29, 35, 39, 49, 54, 63, 72, 74, 76, 85, 87, 89, 98], "These": [1, 2, 3, 4, 6, 8, 19, 34, 36, 38, 39, 40, 41, 52, 54, 55, 58, 62, 63, 67, 71, 72, 74, 75, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "introduc": [1, 78, 85, 87], "synthet": [1, 89, 90, 95], "nois": [1, 2, 3, 33, 40, 43, 49, 55, 79, 80, 84, 89, 94], "label": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 18, 19, 20, 22, 27, 29, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 84, 88, 92, 93], "classif": [1, 3, 4, 5, 8, 10, 12, 14, 31, 33, 37, 39, 40, 43, 45, 46, 49, 54, 55, 56, 57, 58, 63, 64, 72, 73, 74, 75, 76, 77, 79, 80, 88, 89, 92, 93, 94, 95], "dataset": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 28, 29, 36, 37, 38, 39, 40, 43, 45, 49, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 88, 89, 93, 96], "specif": [1, 3, 4, 7, 12, 13, 14, 25, 30, 36, 52, 56, 59, 62, 71, 75, 82, 83, 86, 87, 91, 98], "thi": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "modul": [1, 3, 11, 12, 13, 14, 19, 22, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 45, 47, 49, 52, 54, 59, 62, 63, 64, 76, 85, 86, 90], "provid": [1, 2, 3, 4, 5, 6, 8, 12, 14, 16, 21, 28, 31, 33, 34, 35, 37, 38, 40, 43, 49, 53, 54, 55, 56, 61, 62, 63, 64, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98], "gener": [1, 2, 3, 5, 8, 16, 21, 23, 30, 33, 45, 49, 50, 63, 64, 66, 71, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 97, 98], "valid": [1, 2, 3, 4, 8, 10, 31, 33, 40, 41, 43, 44, 45, 47, 49, 54, 56, 59, 62, 64, 66, 67, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 96, 97, 98], "matric": [1, 3, 43, 85], "which": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 20, 24, 30, 33, 34, 38, 39, 40, 43, 45, 48, 49, 54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98], "learn": [1, 2, 3, 4, 8, 12, 14, 20, 28, 30, 35, 36, 37, 38, 40, 42, 44, 49, 52, 54, 56, 63, 65, 67, 70, 74, 76, 78, 79, 82, 83, 84, 86, 88, 89, 90, 94, 97], "i": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "possibl": [1, 2, 3, 5, 8, 33, 34, 38, 40, 42, 43, 45, 56, 57, 58, 59, 61, 62, 63, 64, 66, 72, 74, 75, 80, 85, 87, 89, 90, 91, 94, 95, 98], "noisi": [1, 2, 3, 8, 33, 35, 38, 40, 43, 49, 55, 56, 58, 64, 66, 67, 68, 70, 71, 77, 79, 80, 82, 83, 85, 88, 89], "given": [1, 2, 3, 4, 8, 12, 28, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49, 54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98], "matrix": [1, 2, 3, 4, 8, 14, 16, 29, 33, 40, 42, 43, 46, 49, 50, 56, 59, 61, 62, 63, 64, 82, 91, 92], "trace": [1, 79, 80, 87, 89, 90], "valu": [1, 2, 3, 4, 8, 10, 11, 14, 16, 20, 24, 25, 31, 33, 34, 35, 37, 38, 40, 42, 43, 45, 47, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 75, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98], "more": [1, 2, 3, 4, 5, 8, 11, 12, 14, 16, 24, 33, 34, 37, 38, 39, 42, 45, 47, 49, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 70, 71, 72, 74, 76, 78, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 98], "function": [1, 2, 3, 4, 5, 11, 12, 14, 21, 24, 28, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 78, 80, 84, 85, 87, 89, 90, 91, 95, 96, 97, 98], "noise_matrix": [1, 2, 3, 8, 43, 49, 79, 80, 87, 89, 90], "py": [1, 3, 30, 34, 35, 40, 43, 45, 78, 79, 80, 83, 85, 87, 89, 90, 97], "verbos": [1, 2, 4, 5, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 37, 40, 54, 55, 56, 61, 63, 64, 66, 68, 70, 71, 75, 79, 87, 89], "fals": [1, 2, 3, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 37, 38, 40, 44, 48, 49, 50, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 72, 78, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92, 94, 95, 97], "sourc": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75], "prior": [1, 2, 3, 33, 40, 43, 45], "repres": [1, 2, 3, 5, 8, 10, 14, 16, 24, 31, 33, 37, 40, 43, 46, 47, 49, 54, 55, 56, 59, 61, 62, 63, 64, 66, 68, 70, 71, 75, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98], "p": [1, 2, 3, 4, 8, 33, 40, 42, 43, 49, 54, 62, 63, 64, 68, 82, 83, 87, 89, 98], "true_label": [1, 2, 3, 33, 43, 49, 87, 89], "k": [1, 2, 3, 4, 6, 8, 10, 14, 16, 17, 21, 24, 26, 29, 33, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 68, 70, 71, 72, 74, 75, 78, 79, 80, 85, 87, 89, 90, 91, 92, 95, 96, 98], "check": [1, 2, 4, 7, 8, 10, 14, 25, 31, 34, 37, 38, 44, 50, 53, 59, 62, 66, 76, 78, 79, 80, 85, 86, 87, 89, 90, 94, 96, 97], "learnabl": 1, "mean": [1, 2, 5, 6, 10, 11, 20, 24, 35, 38, 43, 45, 47, 61, 66, 80, 83, 85, 87, 89, 90, 91, 92, 94, 97], "achiev": [1, 2, 34, 35, 38, 66, 85, 89, 98], "better": [1, 4, 40, 54, 56, 64, 66, 67, 76, 78, 80, 82, 83, 85, 87, 90, 91, 92, 97, 98], "than": [1, 2, 3, 5, 8, 24, 26, 29, 33, 40, 49, 53, 54, 59, 61, 63, 64, 66, 70, 74, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98], "random": [1, 2, 3, 5, 8, 16, 29, 37, 45, 54, 64, 66, 78, 79, 80, 82, 85, 86, 87, 89, 90, 92, 96], "perform": [1, 2, 5, 8, 24, 26, 29, 34, 38, 45, 62, 66, 76, 79, 85, 87, 89, 90, 93, 94, 96, 97], "averag": [1, 3, 4, 8, 20, 26, 33, 34, 38, 45, 47, 54, 55, 62, 63, 64, 85, 89, 92], "amount": [1, 3, 86], "paramet": [1, 2, 3, 4, 7, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 78, 80, 83, 86, 96, 97], "np": [1, 2, 3, 4, 5, 14, 16, 29, 33, 35, 37, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "ndarrai": [1, 2, 3, 4, 14, 21, 23, 24, 28, 29, 33, 35, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 74, 98], "an": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 47, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "arrai": [1, 2, 3, 4, 5, 8, 10, 14, 16, 24, 33, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 78, 79, 80, 83, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "shape": [1, 2, 3, 4, 14, 16, 33, 35, 37, 39, 40, 42, 43, 44, 45, 47, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 78, 84, 85, 87, 90, 91, 92, 95, 98], "condit": [1, 2, 3, 43, 48, 49, 64, 86, 87, 98], "probabl": [1, 2, 3, 4, 6, 8, 14, 21, 23, 26, 33, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 72, 74, 75, 76, 77, 84, 85, 87, 88, 90, 91, 92, 95, 98], "k_": [1, 2, 3, 43, 49], "k_y": [1, 2, 3, 43, 49], "contain": [1, 2, 3, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 37, 38, 40, 42, 43, 48, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97], "fraction": [1, 2, 3, 8, 18, 35, 43, 49, 54, 66, 82, 85], "exampl": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 89, 90, 91, 93, 94, 95, 96, 97, 98], "everi": [1, 2, 3, 4, 14, 34, 38, 40, 43, 48, 49, 56, 64, 66, 67, 78, 79, 80, 82, 83, 85, 86, 89, 91, 93, 95, 96, 98], "class": [1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98], "other": [1, 2, 3, 4, 8, 14, 20, 25, 33, 34, 36, 37, 38, 40, 43, 46, 49, 50, 52, 54, 55, 58, 62, 63, 64, 66, 71, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 95, 98], "assum": [1, 2, 3, 10, 40, 43, 48, 49, 64, 68, 71, 85, 90, 92, 94, 95, 98], "column": [1, 2, 3, 4, 8, 10, 11, 28, 33, 37, 40, 43, 45, 46, 48, 49, 54, 55, 56, 58, 59, 62, 63, 64, 66, 71, 72, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98], "sum": [1, 2, 3, 24, 29, 33, 43, 45, 49, 55, 56, 58, 61, 66, 79, 80, 85, 86, 87, 89, 90, 95, 98], "1": [1, 2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 84, 85, 93], "each": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 18, 20, 21, 23, 24, 29, 30, 33, 34, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 49, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "true": [1, 2, 3, 4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 40, 43, 45, 48, 49, 50, 53, 54, 55, 56, 59, 61, 62, 63, 64, 66, 68, 70, 71, 75, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "return": [1, 2, 3, 4, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98], "type": [1, 2, 3, 4, 5, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 90, 91, 94, 95, 96, 98], "bool": [1, 2, 3, 4, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 37, 38, 40, 45, 48, 49, 54, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 75], "is_valid": 1, "whether": [1, 3, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 34, 37, 38, 40, 49, 54, 55, 56, 58, 59, 75, 78, 80, 82, 83, 84, 85, 86, 87, 94, 97, 98], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 54, 56, 58, 61, 62, 63, 64, 66, 67, 72, 74, 75, 76, 78, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 98], "perfect": [1, 2, 33, 66, 87, 91], "exactli": [1, 3, 8, 33, 34, 38, 40, 57, 63, 79, 80, 82, 83, 86, 87], "yield": [1, 34, 38], "between": [1, 4, 8, 13, 14, 19, 20, 22, 24, 27, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 52, 54, 55, 58, 61, 63, 64, 66, 67, 70, 74, 75, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98], "below": [1, 3, 4, 8, 33, 34, 37, 38, 40, 42, 45, 54, 55, 56, 61, 62, 70, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "we": [1, 2, 3, 4, 5, 8, 11, 20, 34, 37, 38, 40, 45, 49, 50, 54, 61, 62, 64, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "loop": [1, 3, 43, 49, 86, 91], "implement": [1, 2, 3, 7, 12, 20, 34, 35, 37, 38, 43, 49, 66, 76, 78, 79, 82, 92, 93, 96], "what": [1, 4, 7, 8, 14, 30, 33, 35, 37, 40, 54, 55, 59, 61, 78, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "doe": [1, 2, 3, 5, 8, 37, 38, 40, 45, 50, 61, 62, 66, 68, 70, 74, 78, 79, 80, 82, 83, 86, 90, 94, 95, 97], "do": [1, 2, 4, 8, 33, 37, 38, 49, 50, 63, 64, 68, 78, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "fast": 1, "explain": [1, 8], "python": [1, 2, 38, 53, 66, 78, 79, 80, 83, 84, 92, 97], "pseudocod": [1, 93], "happen": [1, 8, 40, 56, 83, 89, 95], "n": [1, 2, 3, 4, 5, 33, 34, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 74, 78, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98], "without": [1, 2, 4, 8, 10, 12, 18, 34, 38, 58, 66, 76, 78, 83, 87, 91, 92, 97], "ani": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 42, 44, 47, 48, 49, 53, 54, 56, 58, 59, 61, 62, 64, 66, 68, 70, 71, 76, 78, 79, 80, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97], "distinct": [1, 16, 49, 98], "natur": [1, 8, 89, 92], "number": [1, 2, 3, 4, 5, 6, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 95, 98], "0": [1, 2, 3, 4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "count_joint": 1, "len": [1, 2, 3, 5, 33, 37, 43, 48, 49, 50, 63, 64, 66, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98], "y": [1, 2, 3, 4, 6, 16, 28, 29, 38, 43, 45, 49, 50, 53, 62, 66, 67, 78, 79, 80, 82, 85, 87, 89, 90, 92, 94, 97], "round": [1, 37, 40, 49, 66, 85, 94], "astyp": [1, 89], "int": [1, 2, 3, 4, 5, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 37, 38, 40, 45, 46, 47, 48, 49, 50, 55, 56, 58, 62, 63, 64, 66, 68, 70, 71, 72, 75, 78, 79, 86, 91, 92], "rang": [1, 3, 4, 5, 10, 43, 45, 47, 49, 62, 66, 67, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 98], "idx_flip": 1, "where": [1, 2, 3, 4, 5, 8, 10, 11, 14, 20, 33, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 78, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98], "pragma": 1, "cover": [1, 3, 77, 84], "choic": [1, 6, 40, 47, 85, 86, 90, 92], "replac": [1, 48, 53, 64, 79, 80, 83, 84, 85, 86, 89, 92, 96, 97], "max_trace_prob": 1, "min_trace_prob": 1, "1e": [1, 3, 64, 78, 79, 80], "05": [1, 8, 24, 28, 48, 62, 66, 72, 74, 82, 84, 85, 87, 91, 92], "max_noise_r": 1, "99999": 1, "min_noise_r": 1, "valid_noise_matrix": [1, 79, 80, 87, 89, 90], "none": [1, 2, 3, 4, 5, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 66, 68, 70, 71, 74, 75, 79, 80, 85, 86, 87, 89, 90, 95], "frac_zero_noise_r": 1, "seed": [1, 2, 3, 8, 24, 36, 38, 45, 66, 78, 79, 80, 82, 84, 87, 89, 90, 96], "max_it": [1, 78, 83, 92, 97], "10000": [1, 37, 84, 85], "x": [1, 2, 3, 4, 8, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 34, 35, 38, 40, 42, 43, 45, 48, 49, 50, 53, 54, 56, 62, 63, 64, 66, 68, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 92, 94, 96, 97], "diagon": [1, 3, 4, 40, 43, 49], "equal": [1, 3, 8, 10, 56, 61, 71, 93], "creat": [1, 2, 7, 14, 16, 34, 37, 38, 40, 49, 66, 76, 78, 82, 83, 85, 86, 95, 97, 98], "impli": [1, 8, 33, 55, 62], "float": [1, 2, 8, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 47, 48, 49, 54, 55, 56, 58, 61, 62, 66, 70, 74, 78, 79, 80, 87, 89, 90], "entri": [1, 3, 4, 33, 34, 38, 40, 42, 46, 47, 49, 54, 55, 56, 59, 82, 83, 87, 90, 91, 94, 96, 97], "maximum": [1, 8, 63, 71, 75, 95], "minimum": [1, 6, 8, 18, 40, 42, 56, 61, 74], "noise_r": 1, "non": [1, 2, 3, 4, 5, 7, 14, 24, 34, 38, 40, 61, 66, 79, 85, 87, 89, 91, 92], "default": [1, 2, 3, 4, 5, 8, 12, 14, 26, 28, 30, 33, 34, 35, 37, 38, 40, 42, 43, 45, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 79, 85, 86, 94, 95], "If": [1, 2, 3, 4, 8, 10, 11, 14, 24, 26, 31, 33, 34, 37, 38, 40, 42, 43, 45, 48, 49, 53, 54, 55, 56, 59, 61, 62, 63, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "have": [1, 2, 3, 4, 5, 8, 14, 19, 22, 24, 27, 33, 34, 36, 37, 38, 40, 43, 45, 49, 53, 54, 55, 56, 59, 61, 62, 63, 64, 66, 67, 71, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "all": [1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 20, 30, 33, 34, 37, 38, 39, 40, 43, 45, 46, 48, 49, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "necessari": [1, 2, 3, 5, 8, 10, 48, 79], "In": [1, 2, 3, 4, 8, 33, 34, 37, 38, 54, 55, 57, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "particular": [1, 4, 8, 11, 12, 14, 17, 18, 20, 24, 25, 26, 29, 34, 38, 49, 54, 58, 62, 66, 71, 75, 76, 78, 80, 83, 85, 89, 90, 92, 94, 96, 97], "satisfi": [1, 3, 33], "requir": [1, 2, 4, 5, 6, 7, 8, 9, 10, 28, 32, 34, 35, 36, 37, 38, 40, 43, 49, 52, 53, 56, 63, 64, 66, 68, 76, 77, 78, 84, 85, 87, 93], "argument": [1, 2, 3, 4, 8, 14, 21, 25, 28, 29, 34, 37, 38, 39, 40, 45, 50, 53, 54, 55, 56, 58, 61, 62, 63, 64, 66, 70, 71, 72, 74, 80, 83, 84, 85, 86, 90, 91, 94, 97, 98], "when": [1, 2, 3, 4, 8, 10, 12, 21, 24, 34, 38, 40, 43, 45, 49, 53, 56, 58, 59, 61, 63, 64, 66, 67, 79, 80, 82, 83, 86, 89, 93, 94, 95, 96, 97, 98], "The": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "rate": [1, 2, 3, 8, 35, 49, 78, 98], "set": [1, 2, 3, 4, 7, 8, 10, 11, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 38, 40, 44, 45, 47, 49, 53, 54, 56, 59, 61, 62, 63, 64, 66, 68, 70, 71, 79, 80, 82, 83, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98], "note": [1, 2, 3, 5, 6, 8, 10, 25, 29, 31, 34, 37, 38, 39, 40, 45, 49, 54, 59, 61, 62, 63, 64, 66, 67, 71, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "you": [1, 2, 3, 4, 5, 8, 12, 14, 33, 34, 36, 37, 38, 40, 45, 52, 53, 54, 56, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "high": [1, 2, 14, 37, 40, 49, 61, 64, 66, 79, 80, 84, 86, 87, 91, 94, 95, 96, 97, 98], "mai": [1, 2, 3, 4, 8, 11, 19, 20, 22, 27, 33, 34, 36, 37, 38, 40, 43, 45, 49, 54, 55, 59, 61, 62, 63, 64, 66, 68, 71, 75, 77, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98], "imposs": [1, 8, 87], "also": [1, 2, 3, 4, 5, 8, 20, 31, 33, 34, 37, 38, 40, 45, 48, 53, 54, 63, 66, 71, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "low": [1, 8, 49, 54, 76, 79, 80, 83, 87, 91, 95], "zero": [1, 3, 4, 34, 38, 42, 49, 50, 79, 86, 90, 91, 92], "forc": [1, 2, 3, 4, 38, 79, 98], "instead": [1, 2, 3, 8, 11, 14, 30, 33, 34, 37, 38, 40, 43, 49, 53, 54, 56, 58, 62, 63, 64, 66, 67, 70, 72, 74, 77, 78, 82, 83, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98], "onli": [1, 2, 3, 4, 5, 8, 14, 21, 24, 28, 33, 34, 37, 38, 39, 40, 42, 43, 48, 49, 50, 53, 54, 63, 64, 66, 68, 70, 74, 75, 76, 78, 79, 80, 83, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98], "guarante": [1, 3, 4, 13, 19, 22, 27, 34, 36, 38, 41, 43, 52, 77], "produc": [1, 2, 4, 8, 14, 45, 54, 64, 66, 68, 70, 76, 78, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98], "higher": [1, 4, 8, 33, 40, 42, 43, 45, 47, 54, 55, 66, 80, 83, 85, 91], "opposit": [1, 98], "occur": [1, 3, 8, 33, 48, 61, 79, 80, 85, 86, 92], "small": [1, 3, 8, 33, 37, 45, 49, 55, 62, 83, 84, 86, 90, 92, 97], "numpi": [1, 3, 4, 5, 8, 10, 16, 29, 37, 38, 39, 45, 47, 48, 50, 53, 58, 61, 66, 67, 72, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "max": [1, 40, 63, 64, 80, 86, 92], "tri": [1, 34, 38, 93], "befor": [1, 2, 3, 34, 38, 47, 49, 63, 66, 71, 83, 85, 87, 89, 92, 94, 96, 97], "option": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 21, 24, 28, 33, 34, 37, 38, 40, 43, 45, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 82, 85, 86, 87, 90, 94, 95, 96], "left": [1, 2, 40, 42, 47, 49, 56, 59, 62, 79, 80, 90, 91, 92, 95], "stochast": 1, "exceed": 1, "m": [1, 4, 34, 38, 44, 45, 54, 59, 61, 62, 63, 79, 80, 84, 89, 90, 91, 98], "max_prob": 1, "min_prob": 1, "dirichlet": 1, "ones": [1, 34, 38, 53, 85, 87, 95], "length": [1, 4, 10, 24, 25, 33, 35, 40, 49, 56, 59, 63, 64, 66, 68, 71, 75, 78, 90, 92, 95, 96, 98], "must": [1, 2, 3, 4, 5, 14, 33, 34, 35, 36, 38, 40, 43, 45, 46, 49, 52, 53, 54, 55, 56, 63, 64, 66, 68, 70, 71, 72, 74, 75, 78, 89, 93, 95, 98], "max_balls_per_bin": 1, "min_balls_per_bin": 1, "uniformli": 1, "integ": [1, 2, 3, 8, 10, 33, 37, 40, 46, 49, 50, 54, 56, 62, 68, 70, 71, 72, 74, 75, 78, 85, 89, 90, 91, 95, 96, 97, 98], "ball": [1, 84], "bin": [1, 3, 56, 79, 80, 92], "ensur": [1, 2, 8, 34, 38, 49, 50, 61, 64, 66, 78, 79, 80, 83, 85, 86, 87, 92, 93, 94, 96, 97], "most": [1, 3, 4, 5, 8, 14, 33, 37, 40, 45, 53, 54, 55, 56, 59, 61, 62, 63, 64, 67, 70, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97], "least": [1, 8, 16, 29, 33, 37, 54, 55, 61, 64, 74, 80, 85, 86, 89, 92, 95], "int_arrai": [1, 49], "can": [2, 3, 4, 5, 6, 7, 11, 12, 14, 30, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "model": [2, 3, 4, 8, 14, 16, 28, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 48, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 80, 84, 88, 93, 95, 98], "For": [2, 3, 4, 5, 7, 8, 9, 14, 20, 32, 33, 34, 37, 38, 40, 43, 45, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98], "regular": [2, 3, 37, 53], "multi": [2, 3, 8, 33, 34, 37, 38, 40, 44, 45, 46, 49, 50, 55, 56, 57, 58, 63, 64, 76, 85, 87, 88], "task": [2, 4, 5, 8, 9, 10, 12, 13, 14, 23, 28, 30, 33, 37, 43, 45, 46, 47, 49, 54, 56, 64, 66, 76, 78, 83, 84, 85, 87, 90, 92, 94, 95, 97, 98], "cleanlearn": [2, 3, 8, 21, 28, 34, 49, 53, 65, 66, 67, 76, 77, 94, 96, 97], "wrap": [2, 34, 38, 53, 63, 66, 76, 79, 80, 82, 83, 87, 94, 96, 97], "instanc": [2, 3, 4, 5, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 38, 45, 53, 62, 63, 66, 71, 78, 79, 80, 82, 83, 86, 87, 91, 96, 97], "sklearn": [2, 3, 4, 6, 8, 16, 29, 33, 38, 45, 49, 53, 63, 66, 67, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97], "classifi": [2, 3, 38, 45, 49, 54, 57, 63, 64, 76, 77, 78, 82, 83, 85, 89, 90, 92, 93, 95, 96, 97, 98], "adher": [2, 38, 66], "estim": [2, 3, 4, 7, 11, 20, 33, 37, 38, 40, 43, 49, 54, 55, 56, 61, 63, 66, 68, 70, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 88, 91, 92, 93, 94, 95, 98], "api": [2, 3, 12, 53, 59, 62, 63, 66, 77, 85, 94], "defin": [2, 3, 4, 5, 8, 12, 20, 33, 34, 35, 37, 38, 40, 64, 66, 68, 78, 79, 80, 82, 85, 89, 92, 98], "four": [2, 8, 84, 87, 98], "clf": [2, 3, 4, 45, 66, 76, 82, 85, 87, 90, 96], "fit": [2, 3, 4, 6, 8, 16, 36, 38, 52, 53, 63, 65, 66, 76, 79, 80, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 96, 97, 98], "sample_weight": [2, 38, 66, 87], "predict_proba": [2, 4, 33, 36, 38, 45, 52, 53, 78, 79, 80, 82, 83, 85, 87, 89, 90, 92, 96], "predict": [2, 3, 4, 6, 8, 14, 20, 21, 23, 26, 28, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 84, 85, 87, 88, 92, 94, 95, 97, 98], "score": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 37, 39, 40, 42, 45, 47, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 94, 96, 97], "data": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 45, 46, 49, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 71, 72, 73, 74, 75, 77, 81, 86, 88, 93, 97], "e": [2, 3, 4, 8, 10, 20, 33, 34, 37, 38, 40, 43, 45, 46, 49, 50, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97], "featur": [2, 3, 4, 6, 8, 14, 17, 21, 24, 25, 26, 28, 29, 45, 49, 63, 66, 76, 79, 80, 82, 83, 85, 87, 89, 90, 94, 96], "element": [2, 3, 4, 33, 39, 40, 42, 49, 54, 56, 64, 71, 72, 74, 78, 83, 85, 97, 98], "first": [2, 4, 8, 15, 24, 25, 33, 37, 45, 49, 54, 55, 59, 62, 64, 66, 78, 79, 82, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "index": [2, 8, 24, 33, 40, 48, 49, 50, 55, 64, 66, 71, 74, 75, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 98], "should": [2, 3, 4, 5, 8, 12, 20, 24, 29, 33, 34, 37, 38, 40, 42, 43, 45, 47, 48, 49, 53, 54, 55, 58, 59, 61, 62, 63, 64, 66, 67, 71, 72, 74, 75, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "correspond": [2, 3, 4, 8, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 33, 34, 37, 38, 39, 40, 42, 43, 45, 48, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 71, 72, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "differ": [2, 4, 5, 8, 11, 13, 19, 22, 24, 25, 27, 33, 34, 36, 37, 38, 40, 41, 45, 49, 50, 52, 54, 59, 61, 63, 66, 78, 79, 80, 82, 83, 86, 87, 89, 90, 92, 93, 94, 96], "sampl": [2, 3, 4, 6, 8, 14, 18, 40, 42, 45, 56, 59, 62, 64, 66, 67, 76, 77, 84, 85, 87, 88, 90, 91, 94, 95, 97, 98], "size": [2, 8, 29, 34, 37, 38, 40, 45, 56, 61, 62, 66, 68, 70, 82, 85, 86, 87, 89, 90, 91, 93, 95, 97], "here": [2, 4, 5, 8, 12, 37, 40, 43, 53, 54, 55, 56, 58, 59, 62, 63, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "re": [2, 4, 34, 38, 48, 54, 66, 76, 78, 79, 82, 83, 85, 94, 95, 96, 97, 98], "weight": [2, 8, 34, 35, 38, 45, 54, 61, 64, 66, 78, 79, 80, 83, 97], "loss": [2, 35, 53, 64, 66, 86], "while": [2, 3, 8, 34, 37, 38, 44, 45, 49, 66, 76, 85, 86, 87, 89, 90, 94], "train": [2, 3, 4, 8, 14, 16, 34, 35, 36, 38, 45, 49, 53, 54, 59, 62, 63, 66, 67, 77, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 93, 95, 98], "support": [2, 3, 4, 10, 12, 30, 31, 37, 39, 45, 49, 50, 63, 64, 74, 76, 77, 78, 79, 80, 85, 86], "your": [2, 3, 4, 7, 8, 14, 33, 34, 36, 37, 38, 40, 45, 49, 52, 53, 54, 55, 56, 58, 63, 64, 66, 67, 68, 70, 71, 77, 78, 82, 84, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "recommend": [2, 4, 5, 8, 11, 14, 37, 40, 54, 79, 80, 85, 86, 93, 94], "furthermor": 2, "correctli": [2, 3, 8, 33, 34, 38, 40, 43, 50, 55, 56, 61, 62, 66, 68, 83, 85, 90, 91, 94, 95, 97], "clonabl": [2, 66], "via": [2, 4, 5, 8, 11, 14, 16, 20, 33, 35, 37, 38, 45, 49, 54, 59, 62, 63, 64, 66, 67, 70, 74, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98], "base": [2, 3, 4, 5, 8, 10, 11, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 58, 61, 63, 64, 66, 67, 70, 72, 74, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 98], "clone": [2, 66, 90], "intern": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 62, 66, 72, 77, 78, 79, 85, 87, 89, 90, 91, 92, 94, 98], "multipl": [2, 3, 4, 10, 11, 31, 33, 40, 48, 54, 55, 56, 58, 61, 62, 66, 76, 79, 80, 85, 86, 88, 90, 91, 94], "g": [2, 3, 4, 8, 10, 20, 33, 34, 38, 40, 46, 49, 56, 57, 59, 62, 63, 64, 66, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97], "manual": [2, 66, 78, 85, 92, 93, 94, 96, 97, 98], "pytorch": [2, 34, 35, 38, 66, 76, 78, 85, 88, 90, 95], "call": [2, 3, 4, 8, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 45, 49, 53, 63, 66, 78, 79, 80, 83, 85, 87, 90, 92, 93, 94, 95, 97, 98], "__init__": [2, 35, 66, 86], "independ": [2, 3, 8, 55, 66, 83, 93, 94, 98], "compat": [2, 34, 37, 38, 53, 66, 67, 70, 74, 76, 85, 93, 94, 96, 97], "neural": [2, 35, 53, 63, 66, 78, 85, 86, 90, 92, 94], "network": [2, 34, 35, 38, 53, 63, 66, 78, 83, 85, 86, 90, 92, 94, 97], "typic": [2, 34, 38, 63, 66, 78, 80, 82, 83, 86, 92, 93, 96, 97], "initi": [2, 3, 11, 16, 34, 38, 54, 66, 83, 85, 96], "insid": [2, 38, 66, 85, 87], "There": [2, 3, 5, 76, 87, 89], "two": [2, 3, 8, 16, 24, 33, 34, 37, 38, 46, 49, 59, 61, 62, 77, 79, 80, 82, 83, 85, 86, 87, 90, 94, 95, 97, 98], "new": [2, 5, 12, 20, 34, 37, 38, 44, 48, 49, 54, 66, 78, 79, 83, 84, 85, 92, 93, 97, 98], "notion": 2, "confid": [2, 3, 8, 20, 33, 37, 40, 43, 45, 49, 54, 55, 56, 59, 61, 62, 63, 64, 66, 70, 74, 76, 82, 83, 86, 87, 89, 90, 91, 93, 95, 96, 98], "packag": [2, 4, 5, 7, 8, 9, 13, 32, 36, 40, 41, 49, 52, 59, 62, 66, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "prune": [2, 3, 40, 56, 66, 77, 91], "everyth": [2, 62, 87], "els": [2, 62, 79, 84, 85, 86, 89, 90, 91], "mathemat": [2, 3, 8, 43, 90], "keep": [2, 11, 12, 49, 76, 79, 84, 85, 95], "belong": [2, 3, 8, 33, 40, 42, 43, 55, 56, 57, 58, 63, 64, 68, 72, 74, 75, 80, 86, 87, 90, 92, 95, 98], "2": [2, 3, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 56, 58, 59, 62, 63, 64, 66, 67, 71, 72, 74, 75, 84, 85, 93], "error": [2, 3, 4, 8, 34, 38, 39, 40, 42, 43, 49, 55, 56, 58, 59, 61, 62, 64, 66, 68, 70, 71, 74, 77, 78, 79, 80, 82, 83, 84, 88, 96], "erron": [2, 3, 33, 40, 43, 49, 55, 56, 64, 66, 67, 68, 92, 94], "import": [2, 3, 4, 5, 6, 8, 10, 11, 12, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 37, 39, 45, 47, 48, 54, 58, 61, 66, 67, 72, 74, 75, 76, 82, 83, 85, 90, 91, 92, 94, 95, 96, 97, 98], "linear_model": [2, 4, 33, 49, 66, 76, 78, 79, 80, 83, 85, 87, 89, 92, 97], "logisticregress": [2, 3, 4, 33, 49, 76, 78, 79, 80, 83, 85, 87, 89, 92, 97], "logreg": 2, "cl": [2, 12, 28, 66, 76, 85, 87, 94, 96, 97], "pass": [2, 3, 4, 6, 8, 10, 11, 12, 14, 21, 28, 30, 34, 37, 38, 40, 44, 45, 49, 53, 54, 56, 63, 64, 66, 72, 76, 78, 79, 80, 83, 84, 85, 87, 89, 91, 92, 94, 97], "x_train": [2, 79, 80, 87, 89, 90, 94, 96], "labels_maybe_with_error": 2, "had": [2, 3, 66, 91], "issu": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 88, 89, 93, 94, 97], "pred": [2, 40, 49, 93, 94, 96, 97], "x_test": [2, 79, 80, 87, 90, 94, 96], "might": [2, 4, 54, 66, 71, 79, 80, 85, 86, 91, 96, 97], "case": [2, 3, 11, 33, 45, 54, 66, 78, 79, 80, 82, 84, 85, 86, 87, 92, 94, 96, 97, 98], "standard": [2, 3, 4, 28, 33, 40, 53, 55, 56, 58, 64, 66, 76, 79, 80, 82, 84, 87, 91, 96], "adapt": [2, 34, 36, 49, 52, 66, 92], "skorch": [2, 66, 76, 85], "kera": [2, 52, 59, 62, 66, 76, 85, 91], "scikera": [2, 53, 66, 85], "open": [2, 37, 84, 91, 98], "doesn": [2, 66, 76], "t": [2, 3, 5, 8, 15, 25, 34, 35, 37, 38, 39, 40, 45, 47, 48, 58, 63, 64, 66, 72, 74, 75, 76, 79, 80, 82, 83, 84, 86, 87, 90, 91, 94, 98], "alreadi": [2, 4, 8, 14, 34, 37, 38, 43, 53, 54, 66, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 96, 97], "exist": [2, 4, 8, 10, 16, 34, 37, 38, 48, 53, 59, 61, 63, 66, 76, 77, 79, 80, 83, 89, 97, 98], "made": [2, 4, 14, 34, 38, 66, 83, 85, 86, 89, 91, 93, 94, 96, 97], "easi": [2, 43, 66, 79, 80, 84, 85, 87, 90], "inherit": [2, 5, 35, 66], "baseestim": [2, 38, 66], "yourmodel": [2, 66], "def": [2, 5, 12, 34, 38, 53, 66, 78, 79, 80, 84, 85, 86, 87, 89, 90, 92, 94, 97, 98], "self": [2, 3, 4, 5, 8, 10, 11, 12, 14, 29, 34, 35, 37, 38, 40, 45, 63, 64, 66, 79, 83, 84, 86, 90, 95, 96, 97, 98], "refer": [2, 8, 14, 34, 38, 39, 55, 56, 58, 59, 61, 62, 66, 70, 71, 79, 80, 82, 83, 85, 86, 87, 90, 93, 94], "origin": [2, 4, 8, 38, 39, 40, 48, 49, 53, 55, 56, 59, 62, 63, 66, 67, 70, 72, 74, 79, 82, 83, 85, 86, 87, 91, 92, 94, 96, 97, 98], "total": [2, 3, 33, 37, 49, 55, 75, 85, 86, 95], "state": [2, 3, 4, 34, 35, 38, 44, 66, 87, 90, 91, 98], "art": [2, 35, 87, 90], "northcutt": [2, 3, 33, 63, 64], "et": [2, 3, 33, 35, 63, 64], "al": [2, 3, 33, 35, 63, 64], "2021": [2, 3, 33, 63, 64], "weak": [2, 62], "supervis": [2, 8, 79, 80, 85, 89], "find": [2, 4, 8, 11, 12, 14, 17, 18, 20, 21, 23, 24, 25, 26, 29, 33, 34, 36, 37, 38, 39, 40, 44, 48, 49, 52, 59, 62, 63, 64, 66, 68, 72, 74, 77, 79, 88, 93], "uncertainti": [2, 8, 42, 63, 66, 85, 92, 94], "It": [2, 3, 4, 5, 8, 10, 11, 14, 20, 25, 28, 30, 31, 34, 38, 40, 43, 45, 54, 61, 62, 66, 76, 79, 80, 83, 85, 86, 87, 90, 93, 97], "work": [2, 3, 5, 8, 10, 28, 33, 34, 37, 38, 40, 43, 48, 49, 50, 53, 54, 64, 66, 76, 77, 79, 80, 84, 92, 94, 97], "includ": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 48, 49, 52, 54, 55, 58, 59, 63, 64, 66, 70, 71, 72, 74, 76, 77, 79, 80, 82, 83, 85, 86, 87, 90, 91, 92, 98], "deep": [2, 36, 38, 52, 53, 66, 83], "see": [2, 3, 4, 5, 11, 12, 30, 33, 34, 37, 38, 39, 40, 45, 49, 53, 55, 56, 58, 59, 62, 63, 64, 66, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "subfield": 2, "theori": [2, 87], "machin": [2, 4, 12, 14, 30, 36, 52, 66, 79, 80, 84, 89], "across": [2, 3, 4, 5, 8, 11, 20, 33, 37, 45, 55, 62, 63, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94], "varieti": [2, 85, 96, 97], "like": [2, 3, 4, 5, 8, 12, 33, 34, 37, 38, 40, 43, 49, 53, 54, 55, 58, 59, 61, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "pu": [2, 49], "input": [2, 3, 4, 8, 14, 24, 33, 34, 37, 38, 43, 45, 48, 49, 50, 53, 62, 66, 76, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98], "discret": [2, 31, 40, 43, 49, 63, 64, 68, 70, 71], "vector": [2, 3, 4, 8, 14, 40, 43, 45, 46, 49, 63, 64, 76, 78, 79, 80, 82, 83, 86, 87, 90, 91, 92, 95, 97, 98], "would": [2, 3, 4, 34, 37, 38, 40, 49, 56, 66, 76, 79, 85, 86, 87, 92, 94, 97, 98], "obtain": [2, 4, 6, 8, 14, 40, 54, 56, 59, 62, 64, 67, 78, 80, 83, 85, 89, 91, 93, 95, 98], "been": [2, 33, 40, 43, 48, 49, 54, 55, 59, 61, 63, 64, 66, 78, 79, 82, 85, 87, 89, 90, 91, 92, 95, 98], "dure": [2, 8, 14, 63, 66, 78, 82, 83, 85, 87, 90, 93, 94, 96, 97, 98], "denot": [2, 3, 43, 45, 49, 56, 63, 64, 74], "tild": 2, "paper": [2, 8, 54, 63, 72, 74, 84, 87, 89, 92, 94, 98], "cv_n_fold": [2, 3, 66, 97], "5": [2, 3, 4, 6, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 38, 40, 42, 44, 45, 49, 54, 55, 58, 59, 62, 66, 67, 74, 79, 83, 84, 85, 90, 91, 92, 93, 95, 97, 98], "converge_latent_estim": [2, 3], "pulearn": [2, 49], "find_label_issues_kwarg": [2, 8, 66, 77, 85, 87], "label_quality_scores_kwarg": [2, 8], "low_memori": [2, 56, 72, 85], "clean": [2, 61, 64, 66, 67, 76, 79, 80, 84, 94, 96, 97], "even": [2, 3, 5, 33, 37, 42, 43, 49, 66, 78, 85, 87, 89, 90, 91], "messi": [2, 66, 87], "ridden": [2, 66], "autom": [2, 66, 76, 80, 84, 85], "robust": [2, 43, 66, 80, 85], "prone": [2, 66], "out": [2, 3, 4, 8, 14, 26, 34, 38, 40, 45, 53, 56, 57, 59, 62, 63, 64, 66, 67, 75, 76, 77, 84, 85, 87, 88, 90, 91, 92, 94, 95, 97, 98], "current": [2, 3, 5, 8, 11, 12, 20, 34, 38, 39, 40, 45, 54, 61, 66, 79, 80, 85, 89, 91], "intend": [2, 11, 12, 13, 14, 30, 31, 41, 54, 70, 74, 78, 79, 80, 83, 87], "A": [2, 3, 4, 5, 8, 10, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 38, 40, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 58, 61, 62, 63, 64, 66, 68, 70, 71, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 91, 93, 96, 97, 98], "follow": [2, 3, 8, 12, 28, 31, 33, 34, 37, 38, 45, 47, 54, 55, 59, 61, 62, 63, 66, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "experiment": [2, 34, 35, 37, 38, 39, 56, 77, 85], "wrapper": [2, 53, 78, 94, 96, 97], "around": [2, 61, 79, 80, 91, 92, 98], "fasttext": [2, 52], "store": [2, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 63, 66, 82, 83, 84, 85, 95, 96, 97, 98], "along": [2, 45, 56, 74, 79, 80, 85, 86, 92], "dimens": [2, 49, 68, 71, 85, 86, 92, 95], "select": [2, 7, 8, 24, 54, 64, 85, 86, 89, 92], "split": [2, 3, 4, 8, 10, 37, 45, 48, 49, 66, 78, 79, 80, 82, 83, 84, 86, 87, 90, 93, 96, 98], "cross": [2, 3, 8, 33, 40, 43, 44, 45, 56, 59, 62, 64, 66, 67, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 96, 97, 98], "fold": [2, 3, 33, 40, 43, 66, 78, 82, 84, 85, 91, 95, 96], "By": [2, 33, 55, 56, 66, 79, 85, 95], "need": [2, 3, 8, 33, 34, 37, 38, 40, 55, 56, 58, 63, 66, 76, 78, 79, 80, 83, 85, 87, 89, 90, 91, 95, 97], "holdout": [2, 3, 66], "comput": [2, 3, 4, 5, 6, 8, 17, 18, 20, 21, 24, 25, 26, 29, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 49, 54, 55, 56, 58, 61, 62, 63, 64, 66, 67, 68, 70, 76, 77, 79, 80, 84, 87, 88, 91, 92, 94, 95, 97], "them": [2, 3, 4, 5, 7, 8, 9, 10, 25, 32, 34, 36, 37, 38, 40, 52, 54, 63, 66, 77, 79, 80, 82, 83, 85, 86, 89, 90, 92, 94, 95, 96, 97, 98], "numer": [2, 3, 4, 8, 11, 20, 28, 31, 45, 61, 63, 66, 71, 76, 77, 78, 79, 80, 81, 83, 86, 87, 89, 90, 92, 94, 96, 97], "consist": [2, 3, 34, 38, 49, 54, 95, 98], "latent": [2, 3, 43], "thei": [2, 3, 4, 13, 19, 22, 24, 27, 34, 35, 36, 38, 40, 41, 47, 49, 53, 56, 61, 64, 66, 67, 70, 74, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 92, 94, 97, 98], "relat": [2, 3, 11, 17, 18, 24, 25, 26, 29, 43, 49, 55, 66, 80, 83], "close": [2, 3, 8, 37, 43, 63, 78, 79, 80, 82, 83, 85, 86, 87, 91], "form": [2, 3, 8, 34, 35, 38, 43, 48, 49, 64, 66, 85], "equival": [2, 3, 34, 38, 43, 63, 92, 94], "iter": [2, 3, 33, 34, 38, 40, 49, 55, 56, 66, 85, 89, 95], "enforc": [2, 34, 38, 49], "perfectli": [2, 33, 55, 87], "certain": [2, 3, 4, 34, 38, 53, 62, 66, 79, 80, 84, 91, 92], "dict": [2, 3, 4, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 40, 44, 45, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 74, 79, 80, 85, 86, 98], "keyword": [2, 3, 4, 8, 14, 21, 25, 28, 34, 37, 38, 40, 42, 45, 48, 53, 54, 56, 63, 64, 66, 72, 74, 79], "filter": [2, 3, 8, 37, 39, 48, 55, 57, 58, 60, 62, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 83, 84, 85, 86, 90, 91, 94, 95, 96, 97, 98], "find_label_issu": [2, 3, 8, 28, 36, 37, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 85, 90, 91, 94, 95, 96, 97, 98], "particularli": [2, 76, 89, 92], "filter_bi": [2, 3, 37, 40, 56, 77, 85], "frac_nois": [2, 40, 56, 72, 85], "min_examples_per_class": [2, 40, 56, 80, 85, 87], "impact": [2, 8, 79, 80, 86], "ml": [2, 4, 8, 13, 66, 76, 79, 80, 82, 83, 86, 89, 90, 94, 96, 97], "accuraci": [2, 35, 64, 78, 85, 86, 87, 89, 92, 94, 95, 96, 97], "n_job": [2, 37, 40, 56, 68, 70, 72, 85, 92, 95], "disabl": [2, 34, 38, 40, 92], "process": [2, 3, 5, 11, 14, 34, 37, 38, 40, 48, 54, 56, 62, 68, 70, 72, 78, 79, 85, 89, 93, 97], "caus": [2, 40, 45, 79, 80, 85], "rank": [2, 3, 8, 33, 37, 39, 40, 45, 55, 56, 57, 59, 60, 62, 63, 65, 69, 71, 72, 73, 75, 76, 77, 79, 80, 84, 85, 90, 91, 92, 95, 96, 97, 98], "get_label_quality_scor": [2, 36, 37, 39, 40, 41, 45, 54, 56, 57, 58, 59, 60, 61, 64, 65, 67, 69, 70, 72, 73, 74, 77, 87, 90, 91, 95, 98], "adjust_pred_prob": [2, 8, 58, 63, 64, 87], "control": [2, 4, 7, 8, 14, 37, 40, 54, 62, 63, 66, 72, 74, 79, 80, 84, 85], "how": [2, 3, 4, 8, 10, 11, 12, 14, 20, 33, 34, 35, 37, 38, 43, 49, 54, 55, 58, 59, 61, 63, 64, 66, 70, 74, 76, 79, 80, 82, 83, 84, 86, 91, 92, 93, 94, 95, 96, 97], "much": [2, 8, 33, 37, 40, 66, 85, 87, 89, 92], "output": [2, 3, 4, 8, 14, 34, 35, 38, 43, 49, 53, 54, 55, 59, 61, 62, 63, 66, 70, 71, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 91, 92, 93, 94, 97], "print": [2, 4, 5, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 40, 49, 54, 55, 56, 61, 63, 64, 66, 68, 70, 71, 75, 77, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "suppress": [2, 37, 54, 61, 63, 64, 66, 68, 70, 71, 95, 98], "statement": [2, 37, 54, 61, 63, 64, 66, 68, 70, 71], "big": [2, 37, 56, 62, 66, 87], "limit": [2, 4, 14, 37, 56, 91, 95, 98], "memori": [2, 34, 37, 38, 56, 62, 68, 70, 79, 95], "label_issues_batch": [2, 36, 56, 85], "find_label_issues_batch": [2, 36, 37, 56, 85], "pred_prob": [2, 3, 4, 6, 8, 14, 21, 23, 24, 26, 29, 33, 37, 39, 40, 42, 43, 44, 45, 46, 49, 50, 54, 55, 56, 58, 59, 62, 63, 64, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97], "threshold": [2, 3, 5, 8, 16, 17, 18, 20, 26, 28, 29, 37, 61, 62, 63, 64, 70, 74, 79, 91, 92, 95, 98], "inverse_noise_matrix": [2, 3, 8, 43, 49, 77, 87], "label_issu": [2, 37, 40, 56, 59, 66, 68, 77, 78, 83, 85, 86, 87, 90, 94, 96, 97], "clf_kwarg": [2, 3, 8, 66], "clf_final_kwarg": [2, 66], "validation_func": [2, 3, 8], "correct": [2, 4, 8, 33, 37, 40, 42, 54, 55, 56, 58, 59, 61, 62, 64, 66, 67, 70, 74, 76, 78, 82, 83, 86, 87, 89, 91, 93, 94], "result": [2, 3, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 37, 38, 40, 42, 47, 49, 56, 58, 59, 62, 64, 66, 67, 68, 70, 74, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 94, 95, 96, 97, 98], "identifi": [2, 3, 4, 5, 8, 10, 14, 25, 30, 33, 37, 39, 40, 56, 59, 62, 64, 66, 67, 68, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 90, 92, 94, 95, 96, 97, 98], "final": [2, 8, 66, 82, 91, 93, 94, 96], "remain": [2, 66, 77, 86, 90, 94, 96, 97, 98], "datasetlik": [2, 49, 66], "beyond": [2, 4, 5, 7, 9, 32, 76, 94, 95], "pd": [2, 3, 4, 5, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 44, 53, 54, 55, 66, 74, 78, 79, 80, 82, 83, 85, 87, 89, 94, 96, 97, 98], "datafram": [2, 3, 4, 5, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 37, 44, 49, 50, 53, 54, 55, 66, 71, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 89, 94, 95, 97, 98], "scipi": [2, 4, 11, 49], "spars": [2, 4, 8, 11, 14, 16, 29, 49, 50, 82], "csr_matrix": [2, 4, 11, 14, 16, 29], "torch": [2, 34, 35, 38, 78, 83, 84, 86, 92, 97], "util": [2, 4, 8, 14, 30, 34, 35, 38, 41, 54, 59, 62, 66, 76, 77, 78, 79, 80, 85, 86, 87, 92], "tensorflow": [2, 49, 53, 76, 78, 85], "object": [2, 4, 8, 10, 11, 14, 30, 34, 35, 37, 38, 45, 49, 50, 53, 56, 59, 60, 61, 62, 63, 66, 74, 76, 78, 80, 82, 86, 87, 88, 90, 94, 97], "list": [2, 3, 4, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 40, 46, 48, 49, 50, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 94, 97, 98], "index_list": 2, "subset": [2, 3, 4, 14, 33, 37, 40, 49, 64, 71, 75, 78, 82, 83, 85, 86, 90, 91, 92, 93, 94, 96, 97, 98], "wa": [2, 3, 10, 12, 37, 49, 54, 55, 61, 63, 75, 78, 79, 80, 82, 83, 85, 87, 90, 91, 93, 95, 96, 97, 98], "abl": [2, 3, 8, 66, 78, 85, 87, 89, 90], "format": [2, 3, 4, 8, 10, 34, 37, 38, 40, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 59, 62, 63, 64, 66, 68, 70, 71, 74, 75, 78, 79, 80, 82, 84, 86, 89, 94, 95, 96, 98], "make": [2, 3, 4, 16, 34, 37, 38, 45, 53, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "sure": [2, 4, 37, 40, 45, 78, 79, 80, 82, 83, 84, 86, 89, 90, 91, 92, 94, 96, 97], "shuffl": [2, 8, 49, 78, 83, 86, 90, 92], "ha": [2, 3, 4, 8, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 39, 43, 45, 48, 49, 54, 59, 61, 66, 72, 74, 75, 76, 78, 79, 80, 82, 83, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98], "batch": [2, 37, 49, 53, 54, 68, 70, 85, 86, 92], "order": [2, 4, 8, 31, 33, 34, 38, 39, 40, 43, 44, 45, 49, 54, 55, 56, 59, 62, 63, 64, 68, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 94, 95, 97, 98], "destroi": [2, 49], "oper": [2, 34, 37, 38, 49, 53, 64, 76, 83, 85, 92, 96, 97], "eg": [2, 4, 8, 49, 59, 62, 79, 80, 85], "repeat": [2, 49, 54, 89, 92], "appli": [2, 34, 36, 38, 40, 45, 46, 48, 49, 58, 63, 72, 78, 79, 80, 82, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97], "array_lik": [2, 3, 33, 40, 49, 56, 63, 67], "some": [2, 3, 4, 8, 12, 20, 33, 34, 36, 38, 40, 43, 48, 49, 52, 54, 55, 56, 58, 59, 62, 63, 64, 66, 68, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "seri": [2, 3, 37, 49, 50, 66, 74, 85], "row": [2, 3, 4, 8, 11, 25, 33, 37, 40, 42, 43, 49, 54, 55, 56, 58, 63, 64, 66, 71, 72, 74, 75, 78, 79, 82, 83, 84, 85, 86, 89, 90, 92, 96, 98], "rather": [2, 3, 4, 24, 33, 49, 53, 54, 61, 70, 74, 89, 93, 94, 95, 97, 98], "leav": [2, 40], "per": [2, 3, 4, 5, 11, 33, 37, 40, 45, 48, 54, 55, 56, 58, 61, 62, 64, 67, 68, 70, 74, 80, 85, 91, 98], "determin": [2, 3, 8, 10, 14, 20, 24, 28, 33, 37, 40, 45, 49, 54, 56, 59, 61, 64, 70, 74, 79, 85, 89, 91, 92, 94], "cutoff": [2, 3, 92], "consid": [2, 3, 4, 8, 11, 14, 21, 24, 26, 29, 33, 34, 38, 40, 49, 54, 61, 63, 64, 67, 70, 74, 78, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 96, 97], "section": [2, 3, 5, 8, 77, 82, 86, 91], "3": [2, 3, 4, 5, 8, 31, 33, 34, 38, 40, 43, 44, 45, 46, 47, 48, 49, 53, 56, 63, 64, 66, 67, 72, 74, 84, 85, 93], "equat": [2, 3, 43], "advanc": [2, 3, 4, 7, 8, 14, 61, 63, 74, 77, 80, 81, 87], "user": [2, 3, 4, 8, 12, 14, 25, 30, 31, 34, 38, 40, 61, 63, 64, 66, 70, 74, 87], "specifi": [2, 3, 4, 6, 8, 11, 12, 14, 16, 29, 30, 34, 37, 38, 40, 45, 48, 54, 55, 56, 59, 61, 63, 64, 66, 67, 75, 77, 78, 80, 83, 86, 89, 91, 94, 97], "automat": [2, 3, 4, 24, 33, 76, 82, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97, 98], "greater": [2, 3, 4, 5, 7, 8, 26, 37, 49, 61, 80, 84, 85, 98], "count": [2, 20, 24, 33, 37, 40, 43, 49, 55, 56, 62, 77, 85, 86, 91], "observ": [2, 3, 43, 78, 79, 80, 89, 92, 94], "mislabel": [2, 8, 33, 37, 39, 40, 43, 54, 55, 56, 59, 61, 64, 70, 72, 74, 76, 78, 82, 83, 85, 86, 87, 91, 94, 96, 97], "one": [2, 3, 4, 5, 8, 24, 33, 34, 37, 38, 39, 40, 45, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 86, 89, 92, 93, 94, 96, 97, 98], "get_label_issu": [2, 36, 37, 65, 66, 87, 94, 96, 97], "either": [2, 3, 5, 8, 34, 37, 38, 40, 54, 56, 61, 63, 64, 68, 70, 80, 85, 90, 91], "boolean": [2, 5, 8, 20, 37, 40, 48, 54, 56, 59, 64, 66, 68, 70, 71, 76, 78, 80, 83, 85, 86, 91, 94, 95, 97], "label_issues_mask": [2, 40, 64, 66, 77], "indic": [2, 3, 4, 5, 8, 11, 20, 33, 37, 38, 39, 40, 42, 45, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 67, 70, 72, 74, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "its": [2, 4, 5, 7, 8, 14, 34, 37, 38, 40, 47, 48, 56, 59, 62, 63, 64, 66, 68, 72, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97, 98], "return_indices_ranked_bi": [2, 37, 40, 56, 72, 77, 85, 87, 96, 97], "significantli": [2, 86, 87, 89, 93], "reduc": [2, 37, 40, 49, 78, 85], "time": [2, 8, 34, 37, 38, 49, 54, 77, 79, 84, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98], "take": [2, 4, 8, 33, 34, 38, 44, 45, 49, 53, 64, 82, 86, 89, 90, 91, 96, 98], "run": [2, 4, 5, 7, 9, 12, 14, 24, 25, 32, 34, 37, 38, 66, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98], "skip": [2, 8, 34, 38, 66, 78, 85, 90, 98], "slow": [2, 3], "step": [2, 5, 24, 45, 62, 85, 86, 87, 89, 93], "caution": [2, 4, 85], "previous": [2, 4, 11, 49, 63, 66, 77, 78, 79, 82, 83, 89, 93, 96], "assign": [2, 5, 8, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 44, 45, 49, 66, 79, 82, 85, 86, 94, 95, 96, 98], "individu": [2, 5, 8, 11, 24, 34, 38, 39, 54, 58, 61, 64, 66, 72, 74, 77, 80, 82, 85, 89, 90, 91, 96, 98], "still": [2, 37, 38, 49, 63, 78, 85, 86, 92, 96], "extra": [2, 34, 38, 49, 53, 54, 55, 66, 83, 85, 86, 89, 92], "receiv": [2, 8, 34, 38, 39, 55, 58, 59, 66, 68, 72, 80, 91], "overwritten": [2, 66], "callabl": [2, 3, 34, 38, 45, 48, 53, 58, 85], "x_val": 2, "y_val": 2, "map": [2, 3, 10, 37, 38, 41, 44, 48, 49, 62, 64, 66, 71, 78, 79, 80, 85, 86, 87, 90, 98], "appropri": [2, 8, 14, 56, 64, 79, 82, 90, 91], "earli": [2, 86], "stop": [2, 86], "x_valid": 2, "y_valid": 2, "could": [2, 5, 8, 20, 33, 49, 63, 79, 82, 86, 90, 94, 96, 98], "f": [2, 5, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "ignor": [2, 34, 38, 48, 53, 66, 71, 75, 78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "allow": [2, 33, 34, 37, 38, 42, 49, 54, 62, 63, 66, 68, 70, 78, 85, 86, 93, 95, 97], "access": [2, 8, 11, 34, 38, 66, 80, 83, 86, 90, 97], "hyperparamet": [2, 58, 63, 86], "purpos": [2, 79, 80, 85, 90, 94], "want": [2, 4, 8, 33, 37, 50, 54, 56, 66, 79, 83, 84, 86, 89, 91, 92, 93, 95, 97, 98], "explicitli": [2, 6, 8, 38, 66, 85], "yourself": [2, 4, 37, 80], "altern": [2, 5, 8, 45, 49, 53, 54, 64, 77, 78, 82, 83, 85, 86, 87, 89, 90, 92, 94, 97], "same": [2, 3, 4, 5, 8, 10, 12, 14, 24, 28, 34, 37, 38, 40, 49, 53, 54, 56, 63, 64, 66, 70, 71, 74, 75, 76, 79, 80, 82, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97], "effect": [2, 8, 25, 34, 38, 54, 63, 66, 82, 83, 85, 86, 92], "offer": [2, 4, 78, 79, 80, 83, 85, 87, 90, 97], "after": [2, 3, 4, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 49, 54, 66, 79, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 97], "attribut": [2, 4, 5, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 37, 38, 45, 63, 66, 79, 96], "label_issues_df": [2, 66, 86], "similar": [2, 8, 33, 34, 38, 49, 54, 58, 59, 61, 63, 66, 70, 74, 79, 80, 82, 83, 85, 86, 87, 91, 92, 95], "document": [2, 3, 4, 8, 12, 14, 33, 34, 37, 38, 39, 40, 45, 48, 53, 55, 56, 58, 61, 62, 63, 66, 70, 71, 72, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98], "descript": [2, 4, 5, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 39, 49, 59, 66, 79, 80], "were": [2, 3, 4, 33, 38, 55, 61, 74, 78, 82, 85, 87, 89, 91, 93, 95, 96], "present": [2, 3, 4, 8, 10, 11, 18, 33, 49, 63, 71, 76, 82, 85, 86, 92], "actual": [2, 3, 4, 33, 54, 55, 64, 80, 85, 87, 98], "num_class": [2, 33, 37, 49, 53, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 92, 96, 97], "uniqu": [2, 29, 49, 71, 79, 85, 90, 92], "given_label": [2, 4, 23, 28, 33, 43, 66, 71, 75, 78, 79, 80, 82, 83, 86, 87, 94, 95, 97, 98], "normal": [2, 3, 16, 24, 29, 40, 42, 45, 47, 48, 49, 64, 85, 87, 92], "trick": [2, 85], "distribut": [2, 3, 4, 8, 24, 26, 33, 38, 40, 44, 47, 54, 62, 63, 64, 76, 79, 80, 82, 83, 86, 91, 92], "account": [2, 33, 54, 58, 63, 64, 83, 85, 87, 89, 90, 92, 94, 97], "word": [2, 3, 48, 74, 75, 85], "remov": [2, 8, 29, 33, 34, 38, 40, 66, 76, 83, 84, 85, 86, 90, 92, 94, 96, 97], "so": [2, 3, 4, 5, 8, 12, 24, 33, 34, 37, 38, 40, 49, 54, 55, 61, 64, 66, 70, 74, 78, 79, 80, 83, 86, 87, 90, 92, 95], "proportion": [2, 8, 40], "just": [2, 3, 4, 8, 11, 33, 35, 37, 49, 53, 64, 66, 68, 76, 77, 78, 80, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97], "procedur": 2, "get": [2, 3, 4, 6, 11, 29, 34, 35, 38, 40, 45, 48, 49, 54, 56, 58, 63, 64, 66, 67, 68, 76, 78, 83, 84, 85, 86, 87, 92, 93, 94, 96, 97], "detect": [2, 4, 5, 7, 11, 12, 14, 16, 20, 26, 39, 47, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 73, 76, 79, 81, 86, 88, 90, 94, 95, 96, 97, 98], "arg": [2, 10, 20, 25, 29, 34, 35, 38, 45, 49, 64, 66], "kwarg": [2, 5, 8, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 39, 45, 53, 66, 68, 70, 72, 85], "test": [2, 4, 8, 24, 38, 45, 53, 66, 76, 79, 80, 82, 83, 86, 93, 94, 96, 97, 98], "expect": [2, 3, 34, 38, 40, 45, 54, 63, 64, 66, 85, 87, 89, 90, 91, 94, 96, 97, 98], "class_predict": 2, "evalu": [2, 8, 34, 35, 36, 37, 38, 62, 66, 78, 79, 80, 85, 86, 87, 89, 93, 94, 95, 96, 97], "simpli": [2, 33, 64, 79, 80, 82, 83, 85, 87, 90, 94, 95, 97, 98], "quantifi": [2, 4, 5, 8, 11, 40, 58, 63, 66, 76, 80, 82, 83, 86, 87, 91], "save_spac": [2, 8, 65, 66], "potenti": [2, 8, 33, 40, 48, 56, 59, 62, 64, 66, 68, 70, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 95, 96, 98], "cach": [2, 83, 97], "panda": [2, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 49, 50, 53, 54, 55, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 94, 95, 96, 97], "unlik": [2, 8, 40, 42, 45, 53, 55, 56, 58, 74, 79, 89, 90, 92, 94], "both": [2, 4, 8, 14, 24, 33, 34, 38, 40, 49, 54, 56, 64, 68, 70, 75, 76, 79, 85, 86, 87, 89, 98], "mask": [2, 37, 40, 48, 49, 56, 59, 64, 66, 68, 70, 71, 76, 84, 85, 89, 91, 95, 98], "prefer": [2, 64, 72, 90], "plan": 2, "subsequ": [2, 3, 34, 38, 83, 85, 87, 91, 97], "invok": [2, 34, 38, 87, 93], "scratch": [2, 66], "To": [2, 4, 5, 7, 8, 9, 11, 14, 24, 32, 34, 37, 38, 39, 40, 53, 54, 56, 58, 62, 63, 64, 66, 67, 68, 70, 76, 78, 79, 80, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "share": [2, 64, 66], "mostli": [2, 49, 61, 66, 90, 94], "longer": [2, 31, 44, 45, 48, 66, 77, 83, 85, 91, 97], "info": [2, 4, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 55, 66, 74, 79, 80, 84, 85, 98], "about": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 35, 37, 42, 54, 55, 58, 62, 66, 71, 74, 78, 79, 82, 83, 84, 85, 86, 87, 89, 92], "docstr": [2, 33, 34, 38, 49, 66, 84, 87], "unless": [2, 34, 38, 66, 85], "our": [2, 3, 8, 53, 54, 64, 66, 76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "is_label_issu": [2, 28, 66, 78, 79, 80, 82, 83, 86, 87, 90, 94, 97], "entir": [2, 8, 24, 37, 40, 43, 55, 56, 61, 64, 66, 68, 70, 71, 76, 79, 80, 85, 91, 92, 93, 95, 98], "accur": [2, 3, 4, 8, 14, 33, 37, 40, 54, 55, 56, 59, 62, 64, 66, 67, 68, 70, 71, 77, 80, 82, 83, 85, 86, 89, 94], "label_qu": [2, 54, 66, 87, 89, 94, 97], "measur": [2, 4, 33, 54, 55, 66, 76, 84, 85, 87, 89, 90, 94, 95, 96, 98], "qualiti": [2, 3, 4, 5, 8, 11, 28, 29, 33, 37, 39, 40, 42, 45, 54, 55, 56, 58, 59, 61, 64, 66, 67, 70, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 94, 96, 97], "lower": [2, 4, 5, 8, 11, 26, 37, 45, 47, 54, 55, 58, 61, 62, 64, 66, 67, 70, 74, 78, 80, 82, 83, 86, 89, 90, 91, 92, 94, 95, 97, 98], "eas": 2, "comparison": [2, 34, 38, 62, 87, 89], "against": [2, 34, 38, 79, 82, 85, 89, 90], "predicted_label": [2, 4, 23, 28, 66, 71, 75, 78, 79, 80, 82, 83, 86, 87, 94, 95, 97], "ad": [2, 34, 38, 80, 89, 94], "precis": [2, 56, 59, 62, 85, 87, 95, 98], "definit": [2, 5, 31, 45, 66, 82, 96], "accessor": [2, 66], "describ": [2, 8, 16, 54, 63, 64, 66, 72, 74, 87, 89, 90, 91, 93, 98], "precomput": [2, 4, 43, 66, 84], "clear": [2, 34, 38, 66, 83, 94, 97], "save": [2, 4, 14, 34, 37, 38, 62, 66, 85, 91, 95, 98], "space": [2, 4, 8, 63, 66, 82, 84, 86], "place": [2, 34, 38, 49, 66, 89, 96], "larg": [2, 37, 66, 82, 83, 85, 86, 91, 92, 95, 98], "deploi": [2, 66, 82, 83, 85, 86], "care": [2, 8, 34, 38, 66, 83, 85, 87], "avail": [2, 4, 5, 10, 12, 30, 38, 66, 85, 87, 89, 91, 94], "cannot": [2, 4, 10, 12, 49, 93, 98], "anymor": 2, "classmethod": [2, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 38, 45, 66], "__init_subclass__": [2, 36, 38, 65, 66], "set_": [2, 38, 66], "_request": [2, 38, 66], "pep": [2, 38, 66], "487": [2, 38, 66], "look": [2, 4, 5, 14, 34, 38, 49, 66, 71, 79, 80, 82, 83, 85, 87, 89, 90, 91, 92, 95, 96, 98], "inform": [2, 4, 5, 8, 11, 14, 30, 34, 38, 49, 54, 55, 59, 62, 66, 71, 74, 75, 76, 78, 79, 82, 83, 87, 89, 92, 95, 98], "__metadata_request__": [2, 38, 66], "infer": [2, 38, 49, 66, 71, 75, 86, 89, 90, 96, 97], "signatur": [2, 34, 38, 66], "accept": [2, 34, 38, 64, 66, 79, 80], "metadata": [2, 38, 66, 82, 83, 86, 98], "through": [2, 4, 5, 38, 66, 78, 80, 83, 84, 85, 89, 91, 92, 97], "develop": [2, 7, 38, 66, 85, 87, 98], "request": [2, 38, 66, 80, 83, 84, 90, 96, 97, 98], "those": [2, 3, 8, 37, 38, 40, 53, 54, 56, 62, 66, 70, 74, 75, 76, 78, 85, 86, 91, 95], "http": [2, 4, 5, 7, 8, 9, 16, 32, 34, 35, 37, 38, 42, 49, 59, 62, 63, 66, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "www": [2, 38, 66, 92], "org": [2, 16, 34, 35, 38, 49, 63, 66, 85, 87, 98], "dev": [2, 38, 66], "0487": [2, 38, 66], "get_metadata_rout": [2, 36, 38, 65, 66], "rout": [2, 38, 66], "pleas": [2, 34, 38, 53, 66, 76, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 92, 94, 97, 98], "guid": [2, 5, 38, 66, 77, 81, 86], "mechan": [2, 34, 38, 66], "metadatarequest": [2, 38, 66], "encapsul": [2, 14, 38, 61, 66], "get_param": [2, 36, 38, 52, 53, 65, 66], "subobject": [2, 38, 66], "param": [2, 8, 34, 38, 53, 63, 66, 85], "name": [2, 4, 5, 8, 10, 11, 31, 33, 34, 38, 44, 45, 49, 53, 54, 55, 62, 66, 71, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 94, 95, 97, 98], "set_fit_request": [2, 36, 38, 65, 66], "str": [2, 3, 4, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 40, 43, 45, 48, 49, 53, 54, 55, 59, 61, 62, 64, 66, 71, 75, 78, 79, 85, 89, 90, 91, 98], "unchang": [2, 34, 38, 66, 98], "relev": [2, 14, 24, 38, 66, 86], "enable_metadata_rout": [2, 38, 66], "set_config": [2, 38, 66], "meta": [2, 38, 66], "rais": [2, 4, 10, 11, 31, 34, 38, 42, 45, 66, 78, 85], "alia": [2, 34, 38, 66], "metadata_rout": [2, 38, 66], "retain": [2, 38, 49, 66], "chang": [2, 34, 37, 38, 42, 66, 74, 78, 79, 83, 85, 91, 92, 97, 98], "version": [2, 4, 5, 7, 8, 9, 13, 19, 22, 27, 32, 34, 36, 38, 41, 42, 49, 52, 53, 64, 66, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 98], "sub": [2, 38, 61, 66], "pipelin": [2, 38, 66, 94], "otherwis": [2, 5, 8, 31, 33, 34, 37, 38, 40, 46, 48, 49, 56, 63, 66, 68, 70, 71, 75, 83, 85, 97], "updat": [2, 11, 34, 37, 38, 66, 77, 79, 86], "set_param": [2, 36, 38, 52, 53, 65, 66], "simpl": [2, 34, 38, 40, 54, 64, 66, 79, 80, 82, 83, 86, 89, 92, 94, 96, 97], "well": [2, 3, 8, 34, 38, 42, 43, 54, 56, 62, 64, 66, 71, 74, 75, 77, 79, 80, 82, 83, 85, 86, 87, 89, 91, 92], "nest": [2, 34, 38, 39, 50, 66, 72, 74, 75, 98], "latter": [2, 34, 38, 66, 92], "compon": [2, 38, 66], "__": [2, 38, 66], "set_score_request": [2, 65, 66], "structur": [3, 63, 82, 96], "unobserv": 3, "less": [3, 4, 8, 29, 37, 45, 54, 63, 64, 68, 70, 74, 80, 82, 84, 85, 86, 87, 91, 98], "channel": [3, 78, 87], "character": 3, "flip": 3, "nm": 3, "invers": [3, 8, 33, 43, 49, 55, 80, 84, 97], "inv": 3, "confident_joint": [3, 20, 33, 40, 49, 55, 56, 77, 85, 87], "un": 3, "under": [3, 8, 34, 38, 55, 62, 63, 80, 92], "joint": [3, 33, 40, 43, 49, 55, 56, 84], "num_label_issu": [3, 37, 40, 56, 71, 75, 77], "estimation_method": [3, 37], "off_diagon": 3, "multi_label": [3, 33, 40, 49, 50, 56, 90], "don": [3, 76, 80, 82, 83, 86, 87, 91, 94], "statis": 3, "compute_confident_joint": [3, 33, 40, 49, 56, 87], "off": [3, 40, 49, 61, 86, 87, 91, 92], "j": [3, 4, 33, 34, 38, 39, 40, 56, 59, 62, 63, 72, 74, 75, 79, 80, 87, 95, 98], "confident_learn": [3, 40, 56, 87], "off_diagonal_calibr": 3, "calibr": [3, 40, 49, 54, 89], "cj": [3, 43, 49], "axi": [3, 29, 43, 45, 47, 68, 71, 78, 79, 80, 85, 86, 87, 89, 90, 92, 94, 95], "bincount": [3, 79, 80, 87, 89, 90], "alwai": [3, 8, 34, 38, 49, 78, 87, 94, 96, 97], "estimate_issu": 3, "over": [3, 4, 8, 34, 37, 38, 61, 62, 68, 70, 80, 82, 84, 85, 86, 87, 92, 94, 96], "As": [3, 5, 76, 79, 80, 83, 87, 94, 98], "add": [3, 4, 5, 10, 11, 34, 38, 53, 62, 78, 79, 80, 83, 85, 86, 87, 90, 97], "approach": [3, 33, 37, 40, 82, 87, 90, 92, 94, 96], "custom": [3, 5, 8, 9, 28, 34, 37, 38, 45, 48, 64, 80, 83, 87, 94, 97], "know": [3, 79, 80, 82, 83, 85, 86, 87, 89, 94], "cut": [3, 61, 76, 87], "off_diagonal_custom": 3, "tl": 3, "dr": 3, "sometim": [3, 91, 92, 98], "underestim": 3, "few": [3, 62, 76, 80, 85, 89, 90, 91, 92, 98], "4": [3, 4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 44, 45, 48, 58, 59, 61, 62, 64, 67, 74, 84, 85, 90, 95, 98], "detail": [3, 4, 8, 12, 14, 30, 33, 34, 38, 39, 45, 49, 53, 54, 55, 56, 58, 59, 61, 62, 63, 70, 71, 72, 76, 77, 78, 90, 92, 98], "num_issu": [3, 5, 37, 78, 79, 80, 82, 83, 86, 87], "calibrate_confident_joint": 3, "up": [3, 5, 8, 15, 24, 25, 28, 40, 45, 54, 84, 85, 91, 94, 97, 98], "p_": [3, 33, 40], "pair": [3, 4, 8, 33, 40, 87], "v": [3, 8, 37, 55, 56, 58, 64, 79, 80, 90, 91, 92, 93], "rest": [3, 4, 5, 7, 8, 9, 32, 55, 56, 58, 66, 79, 80, 82, 83, 85, 86, 87, 89, 94, 96, 97], "fashion": [3, 4, 68, 96], "2x2": 3, "incorrectli": [3, 33, 55, 56, 59, 82, 98], "calibrated_cj": 3, "c": [3, 8, 48, 56, 64, 76, 78, 79, 80, 82, 83, 85, 87, 90, 91, 92, 93, 94, 96], "whose": [3, 4, 8, 26, 34, 38, 43, 48, 54, 58, 61, 67, 70, 74, 75, 78, 79, 80, 82, 83, 85, 86, 87, 90, 91, 92, 95, 98], "truli": [3, 92, 95], "estimate_joint": [3, 33, 87], "joint_estim": 3, "confident_joint_distribut": 3, "recal": [3, 56, 62, 87, 91, 93, 95, 98], "return_indices_of_off_diagon": 3, "frequenc": [3, 24, 54, 55, 62, 71, 91, 92], "done": [3, 8, 66, 79, 85, 87, 90, 92, 93], "overfit": [3, 8, 59, 62, 78, 79, 80, 82, 83, 86, 93, 96], "classifict": 3, "singl": [3, 4, 10, 24, 33, 34, 38, 39, 45, 46, 49, 54, 55, 61, 62, 63, 64, 74, 78, 79, 85, 87, 90, 91, 96], "baselin": [3, 34, 40, 92, 94, 97], "proxi": 3, "union": [3, 4, 10, 45, 49, 50, 56, 62, 66, 70, 74, 85], "tupl": [3, 29, 34, 38, 39, 43, 44, 46, 48, 49, 54, 56, 62, 70, 72, 74, 75, 78, 98], "confident_joint_count": 3, "indices_off_diagon": 3, "simplif": 3, "effici": [3, 4, 8, 37, 43, 54, 68, 70, 76, 85, 86, 95, 97], "practic": [3, 80, 86, 87, 92, 94, 96, 97], "complet": [3, 78, 79, 80, 82, 83, 85, 86, 87, 90, 91, 94], "gist": 3, "cj_ish": 3, "guess": [3, 43, 87, 89], "8": [3, 4, 5, 6, 44, 45, 46, 48, 58, 72, 74, 78, 79, 80, 82, 83, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "parallel": [3, 40, 62, 72, 84], "again": [3, 53, 85, 92, 96], "simplifi": [3, 12], "understand": [3, 7, 33, 55, 62, 80, 87, 94, 95, 98], "100": [3, 34, 38, 64, 79, 80, 82, 84, 85, 86, 87, 90, 91, 92, 96, 97, 98], "optim": [3, 34, 35, 38, 53, 86, 89], "speed": [3, 40, 84, 85, 94, 97], "dtype": [3, 21, 23, 24, 29, 34, 38, 48, 49, 58, 74, 78, 91], "enumer": [3, 34, 38, 78, 79, 80, 86, 98], "s_label": 3, "confident_bin": 3, "6": [3, 4, 38, 45, 49, 74, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "num_confident_bin": 3, "argmax": [3, 40, 64, 68, 71, 78, 85, 87, 91, 92, 95], "elif": 3, "estimate_lat": 3, "py_method": [3, 43], "cnt": [3, 43], "1d": [3, 4, 10, 14, 37, 40, 45, 46, 49, 50, 58, 67, 78, 96], "eqn": [3, 43], "margin": [3, 40, 43, 45, 64], "marginal_p": [3, 43], "shorthand": [3, 11], "proport": [3, 8, 33, 55, 87, 93], "poorli": [3, 43, 96], "inv_noise_matrix": 3, "estimate_py_and_noise_matrices_from_prob": [3, 87], "variabl": [3, 5, 12, 25, 49, 66, 67, 78, 79, 82, 87, 90, 94], "exact": [3, 43, 79, 80, 82, 86, 96], "within": [3, 4, 8, 13, 34, 35, 38, 39, 41, 56, 61, 70, 72, 74, 79, 80, 85, 86, 91, 95], "percent": 3, "often": [3, 33, 43, 55, 85, 87, 93, 95], "estimate_confident_joint_and_cv_pred_proba": 3, "mani": [3, 8, 49, 50, 62, 78, 79, 82, 83, 85, 86, 90, 91, 92, 94, 97], "wai": [3, 4, 53, 76, 77, 78, 79, 80, 82, 83, 85, 87, 89, 90, 91, 93, 96, 97], "pro": 3, "con": 3, "pred_proba": [3, 93], "combin": [3, 33, 79, 84, 85, 86, 87, 93, 94], "becaus": [3, 43, 49, 61, 83, 85, 87, 89, 91], "littl": [3, 37, 84, 91, 98], "uniform": [3, 64, 84, 85, 87], "20": [3, 5, 39, 75, 78, 83, 84, 85, 86, 87, 91, 94, 95, 98], "Such": [3, 86, 92], "bound": [3, 21, 23, 34, 38, 48, 58, 59, 61, 62, 91], "reason": [3, 20, 34, 38], "comment": [3, 48, 98], "end": [3, 4, 34, 38, 62, 92, 98], "file": [3, 4, 10, 36, 37, 52, 62, 78, 79, 82, 83, 84, 85, 91, 92, 95, 96, 98], "estimate_py_noise_matrices_and_cv_pred_proba": [3, 87], "handl": [3, 4, 5, 8, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 77, 79, 80, 82, 83, 86, 87, 95, 96, 98], "five": [3, 59, 62, 87, 91], "estimate_cv_predicted_prob": [3, 87], "estimate_noise_matric": 3, "get_confident_threshold": [3, 36, 37], "amongst": [3, 8, 91], "confident_threshold": [3, 8, 20, 37, 63], "unifi": 4, "audit": [4, 7, 10, 11, 14, 78, 81, 82, 83, 85, 86, 87, 90, 91, 94], "kind": [4, 5, 78, 79, 82, 83, 84, 86, 87], "addit": [4, 5, 7, 8, 9, 11, 30, 32, 34, 38, 45, 50, 54, 62, 72, 78, 79, 82, 83, 87, 89, 92, 93, 96, 97], "depend": [4, 5, 7, 8, 9, 10, 11, 32, 36, 40, 42, 49, 52, 56, 63, 66, 67, 76], "instal": [4, 5, 7, 8, 9, 32, 34, 36, 37, 38, 40, 52, 53, 68, 70], "pip": [4, 5, 7, 9, 32, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "development": [4, 5, 7, 9, 32], "git": [4, 5, 7, 9, 32, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 96, 97], "github": [4, 5, 7, 9, 32, 34, 35, 49, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "com": [4, 5, 7, 9, 32, 34, 35, 37, 42, 49, 63, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "egg": [4, 5, 7, 9, 32, 76, 84], "label_nam": [4, 5, 6, 8, 10, 16, 29, 76, 78, 79, 80, 82, 83, 85, 86, 87, 90, 91, 94], "image_kei": [4, 86], "interfac": [4, 76, 85, 87], "librari": [4, 8, 38, 59, 62, 63, 76, 79, 83, 84, 85, 97], "goal": [4, 94], "track": [4, 5, 11, 12, 76, 79, 84, 85, 87], "intermedi": [4, 7, 80], "statist": [4, 8, 11, 20, 24, 33, 54, 55, 62, 80, 82, 83, 87], "convert": [4, 10, 31, 34, 38, 46, 47, 50, 54, 61, 70, 74, 77, 78, 83, 84, 85, 86, 89, 90, 91, 97], "hug": [4, 10, 86], "face": [4, 10, 14, 84, 86, 90], "kei": [4, 5, 8, 10, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 38, 45, 54, 55, 61, 63, 79, 80, 83, 85, 86, 87, 89, 91], "string": [4, 8, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 38, 49, 54, 55, 67, 71, 74, 75, 82, 83, 85, 89, 90, 97, 98], "dictionari": [4, 5, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 38, 44, 49, 54, 55, 58, 59, 61, 62, 79, 80, 82, 83, 87, 89, 90, 91], "path": [4, 10, 34, 37, 38, 62, 78, 79, 85, 91], "local": [4, 5, 10, 34, 35, 38, 78, 79, 80, 84, 85, 86, 87, 89, 90, 92, 94, 98], "text": [4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 39, 45, 63, 72, 74, 75, 76, 79, 80, 81, 84, 85, 87, 88, 89, 92], "txt": [4, 10, 98], "csv": [4, 10, 82, 83, 94, 96, 97], "json": [4, 10], "hub": [4, 10], "multiclass": [4, 10, 13, 45, 49, 54, 90], "regress": [4, 5, 10, 12, 14, 19, 28, 31, 79, 80, 83, 88, 89, 92, 97], "multilabel": [4, 10, 12, 13, 19, 23, 31, 46, 90], "imag": [4, 7, 33, 38, 59, 61, 62, 63, 68, 70, 71, 76, 79, 80, 84, 85, 88, 89, 90, 91, 93, 95], "point": [4, 5, 8, 16, 24, 34, 38, 79, 80, 82, 83, 85, 86, 87, 89], "field": [4, 8, 34, 38], "themselv": [4, 94, 96, 97], "cleanvis": [4, 8], "level": [4, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 48, 72, 74, 80, 86, 88, 90, 95], "load_dataset": [4, 10, 86], "glue": 4, "sst2": 4, "properti": [4, 10, 11, 31, 34, 38], "has_label": [4, 10], "class_nam": [4, 10, 18, 33, 39, 55, 62, 71, 75, 76, 84, 87, 91, 95, 98], "empti": [4, 10, 43, 54, 80, 85, 90], "find_issu": [4, 5, 6, 8, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 76, 78, 79, 80, 82, 83, 85, 86, 87, 90, 94], "knn_graph": [4, 8, 14, 16, 17, 24, 26, 29, 82], "issue_typ": [4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 78, 79, 80, 82, 83, 85, 86, 87, 90, 94], "sort": [4, 14, 37, 40, 45, 54, 56, 59, 61, 62, 64, 70, 72, 74, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98], "common": [4, 11, 14, 80, 81, 84, 85, 87, 90, 91, 95], "real": [4, 14, 76, 79, 80, 85, 87, 89, 94, 95], "world": [4, 14, 76, 79, 80, 85, 87, 89, 94, 95], "interact": [4, 14, 83, 85], "embed": [4, 8, 14, 63, 76, 78, 79, 80, 82, 83, 87, 90, 94, 97], "thereof": [4, 14], "insight": [4, 14, 62, 89], "best": [4, 14, 44, 54, 64, 79, 80, 82, 83, 85, 86, 89, 90, 92, 94, 96, 97, 98], "2d": [4, 14, 37, 45, 46, 48, 49, 54, 78, 90, 96], "num_exampl": [4, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 55, 78, 79, 80, 82, 83, 86, 87], "properli": [4, 8, 37, 44, 49, 50, 68, 78, 79, 80, 82, 83, 85, 86, 87, 90, 92, 94, 95], "respect": [4, 34, 38, 59, 62, 78, 79, 80, 82, 83, 86, 87, 90, 91], "lexicograph": [4, 44, 49, 78, 79, 80, 82, 83, 86, 87, 90], "represent": [4, 8, 14, 31, 34, 38, 46, 56, 76, 78, 79, 80, 83, 85, 86, 87, 92, 97], "num_featur": [4, 14, 34, 38, 53], "distanc": [4, 8, 14, 16, 24, 26, 29, 47, 61, 63, 82, 92], "nearest": [4, 8, 14, 21, 24, 26, 47, 63, 80, 83, 92], "neighbor": [4, 8, 14, 16, 21, 24, 26, 47, 63, 79, 80, 82, 83, 85, 86, 92], "graph": [4, 8, 11, 14, 16, 24, 29], "squar": [4, 49, 66, 84, 94], "csr": 4, "evenli": 4, "omit": [4, 61, 62, 86, 91], "itself": [4, 34, 38, 91], "three": [4, 8, 33, 54, 55, 66, 71, 78, 79, 80, 82, 84, 87, 89, 93, 94, 95, 96, 98], "indptr": 4, "wise": 4, "start": [4, 5, 8, 31, 34, 35, 38, 45, 76, 82, 90, 98], "th": [4, 39, 44, 48, 49, 54, 56, 59, 61, 62, 63, 72, 74, 75, 83, 90, 91, 98], "ascend": [4, 33, 55, 86, 87], "segment": [4, 68, 70, 71, 88], "reflect": [4, 82, 83, 89, 91, 92, 94, 96, 97], "maintain": 4, "posit": [4, 34, 38, 47, 49, 62, 84, 92], "nearestneighbor": [4, 8, 16, 63, 82, 92], "kneighbors_graph": [4, 16, 82], "illustr": 4, "todens": 4, "second": [4, 45, 49, 62, 64, 79, 85, 87, 98], "duplic": [4, 7, 19, 20, 34, 38, 76, 79, 87, 94], "explicit": 4, "precend": 4, "construct": [4, 5, 8, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 38, 45, 53], "neither": [4, 8, 12, 91], "nor": [4, 8, 12], "collect": [4, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 54, 85, 89, 98], "unspecifi": [4, 14, 40, 56], "interest": [4, 14, 20, 71, 75, 83, 87, 94, 95, 96, 97, 98], "constructor": [4, 8, 14, 21, 28], "issuemanag": [4, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30], "respons": [4, 14, 20, 66, 67, 84, 94, 98], "random_st": [4, 78, 79, 80, 86, 87, 90, 92, 96], "lab": [4, 6, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 37, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 94], "comprehens": [4, 76, 86, 90, 94], "nbr": 4, "n_neighbor": [4, 8, 16, 63], "metric": [4, 8, 17, 24, 29, 49, 53, 62, 63, 78, 82, 83, 86, 87, 94, 96, 97], "euclidean": [4, 8, 61, 63, 82], "mode": [4, 16, 34, 37, 38, 92], "4x4": 4, "float64": [4, 24, 34, 38, 74], "compress": [4, 8, 49, 68, 70], "toarrai": 4, "NOT": [4, 37, 83], "23606798": 4, "41421356": 4, "configur": [4, 14, 45, 80], "suppos": [4, 8, 59, 92, 94, 96, 97], "who": [4, 61, 82, 87, 96, 98], "manag": [4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 79], "clean_learning_kwarg": [4, 8, 21, 28, 94], "labelissuemanag": [4, 8, 12, 19, 21], "prune_method": [4, 77], "prune_by_noise_r": [4, 40, 56, 87], "report": [4, 5, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 55, 75, 76, 78, 79, 80, 82, 83, 87, 90, 94, 98], "include_descript": [4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30], "show_summary_scor": [4, 30], "show_all_issu": [4, 30], "summari": [4, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 39, 52, 53, 55, 60, 69, 70, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 86, 87, 91, 94, 95, 98], "show": [4, 5, 24, 34, 38, 44, 49, 62, 71, 75, 80, 82, 83, 84, 85, 86, 87, 89, 92, 94, 95, 96, 98], "top": [4, 8, 33, 37, 39, 40, 49, 56, 59, 62, 64, 71, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 91, 92, 94, 97, 98], "suffer": [4, 8, 11, 20, 56, 64, 75, 98], "onc": [4, 20, 33, 34, 38, 79, 85, 87, 90, 91, 96], "familiar": 4, "overal": [4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 39, 45, 54, 55, 58, 61, 62, 66, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 91, 98], "sever": [4, 5, 8, 10, 11, 20, 34, 37, 38, 40, 58, 61, 63, 64, 70, 74, 76, 78, 79, 80, 82, 83, 84, 85, 87, 91, 92, 96, 97, 98], "compar": [4, 54, 63, 74, 79, 80, 82, 87, 91], "issue_summari": [4, 5, 8, 11, 79], "With": [4, 37, 83, 87, 89, 94, 95, 97, 98], "usag": [4, 37, 53], "found": [4, 5, 8, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 49, 76, 78, 79, 80, 82, 83, 85, 86, 90, 92, 94, 96, 97, 98], "usual": [4, 10, 30, 86, 89, 94], "directli": [4, 12, 14, 30, 31, 37, 53, 54, 80, 83, 90, 91, 94, 97], "ti": [4, 54], "exhibit": [4, 5, 8, 11, 71, 80, 82, 83, 86, 87, 91], "ie": [4, 66], "likelihood": [4, 8, 37, 39, 40, 56, 61, 63, 64, 68, 72], "wherea": [4, 49, 56, 93], "outlier": [4, 7, 12, 19, 20, 29, 41, 64, 76, 79, 80, 87, 88, 94], "fundament": [4, 8], "incompar": 4, "quantiti": [4, 87, 94], "global": [4, 5, 20, 34, 38], "non_iid": [4, 8, 12, 24, 80, 82, 83, 86, 87], "hypothesi": 4, "iid": [4, 5, 7, 24, 82, 87], "never": [4, 78, 87, 90, 92, 93], "someth": [4, 5, 34, 38, 64, 91], "123": [4, 79, 80], "456": [4, 78, 96, 97], "nearest_neighbor": 4, "7": [4, 45, 46, 53, 72, 74, 78, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 97, 98], "9": [4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 39, 45, 46, 58, 72, 74, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "distance_to_nearest_neighbor": [4, 79, 80, 82, 83, 86, 87], "789": 4, "get_issu": [4, 8, 11, 78, 80, 82, 83, 85, 86, 90, 94], "issue_nam": [4, 5, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 79, 80], "focu": [4, 11, 83, 95, 98], "full": [4, 8, 11, 37, 62, 86, 98], "summar": [4, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 55, 71, 75, 76, 95], "valueerror": [4, 10, 11, 31, 42, 45, 85], "specific_issu": [4, 11], "lie": [4, 8, 63, 64, 78, 79, 80, 82, 83, 86, 87, 97], "get_issue_summari": [4, 11, 80], "get_info": [4, 11, 80, 83], "yet": [4, 15, 19, 25, 84, 89], "list_possible_issue_typ": [4, 12, 13], "regist": [4, 5, 12, 13, 15, 25, 34, 38, 79], "rtype": [4, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38], "registri": [4, 12, 13], "list_default_issue_typ": [4, 12, 13], "folder": [4, 78, 79, 86], "load": [4, 10, 37, 62, 84, 85, 86, 87, 91, 92, 95, 98], "futur": [4, 8, 20, 34, 38, 54, 76, 78, 79, 83, 85, 97], "overwrit": [4, 79], "separ": [4, 33, 45, 58, 79, 80, 85, 86, 91, 93], "static": 4, "rememb": [4, 83, 85, 87], "part": [4, 8, 34, 38, 40, 59, 61, 62, 78, 79, 84, 95, 98], "ident": [4, 8, 20, 49, 83], "walk": 5, "alongsid": [5, 34, 38, 79, 85], "pre": [5, 6, 8, 34, 38, 79, 80, 94, 98], "runtim": [5, 34, 37, 38, 66, 68, 70, 78, 85, 86], "issue_manager_factori": [5, 12, 79], "myissuemanag": [5, 12], "myissuemanagerforregress": 5, "decor": [5, 12], "ll": [5, 45, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98], "thing": [5, 38, 87, 94, 97], "next": [5, 54, 76, 78, 82, 83, 85, 89, 91, 94, 96, 97, 98], "dummi": 5, "randint": [5, 29, 45, 79, 80, 85], "mark": [5, 8, 77, 91, 92, 94], "regard": [5, 80, 87], "rand": [5, 45, 79, 80], "is_": [5, 8, 79], "_issu": [5, 8, 79], "issue_score_kei": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 79], "whole": [5, 24, 34, 38, 80], "make_summari": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 79], "popul": [5, 80, 83], "verbosity_level": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "std": [5, 91], "raw_scor": 5, "bit": 5, "involv": [5, 37, 71, 75, 85, 90], "intermediate_arg": 5, "min": [5, 45, 61, 74, 79, 85, 92], "sin_filt": 5, "sin": 5, "arang": 5, "kernel": 5, "affect": [5, 8, 34, 38, 68, 74, 83, 85], "easili": [5, 43, 77, 78, 80, 82, 83, 87, 89, 90, 92, 93, 94, 95, 96, 97], "hard": [5, 38, 84, 92], "sai": [5, 8, 34, 38, 90, 95], "anoth": [5, 20, 33, 37, 48, 61, 64, 82, 83, 85, 87, 89, 92, 97], "try": [5, 8, 37, 40, 53, 54, 68, 70, 76, 80, 82, 83, 85, 86, 87, 95], "won": [5, 34, 38, 79, 80, 85, 90], "issue_manag": [5, 8, 9, 11, 13, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 79], "instanti": [5, 14, 37, 53, 63, 78, 80, 82, 97], "477762": 5, "286455": 5, "term": [5, 8, 43, 49, 62, 78, 79, 80, 82, 83, 86, 87], "4778": 5, "is_basic_issu": 5, "basic_scor": 5, "13": [5, 17, 26, 78, 79, 80, 82, 83, 84, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98], "003042": 5, "058117": 5, "11": [5, 53, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "121908": 5, "15": [5, 47, 66, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98], "169312": 5, "17": [5, 78, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 97, 98], "229044": 5, "2865": 5, "is_intermediate_issu": 5, "intermediate_scor": 5, "000000": [5, 79, 80, 84, 87], "007059": 5, "009967": 5, "010995": 5, "087332": 5, "016296": 5, "03947": 5, "019459": 5, "794251": 5, "underperform": [6, 7, 29], "group": [6, 7, 24, 29, 84, 91, 98], "dbscan": [6, 8, 29, 85], "hdbscan": [6, 85], "etc": [6, 8, 20, 34, 38, 43, 53, 54, 72, 76, 79, 80, 82, 83, 85, 87, 90, 94], "sensit": [6, 8, 47], "ep": [6, 29, 62], "radiu": 6, "min_sampl": [6, 29], "datalab": [6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 76, 78, 85, 86, 89, 94, 96, 97], "kmean": [6, 85], "your_data": 6, "get_pred_prob": 6, "n_cluster": [6, 29, 85], "cluster_id": [6, 8, 29, 85], "labels_": 6, "underperforming_group": [6, 8, 12, 19, 80, 82, 83, 85, 86, 87], "search": [7, 8, 18, 24, 25, 48, 66, 85, 93], "nondefault": 7, "Near": [7, 85], "imbal": [7, 19, 58, 63, 64, 80], "null": [7, 12, 19, 80, 83, 86, 87], "valuat": [7, 16], "togeth": [7, 8, 43, 79, 80, 82, 83, 86, 87, 94, 97, 98], "built": [7, 45], "own": [7, 34, 36, 38, 52, 58, 59, 62, 68, 72, 78, 80, 82, 83, 85, 86, 89, 90, 94, 95, 96, 97, 98], "prerequisit": 7, "basic": [7, 38, 53, 82, 83, 92], "page": [8, 80, 85, 87], "variou": [8, 11, 28, 36, 50, 52, 76, 79, 80, 82, 83, 84, 87, 89, 91, 96], "why": [8, 83], "matter": [8, 33, 55, 83, 97], "_score": 8, "flag": [8, 20, 24, 40, 45, 55, 56, 59, 66, 76, 78, 79, 80, 82, 83, 84, 86, 87, 91, 92, 94, 95, 97], "badli": [8, 61, 98], "code": [8, 34, 38, 43, 49, 53, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "issue_scor": 8, "outlier_scor": [8, 26, 79, 80, 82, 83, 86, 87, 92], "atyp": [8, 63, 79, 80, 82, 83, 86, 87, 92], "datapoint": [8, 29, 40, 45, 49, 64, 67, 76, 78, 79, 80, 82, 83, 85, 93, 94, 96, 97], "is_issu": [8, 20], "is_outlier_issu": [8, 79, 80, 82, 83, 86, 87], "annot": [8, 33, 44, 54, 55, 56, 58, 59, 61, 62, 71, 74, 75, 76, 78, 79, 80, 82, 83, 85, 86, 87, 88, 91, 95], "transform": [8, 45, 47, 49, 63, 64, 80, 83, 86, 92, 96, 97, 98], "dissimilar": [8, 82, 83], "preced": 8, "cosin": [8, 63, 92], "incorrect": [8, 61, 64, 67, 78, 79, 80, 82, 83, 86, 87, 91, 94, 96], "due": [8, 37, 40, 64, 68, 70, 78, 79, 80, 82, 83, 86, 87, 94], "appear": [8, 33, 44, 55, 56, 59, 67, 80, 82, 83, 86, 94, 95], "now": [8, 37, 77, 78, 80, 89, 91, 92, 94, 96, 97, 98], "u": [8, 78, 79, 82, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98], "token": [8, 39, 48, 70, 71, 72, 73, 74, 75, 85, 87, 88], "calcul": [8, 16, 24, 37, 45, 54, 58, 59, 61, 62, 63, 66, 70, 84, 86], "hamper": [8, 84, 86], "analyt": [8, 76, 85, 89], "lead": [8, 61, 64, 86, 91], "draw": [8, 79, 80], "conclus": [8, 83], "veri": [8, 33, 55, 59, 61, 79, 80, 82, 83, 85, 86, 87, 89, 92, 94, 97], "rare": [8, 40, 62, 79, 80, 82, 83, 85, 86, 87], "anomal": [8, 64, 79, 80, 82, 83, 86, 87], "articl": [8, 37, 85], "ai": [8, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 94, 96, 97, 98], "blog": 8, "unexpect": [8, 34, 38, 83], "consequ": 8, "inspect": [8, 78, 80, 86, 87, 91, 94, 97], "neg": [8, 61, 62, 79, 80, 84], "extrem": [8, 79, 80, 82, 83, 85, 86, 87], "rel": [8, 33, 54, 55, 63, 79, 80, 82, 83, 86, 87, 92], "record": [8, 34, 38, 78, 82, 94], "abbrevi": 8, "misspel": 8, "typo": [8, 75], "resolut": 8, "video": [8, 84], "audio": [8, 79, 80, 85, 88], "minor": [8, 48], "variat": 8, "translat": 8, "d": [8, 47, 82, 83, 87, 90, 94, 96, 98], "constant": [8, 29, 66], "median": [8, 28, 47], "question": [8, 20, 76, 87], "nearli": [8, 20, 80, 82, 83, 86], "awar": [8, 77, 87], "presenc": [8, 87], "signific": [8, 82, 83, 87], "violat": [8, 82, 83, 87], "assumpt": [8, 82, 83, 87], "changepoint": [8, 82, 83, 87], "shift": [8, 82, 83, 87], "drift": [8, 80, 82, 87], "autocorrel": [8, 82, 83, 87], "almost": [8, 82, 83, 87], "adjac": [8, 82, 83, 87], "tend": [8, 33, 43, 82, 83, 87, 95, 98], "sequenti": [8, 34, 38, 53, 86], "gap": 8, "b": [8, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 48, 49, 74, 82, 83, 84, 87, 93, 96, 98], "x1": [8, 59, 62, 91], "x2": [8, 59, 62, 91], "10th": 8, "100th": 8, "90": [8, 74, 82, 87, 93, 94, 96], "similarli": [8, 34, 38, 79, 82, 85, 86, 91], "math": [8, 86], "behind": [8, 63, 87], "proper": [8, 49, 54, 59, 62, 83, 86, 89, 91, 96], "closer": [8, 61, 91], "scenario": [8, 64, 79, 80], "underli": [8, 39, 63, 72, 74, 98], "stem": [8, 63, 92], "evolv": 8, "influenc": 8, "act": [8, 61, 79], "accordingli": 8, "emploi": [8, 90, 92], "partit": [8, 93], "ahead": 8, "good": [8, 34, 38, 47, 53, 55, 61, 64, 68, 70, 71, 76, 82, 83, 86], "fix": [8, 54, 83, 87, 94, 97], "problem": [8, 37, 45, 71, 76, 79, 80, 83, 85, 86], "deploy": [8, 87, 94, 96, 97], "overlook": [8, 61, 91], "fact": 8, "thu": [8, 33, 38, 55, 78, 82, 83, 87, 93, 96, 98], "diagnos": [8, 80, 85], "rarest": [8, 80], "q": [8, 91], "fall": [8, 61, 70, 74, 87, 92], "subpar": 8, "special": [8, 48], "techniqu": [8, 91], "smote": 8, "asymmetr": [8, 33], "too": [8, 40, 45, 63, 80, 85, 86, 91], "dark": [8, 95], "bright": [8, 98], "blurri": [8, 86], "abnorm": [8, 62, 86, 91], "cluster": [8, 16, 29], "slice": 8, "poor": 8, "subpopul": 8, "lowest": [8, 54, 62, 80, 85, 86, 89, 90, 91, 95], "get_self_confidence_for_each_label": [8, 45, 64], "power": [8, 82, 83, 84, 86, 87, 98], "r": [8, 37, 66, 79, 80, 94, 95], "tabular": [8, 76, 79, 80, 81, 85, 88, 89], "categor": [8, 63, 79, 80, 81, 85, 94, 96], "encod": [8, 46, 62, 68, 71, 82, 83, 85, 94, 95, 96, 97], "miss": [8, 25, 34, 38, 49, 59, 61, 82, 85, 91, 94], "pattern": 8, "contribut": [8, 16, 91], "isn": [8, 15, 25], "approxim": [8, 16, 37, 63, 89], "shaplei": [8, 16], "knn": [8, 11, 16, 24, 29, 63, 82, 92], "scalabl": 8, "sacrific": 8, "One": [8, 49, 63, 85], "quantif": 8, "exert": [8, 80], "possible_issue_typ": 8, "label_kwarg": 8, "outlier_kwarg": 8, "near_dupl": [8, 12, 17, 79, 80, 82, 83, 85, 86, 87], "near_duplicate_kwarg": 8, "non_iid_kwarg": 8, "class_imbal": [8, 12, 18, 80, 82, 83, 86, 87], "class_imbalance_kwarg": 8, "underperforming_group_kwarg": 8, "null_kwarg": 8, "health_summary_paramet": [8, 19, 21, 28], "health_summari": [8, 21, 33, 76, 84], "health_summary_kwarg": 8, "tandem": [8, 84], "view": [8, 34, 38, 39, 40, 70, 72, 74, 76, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98], "ood_kwarg": 8, "outofdistribut": [8, 26, 63, 92], "outsid": [8, 90], "outlierissuemanag": [8, 12, 19, 26, 79], "nearduplicateissuemanag": [8, 12, 17, 19], "noniidissuemanag": [8, 12, 19, 24], "num_permut": [8, 24], "permut": [8, 24], "significance_threshold": [8, 24], "signic": 8, "noniid": [8, 19], "classimbalanceissuemanag": [8, 12, 18, 19], "underperforminggroupissuemanag": [8, 12, 19, 29], "determinin": 8, "neighbour": 8, "min_cluster_sampl": [8, 29], "filter_cluster_id": [8, 19, 29], "clustering_kwarg": [8, 29], "faq": [8, 76, 80, 82, 83, 86, 88], "nullissuemanag": [8, 12, 19, 25], "data_valuation_kwarg": 8, "data_valu": [8, 12, 19], "datavaluationissuemanag": [8, 12, 16, 19], "codeblock": 8, "demonstr": [8, 37, 79, 80, 83, 85, 86, 87, 89, 90, 91, 94, 95], "howev": [8, 34, 38, 49, 78, 82, 83, 86, 89, 93, 95, 96, 97], "mandatori": 8, "image_issue_types_kwarg": 8, "32": [8, 78, 79, 84, 89, 91, 98], "fewer": [8, 40, 49, 91], "vice": [8, 55], "versa": [8, 55], "light": [8, 84, 86, 91, 95], "29": [8, 84, 86, 89, 90, 91, 95, 98], "low_inform": [8, 86], "odd_aspect_ratio": [8, 86], "35": [8, 79, 84, 89, 90, 91, 98], "odd_siz": [8, 86], "10": [8, 16, 17, 21, 24, 29, 34, 35, 62, 63, 64, 75, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "doc": [8, 34, 38, 76, 78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "data_issu": [9, 13, 14, 30, 79], "issue_find": [9, 13], "factori": [9, 13, 14], "except": [10, 34, 38, 53, 64, 79, 80, 86, 89], "dataformaterror": [10, 13], "add_not": 10, "with_traceback": 10, "tb": 10, "__traceback__": 10, "datasetdicterror": [10, 13], "datasetdict": 10, "datasetloaderror": [10, 13], "dataset_typ": 10, "fail": 10, "hold": 10, "associ": [10, 14, 34, 38, 62, 89], "sublist": 10, "map_to_int": 10, "abc": [10, 20], "is_avail": [10, 86], "dataissu": [11, 13, 14, 30], "serv": [11, 14, 89], "central": [11, 98], "repositori": 11, "strategi": [11, 45, 85], "being": [11, 33, 34, 38, 40, 45, 48, 49, 64, 82, 85, 87, 94, 95, 96], "_infostrategi": 11, "basi": 11, "collect_statist": 11, "reus": [11, 20], "avoid": [11, 34, 37, 38, 40, 49, 56, 59, 62, 66, 68, 70, 79, 80, 85], "recomput": [11, 97], "weighted_knn_graph": 11, "issue_manager_that_computes_knn_graph": 11, "collect_issues_from_issue_manag": 11, "collect_issues_from_imagelab": 11, "imagelab": 11, "set_health_scor": 11, "health": [11, 21, 33, 55, 76], "get_data_statist": [11, 13], "concret": 12, "subclass": [12, 34, 38, 63, 79], "regressionlabelissuemanag": [12, 19, 27, 28], "multilabelissuemanag": [12, 19, 22, 23], "from_str": [12, 31, 41, 45], "my_issu": 12, "logic": [12, 37, 40, 68, 70], "stabl": [13, 19, 22, 27, 36, 41, 49, 52, 63, 77], "issuefind": [13, 14, 30], "unregist": 13, "instati": 14, "public": [14, 87, 91, 95, 98], "creation": [14, 38], "execut": [14, 34, 38, 79, 85, 91], "coordin": [14, 59, 61, 62, 91, 98], "behavior": [14, 33, 34, 38, 62, 85], "At": [14, 62, 85], "get_available_issue_typ": 14, "direct": [15, 25, 34, 38], "valuabl": 16, "vstack": [16, 49, 84, 85, 86, 87, 89, 90], "25": [16, 24, 34, 45, 47, 80, 84, 86, 87, 89, 90, 91, 92, 98], "classvar": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "short": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 48, 49], "data_valuation_scor": 16, "item": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 49, 79, 80, 85, 86, 87, 89, 90], "some_info_kei": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "additional_info_kei": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "default_threshold": [16, 19, 26], "arxiv": [16, 87], "ab": [16, 87, 91], "1911": 16, "07128": 16, "larger": [16, 66, 68, 70, 83, 84, 85, 86], "collect_info": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "info_to_omit": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "compos": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 34, 38, 83, 92, 97], "is_x_issu": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "x_score": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_a": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_b1": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_b2": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "report_str": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30], "_": [17, 20, 21, 23, 24, 25, 28, 29, 45, 48, 49, 78, 79, 84, 86, 87, 90, 96], "near_duplicate_set": [17, 19, 79, 80, 82, 83, 85, 86, 87], "occurr": [17, 18, 20, 24, 25, 26, 29, 48], "median_nn_dist": 17, "near_duplicate_scor": [17, 79, 80, 82, 83, 85, 86, 87], "class_imbalance_scor": [18, 80], "bleed": [19, 22, 27, 36], "edg": [19, 22, 27, 36, 61, 76, 87, 98], "sharp": [19, 22, 27, 36], "get_health_summari": [19, 21], "ood": [19, 26, 63, 64, 79, 80, 83, 86, 87, 92], "simplified_kolmogorov_smirnov_test": [19, 24], "outlier_cluster_label": [19, 29], "no_underperforming_cluster_id": [19, 29], "set_knn_graph": [19, 29], "perform_clust": [19, 29], "get_worst_clust": [19, 29], "find_issues_with_predict": [19, 27, 28], "find_issues_with_featur": [19, 27, 28], "believ": [20, 95], "priori": [20, 87], "abstract": 20, "applic": [21, 54, 85, 87, 89, 98], "typevar": [21, 23, 34, 38, 48, 58, 61, 62], "scalartyp": [21, 23], "covari": [21, 23, 66, 94], "summary_dict": 21, "label_scor": [21, 23, 28, 78, 79, 80, 82, 83, 86, 87, 90, 94], "neighbor_histogram": 24, "non_neighbor_histogram": 24, "kolmogorov": 24, "smirnov": 24, "largest": [24, 37, 45, 64, 68, 70, 91, 95], "empir": [24, 44, 54], "cumul": 24, "ecdf": 24, "histogram": [24, 82, 94], "absolut": [24, 28], "dimension": [24, 49, 78, 87, 92], "trial": 24, "non_iid_scor": [24, 80, 82, 83, 87], "null_track": 25, "extend": [25, 46, 86, 91, 92, 98], "superclass": 25, "arbitrari": [25, 33, 70, 74, 79, 92, 94], "prompt": 25, "address": [25, 79, 80, 83, 85, 97], "enabl": [25, 38], "null_scor": [25, 80], "37037": 26, "q3_avg_dist": 26, "iqr_avg_dist": 26, "median_outlier_scor": 26, "multipli": 28, "deleg": 28, "confus": [29, 33, 34, 38, 40, 49, 62, 97, 98], "50": [29, 38, 85, 87, 89, 91, 92, 94, 98], "keepdim": [29, 85], "signifi": 29, "absenc": 29, "find_issues_kwarg": 29, "int64": [29, 78, 89], "npt": 29, "int_": 29, "id": [29, 54, 79, 85, 86, 89], "unique_cluster_id": 29, "_description_": 29, "performed_clust": 29, "worst_cluster_id": 29, "underperforming_group_scor": [29, 80], "datset": 30, "exclud": [30, 39, 71, 75, 79, 85, 98], "get_report": 30, "qualnam": [31, 45], "boundari": [31, 45, 79, 80], "enum": [31, 45], "continu": [31, 83, 85, 86, 89, 91, 94, 96, 97, 98], "binari": [31, 45, 49, 56, 58, 87, 98], "simultan": [31, 94], "task_str": 31, "is_classif": 31, "__contains__": [31, 41, 45], "member": [31, 34, 38, 45, 79, 80], "typeerror": [31, 45], "12": [31, 45, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98], "__getitem__": [31, 41, 45], "match": [31, 33, 34, 38, 40, 45, 54, 55, 64, 79, 80, 84, 86, 91, 93, 95], "__iter__": [31, 41, 45], "__len__": [31, 41, 45], "alias": [31, 45], "is_regress": 31, "is_multilabel": 31, "overview": [33, 78, 80, 82, 83, 86, 89, 91, 92, 94, 96, 97, 98], "modifi": [33, 34, 37, 38, 49, 85, 87], "help": [33, 34, 38, 62, 76, 77, 78, 79, 82, 83, 84, 85, 86, 89, 90, 94, 95, 96, 97, 98], "rank_classes_by_label_qu": [33, 80], "merg": [33, 48, 76, 84, 85, 98], "find_overlapping_class": [33, 85, 87], "problemat": [33, 55, 71, 75, 78, 91, 98], "unnorm": [33, 55, 87], "abov": [33, 34, 37, 38, 49, 54, 61, 62, 64, 70, 74, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "model_select": [33, 45, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 92, 94, 96, 97], "cross_val_predict": [33, 38, 78, 79, 80, 82, 83, 85, 87, 89, 93, 94, 96, 97], "get_data_labels_from_dataset": 33, "yourfavoritemodel": [33, 87], "cv": [33, 45, 78, 79, 80, 82, 87, 89, 96], "df": [33, 49, 75, 78, 85], "overall_label_qu": [33, 55], "col": 33, "prob": [33, 48, 87, 93], "divid": [33, 55, 64], "label_nois": [33, 55], "human": [33, 84, 95, 98], "clearli": [33, 64, 86, 91, 95], "num": [33, 55, 84, 87], "overlap": [33, 76, 84, 85, 87], "ontolog": 33, "publish": [33, 98], "therefor": [33, 64], "vehicl": [33, 84], "truck": [33, 84, 92, 95], "intuit": [33, 55], "car": [33, 84, 91, 95], "frequent": [33, 54, 82, 85, 94], "characterist": 33, "l": [33, 34, 38, 59, 61, 62], "class1": 33, "class2": 33, "relationship": 33, "dog": [33, 49, 55, 57, 71, 84, 85, 92, 93, 98], "cat": [33, 49, 55, 57, 84, 85, 92, 93], "captur": [33, 78, 91, 92, 95], "co": [33, 34, 35], "noisy_label": [33, 79, 80, 90], "overlapping_class": 33, "descend": [33, 34, 38, 45, 55, 62], "overall_label_health_scor": [33, 55, 87], "suggest": [33, 54, 55, 61, 83, 85, 86, 94, 97], "half": [33, 34, 36, 38, 55, 84, 98], "health_scor": [33, 55], "classes_by_label_qu": [33, 80], "cnn": [34, 36, 38, 86], "cifar": [34, 35, 84, 92], "teach": [34, 35], "bhanml": 34, "blob": 34, "master": [34, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 96, 97], "call_bn": [34, 36], "bn": 34, "input_channel": 34, "n_output": 34, "dropout_r": 34, "top_bn": 34, "architectur": [34, 38], "shown": [34, 62, 79, 85, 89, 92, 93, 95, 98], "forward": [34, 35, 36, 38, 86, 89], "overridden": [34, 38], "although": [34, 38, 63, 82, 96], "recip": [34, 38], "afterward": [34, 38], "sinc": [34, 38, 42, 50, 55, 62, 70, 74, 85, 89, 90, 91, 93, 98], "former": [34, 38], "hook": [34, 38, 84], "silent": [34, 37, 38], "t_destin": [34, 36, 38], "__call__": [34, 36, 38, 41, 45], "add_modul": [34, 36, 38], "child": [34, 38], "fn": [34, 38, 62], "recurs": [34, 38, 45], "submodul": [34, 38], "children": [34, 36, 38, 98], "nn": [34, 35, 38, 86], "init": [34, 38, 87], "no_grad": [34, 38, 86, 92], "init_weight": [34, 38], "linear": [34, 38, 83, 86, 97], "fill_": [34, 38], "net": [34, 38, 78, 84, 86], "in_featur": [34, 38], "out_featur": [34, 38], "bia": [34, 38, 86], "tensor": [34, 35, 38, 78, 83, 86, 92, 97], "requires_grad": [34, 38], "bfloat16": [34, 36, 38], "cast": [34, 38, 78], "buffer": [34, 36, 38], "datatyp": [34, 38], "xdoctest": [34, 38], "undefin": [34, 38], "var": [34, 38], "buf": [34, 38], "20l": [34, 38], "1l": [34, 38], "5l": [34, 38], "call_super_init": [34, 36, 38], "immedi": [34, 38, 92], "compil": [34, 36, 38, 53], "cpu": [34, 36, 38, 40, 78, 86], "move": [34, 38, 45, 77, 84], "cuda": [34, 36, 38, 78, 86], "devic": [34, 38, 78, 86], "gpu": [34, 38, 78, 83, 97], "live": [34, 38], "copi": [34, 38, 66, 78, 79, 80, 82, 85, 90, 93, 94, 96], "doubl": [34, 36, 38], "dump_patch": [34, 36, 38], "eval": [34, 36, 38, 86, 90, 92], "dropout": [34, 38], "batchnorm": [34, 38], "grad": [34, 38], "extra_repr": [34, 36, 38], "line": [34, 38, 76, 79, 84, 89, 92, 98], "get_buff": [34, 36, 38], "target": [34, 35, 38, 66, 67, 92, 94], "throw": [34, 38], "get_submodul": [34, 36, 38], "explan": [34, 38], "fulli": [34, 38, 53, 85], "qualifi": [34, 38], "referenc": [34, 38], "attributeerror": [34, 38], "invalid": [34, 38, 83], "resolv": [34, 38, 98], "get_extra_st": [34, 36, 38], "state_dict": [34, 36, 38], "set_extra_st": [34, 36, 38], "build": [34, 38, 86, 95], "picklabl": [34, 38], "serial": [34, 38], "backward": [34, 38, 86], "break": [34, 38, 86, 91], "pickl": [34, 38, 91], "get_paramet": [34, 36, 38], "let": [34, 38, 63, 64, 78, 80, 82, 83, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "net_b": [34, 38], "net_c": [34, 38], "conv": [34, 38], "conv2d": [34, 38, 86], "16": [34, 38, 45, 70, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 95, 97, 98], "33": [34, 38, 84, 91, 92, 98], "kernel_s": [34, 38], "stride": [34, 38], "200": [34, 38, 64, 84, 91, 98], "diagram": [34, 38, 93], "degre": [34, 38], "queri": [34, 38, 80, 85, 86, 90], "named_modul": [34, 36, 38], "o": [34, 38, 47, 48, 78, 79, 80, 84, 85, 87, 90, 91, 98], "transit": [34, 38], "ipu": [34, 36, 38], "load_state_dict": [34, 36, 38], "strict": [34, 38, 45], "persist": [34, 38], "strictli": [34, 38], "inplac": [34, 38, 89], "preserv": [34, 38, 49], "namedtupl": [34, 38], "missing_kei": [34, 38], "unexpected_kei": [34, 38], "runtimeerror": [34, 38], "idx": [34, 38, 49, 50, 62, 79, 85, 86, 87, 89, 91, 92], "named_buff": [34, 36, 38], "prefix": [34, 38, 78, 98], "remove_dupl": [34, 38], "prepend": [34, 38], "running_var": [34, 38], "named_children": [34, 36, 38], "conv4": [34, 38], "conv5": [34, 38], "memo": [34, 38], "named_paramet": [34, 36, 38], "register_backward_hook": [34, 36, 38], "deprec": [34, 38, 42, 78, 83, 85, 97], "favor": [34, 38], "register_full_backward_hook": [34, 36, 38], "removablehandl": [34, 38], "register_buff": [34, 36, 38], "running_mean": [34, 38], "register_forward_hook": [34, 36, 38], "with_kwarg": [34, 38], "always_cal": [34, 38], "possibli": [34, 38, 82, 96], "fire": [34, 38, 84], "register_module_forward_hook": [34, 38], "regardless": [34, 38, 79, 80], "register_forward_pre_hook": [34, 36, 38], "And": [34, 38], "forward_pr": [34, 38], "register_module_forward_pre_hook": [34, 38], "gradient": [34, 38, 82, 86, 94], "grad_input": [34, 38], "grad_output": [34, 38], "technic": [34, 38], "caller": [34, 38], "register_module_full_backward_hook": [34, 38], "register_full_backward_pre_hook": [34, 36, 38], "backward_pr": [34, 38], "register_module_full_backward_pre_hook": [34, 38], "register_load_state_dict_post_hook": [34, 36, 38], "post": [34, 38], "incompatible_kei": [34, 38], "modif": [34, 38], "thrown": [34, 38], "register_modul": [34, 36, 38], "register_paramet": [34, 36, 38], "register_state_dict_pre_hook": [34, 36, 38], "keep_var": [34, 38], "requires_grad_": [34, 36, 38], "autograd": [34, 38], "freez": [34, 38, 78, 83, 97], "finetun": [34, 38], "gan": [34, 38], "share_memori": [34, 36, 38], "share_memory_": [34, 38], "destin": [34, 38], "shallow": [34, 38], "releas": [34, 38, 77, 78, 85], "design": [34, 38], "ordereddict": [34, 38], "detach": [34, 38, 86], "non_block": [34, 38], "memory_format": [34, 38], "channels_last": [34, 38], "Its": [34, 38, 45, 55, 61], "complex": [34, 38, 78], "integr": [34, 38, 76], "asynchron": [34, 38], "host": [34, 38], "pin": [34, 38, 83, 84, 97], "desir": [34, 38, 48, 62], "4d": [34, 38], "ignore_w": [34, 38], "determinist": [34, 38, 78], "1913": [34, 38], "3420": [34, 38], "5113": [34, 38], "2325": [34, 38], "env": [34, 38], "torch_doctest_cuda1": [34, 38], "gpu1": [34, 38], "1914": [34, 38], "5112": [34, 38], "2324": [34, 38], "float16": [34, 38], "cdoubl": [34, 38], "3741": [34, 38], "2382": [34, 38], "5593": [34, 38], "4443": [34, 38], "complex128": [34, 38], "6122": [34, 38], "1150": [34, 38], "to_empti": [34, 36, 38], "storag": [34, 38, 83, 97], "dst_type": [34, 38], "xpu": [34, 36, 38], "zero_grad": [34, 36, 38, 86], "set_to_non": [34, 38], "reset": [34, 38], "context": [34, 38, 91], "noisili": [35, 87], "han": 35, "2018": 35, "cifar_cnn": [35, 36], "loss_coteach": [35, 36], "y_1": 35, "y_2": 35, "forget_r": 35, "class_weight": 35, "logit": [35, 53, 86], "decim": [35, 49], "quickli": [35, 78, 82, 83, 85, 86, 90, 92, 95, 96, 98], "forget": [35, 45, 98], "rate_schedul": 35, "epoch": [35, 36, 38, 85, 86], "initialize_lr_schedul": [35, 36], "lr": [35, 36, 38], "001": [35, 64, 85], "250": [35, 79, 80, 87, 91], "epoch_decay_start": 35, "80": [35, 82, 90, 94, 96], "schedul": 35, "adjust": [35, 40, 58, 63, 64, 76, 87], "beta": 35, "adam": 35, "adjust_learning_r": [35, 36], "alpha_plan": 35, "beta1_plan": 35, "forget_rate_schedul": [35, 36], "num_gradu": 35, "expon": 35, "tell": [35, 83, 86, 87, 97], "train_load": [35, 38], "model1": [35, 87], "optimizer1": 35, "model2": [35, 87], "optimizer2": 35, "dataload": [35, 86, 92], "parser": 35, "parse_arg": 35, "num_iter_per_epoch": 35, "print_freq": 35, "topk": 35, "top1": 35, "top5": 35, "test_load": 35, "offici": [36, 52, 98], "wish": [36, 52, 92, 95, 98], "adj_confident_thresholds_shar": [36, 37], "labels_shar": [36, 37], "pred_probs_shar": [36, 37], "labelinspector": [36, 37, 85], "get_num_issu": [36, 37], "get_quality_scor": [36, 37], "update_confident_threshold": [36, 37], "score_label_qu": [36, 37], "split_arr": [36, 37], "display_issu": [36, 39, 69, 70, 71, 72, 73, 74, 75, 95, 98], "mnist_pytorch": 36, "get_mnist_dataset": [36, 38], "get_sklearn_digits_dataset": [36, 38], "simplenet": [36, 38], "batch_siz": [36, 37, 38, 68, 70, 85, 86, 92, 95], "log_interv": [36, 38], "momentum": [36, 38], "no_cuda": [36, 38], "test_batch_s": [36, 38, 86], "loader": [36, 38, 86], "set_predict_proba_request": [36, 38], "set_predict_request": [36, 38], "coteach": [36, 77], "mini": [37, 68, 70, 85], "low_self_confid": [37, 40, 56], "self_confid": [37, 40, 41, 45, 56, 58, 64, 72, 74, 85, 87, 96, 97], "conveni": [37, 78, 83, 97], "script": 37, "labels_fil": [37, 85], "pred_probs_fil": [37, 85], "quality_score_kwarg": 37, "num_issue_kwarg": 37, "return_mask": 37, "variant": [37, 54, 95], "read": [37, 42, 80, 85, 87, 92, 98], "zarr": [37, 85], "memmap": [37, 95], "pythonspe": 37, "mmap": [37, 85], "hdf5": 37, "further": [37, 39, 55, 56, 58, 61, 62, 70, 71, 78, 85], "yourfil": 37, "npy": [37, 84, 85, 95], "mmap_mod": [37, 95], "tip": [37, 40, 53, 85], "save_arrai": 37, "your_arrai": 37, "disk": [37, 84, 85], "npz": [37, 98], "maxim": [37, 54, 68, 70, 95], "multiprocess": [37, 40, 56, 68, 70, 85, 86], "linux": [37, 68, 70], "physic": [37, 40, 68, 70, 91], "psutil": [37, 40, 68, 70], "labels_arrai": [37, 50], "predprob": 37, "pred_probs_arrai": 37, "back": [37, 62, 79, 85, 91, 92], "store_result": 37, "becom": [37, 92], "verifi": [37, 85, 89, 92], "long": [37, 54, 63, 89], "enough": [37, 49, 85], "chunk": [37, 93], "ram": [37, 84], "faster": [37, 63, 66, 68, 70, 85, 87], "end_index": 37, "labels_batch": 37, "pred_probs_batch": 37, "batch_result": 37, "indices_of_examples_with_issu": [37, 85], "shortcut": 37, "encount": [37, 40, 68], "1000": [37, 78, 83, 85, 92], "aggreg": [37, 41, 45, 54, 58, 61, 64, 74, 85, 87, 89], "fetch": [37, 78, 80], "seen": [37, 85, 92, 98], "far": [37, 54], "label_quality_scor": [37, 58, 61, 64, 67, 87, 91], "method1": 37, "method2": 37, "normalized_margin": [37, 40, 41, 45, 56, 58, 64, 72, 74], "low_normalized_margin": [37, 40, 56], "issue_indic": [37, 61, 86], "update_num_issu": 37, "arr": [37, 85], "chunksiz": 37, "convnet": 38, "bespok": [38, 53], "download": [38, 78, 85, 92], "mnist": [38, 76, 78, 84], "handwritten": 38, "digit": [38, 78, 84], "last": [38, 45, 59, 62, 79, 80, 85, 89, 91, 98], "sklearn_digits_test_s": 38, "64": [38, 82, 86, 87, 91, 92, 96], "01": [38, 64, 66, 78, 87, 90, 91, 92], "templat": 38, "flexibli": 38, "among": [38, 54, 87], "test_set": 38, "Be": 38, "overrid": 38, "train_idx": [38, 49, 92], "train_label": [38, 92, 97], "scikit": [38, 49, 63, 76, 78, 79, 80, 82, 83, 85, 88, 94, 97], "span": 39, "sentenc": [39, 48, 72, 74, 75, 83, 97], "token_classif": [39, 48, 72, 74, 75, 85], "span_classif": 39, "encourag": [40, 56, 64, 67], "multilabel_classif": [40, 55, 56, 58, 64, 85, 90], "pred_probs_by_class": 40, "prune_count_matrix_col": 40, "rank_by_kwarg": [40, 56, 64, 87], "num_to_remove_per_class": [40, 56], "bad": [40, 56, 61, 64, 83, 85, 97], "seem": [40, 87, 90], "aren": 40, "confidence_weighted_entropi": [40, 41, 45, 56, 58, 64, 72, 74], "label_issues_idx": [40, 64], "entropi": [40, 42, 44, 45, 63, 64], "prune_by_class": [40, 56, 87], "predicted_neq_given": [40, 56, 87], "prune_counts_matrix": 40, "smallest": [40, 64], "unus": 40, "number_of_mislabeled_examples_in_class_k": 40, "delet": [40, 76, 85, 97], "thread": [40, 56], "window": [40, 78, 84], "shorter": [40, 59], "find_predicted_neq_given": 40, "find_label_issues_using_argmax_confusion_matrix": 40, "remove_noise_from_class": [41, 49], "clip_noise_r": [41, 49], "clip_valu": [41, 49], "value_count": [41, 49, 85], "value_counts_fill_missing_class": [41, 49], "get_missing_class": [41, 49], "round_preserving_sum": [41, 49], "round_preserving_row_tot": [41, 49], "estimate_pu_f1": [41, 49], "confusion_matrix": [41, 49], "print_square_matrix": [41, 49], "print_noise_matrix": [41, 49, 87], "print_inverse_noise_matrix": [41, 49], "print_joint_matrix": [41, 49, 87], "compress_int_arrai": [41, 49], "train_val_split": [41, 49], "subset_x_i": [41, 49], "subset_label": [41, 49], "subset_data": [41, 49], "extract_indices_tf": [41, 49], "unshuffle_tensorflow_dataset": [41, 49], "is_torch_dataset": [41, 49], "is_tensorflow_dataset": [41, 49], "csr_vstack": [41, 49], "append_extra_datapoint": [41, 49], "get_num_class": [41, 49], "num_unique_class": [41, 49], "get_unique_class": [41, 49], "format_label": [41, 49], "smart_display_datafram": [41, 49], "force_two_dimens": [41, 49], "latent_algebra": [41, 77], "compute_ps_py_inv_noise_matrix": [41, 43], "compute_py_inv_noise_matrix": [41, 43], "compute_inv_noise_matrix": [41, 43], "compute_noise_matrix_from_invers": [41, 43], "compute_pi": [41, 43], "compute_pyx": [41, 43], "label_quality_util": 41, "get_normalized_entropi": [41, 42], "multilabel_util": [41, 90], "stack_compl": [41, 46], "get_onehot_num_class": [41, 46], "int2onehot": [41, 46, 90], "onehot2int": [41, 46, 90], "multilabel_scor": [41, 58], "classlabelscor": [41, 45], "exponential_moving_averag": [41, 45, 58], "softmin": [41, 45, 58, 61, 70, 74], "possible_method": [41, 45], "multilabelscor": [41, 45], "get_class_label_quality_scor": [41, 45], "multilabel_pi": [41, 45], "get_cross_validated_multilabel_pred_prob": [41, 45], "transform_distances_to_scor": [41, 47], "token_classification_util": [41, 98], "get_sent": [41, 48, 98], "filter_sent": [41, 48, 98], "process_token": [41, 48], "merge_prob": [41, 48], "color_sent": [41, 48], "assert_valid_input": [41, 50], "assert_valid_class_label": [41, 50], "assert_nonempty_input": [41, 50], "assert_indexing_work": [41, 50], "labels_to_arrai": [41, 50], "labels_to_list_multilabel": [41, 50], "min_allowed_prob": 42, "wikipedia": 42, "activ": [42, 44, 54, 76, 89], "towardsdatasci": 42, "cheatsheet": 42, "ec57bc067c0b": 42, "clip": [42, 49, 78], "behav": 42, "unnecessari": [42, 85], "slightli": [42, 96, 97], "interv": [42, 45, 92], "herein": 43, "inexact": 43, "cours": 43, "propag": 43, "throughout": [43, 49, 66, 78, 89, 95, 98], "increas": [43, 61, 63, 64, 78, 79, 85, 89, 90, 98], "dot": [43, 74, 85], "true_labels_class_count": 43, "pyx": 43, "multiannot": 44, "assert_valid_inputs_multiannot": 44, "labels_multiannot": [44, 54], "ensembl": [44, 45, 54, 64, 82, 85, 90, 92, 94, 96], "allow_single_label": 44, "annotator_id": 44, "assert_valid_pred_prob": 44, "pred_probs_unlabel": [44, 54], "format_multiannotator_label": [44, 54, 89], "formatted_label": [44, 49], "old": [44, 49, 77, 78, 84], "check_consensus_label_class": 44, "consensus_label": [44, 54, 89], "consensus_method": [44, 54], "consensu": [44, 54, 76, 88, 98], "establish": [44, 94, 97], "compute_soft_cross_entropi": 44, "soft": [44, 84], "find_best_temp_scal": 44, "coarse_search_rang": [44, 66, 85], "fine_search_s": [44, 66, 85], "temperatur": [44, 45, 61, 70, 74], "scale": [44, 47, 84, 85, 92, 95, 96], "factor": [44, 45, 47, 68, 70], "minim": [44, 61, 92], "temp_scale_pred_prob": 44, "temp": 44, "sharpen": [44, 84], "smoothen": 44, "get_normalized_margin_for_each_label": [45, 64], "get_confidence_weighted_entropy_for_each_label": [45, 64], "75": [45, 79, 80, 84, 89, 90, 91, 92, 94, 98], "scorer": 45, "alpha": [45, 58, 61, 79, 80, 87, 90, 94], "exponenti": 45, "ema": 45, "s_1": 45, "s_k": 45, "ema_k": 45, "accord": [45, 56, 82, 83, 87, 98], "formula": [45, 47], "_t": 45, "cdot": 45, "s_t": 45, "qquad": 45, "leq": 45, "_1": 45, "give": [45, 64, 87, 89, 95], "recent": [45, 98], "success": 45, "previou": [45, 85, 86, 91], "discount": 45, "s_ema": 45, "175": [45, 86, 87, 91], "underflow": 45, "nan": [45, 54, 82, 89, 94, 96], "aggregated_scor": 45, "base_scor": 45, "base_scorer_kwarg": 45, "aggregator_kwarg": [45, 58], "n_sampl": 45, "n_label": 45, "worst": [45, 89], "class_label_quality_scor": 45, "42": [45, 83, 84, 91, 92, 98], "452": 45, "new_scor": 45, "575": 45, "get_label_quality_scores_per_class": [45, 57, 58], "ml_scorer": 45, "binar": [45, 46], "reformat": [45, 78], "wider": 45, "splitter": 45, "kfold": [45, 86], "onevsrestclassifi": [45, 90], "randomforestclassifi": [45, 87, 90], "n_split": [45, 80, 86, 90], "pred_prob_slic": 46, "onehot": 46, "hot": [46, 56, 62, 68, 71, 82, 84, 85, 94, 95, 96], "onehot_matrix": 46, "avg_dist": 47, "scaling_factor": 47, "exp": [47, 63, 64, 79], "dt": 47, "right": [47, 59, 62, 83, 90, 91, 92, 97], "strength": [47, 62], "pronounc": 47, "differenti": 47, "ly": 47, "rule": [47, 48, 84], "thumb": 47, "ood_features_scor": [47, 63, 92], "88988177": 47, "80519832": 47, "readabl": 48, "lambda": [48, 78, 79, 85, 89], "long_sent": 48, "headlin": 48, "charact": [48, 49], "s1": 48, "s2": 48, "processed_token": 48, "alecnlcb": 48, "entiti": [48, 76, 85, 98], "mapped_ent": 48, "unique_ident": 48, "loc": [48, 79, 80, 86, 98], "nbitbas": [48, 58], "probs_merg": 48, "55": [48, 84, 91, 94, 98], "0125": [48, 74], "0375": 48, "075": 48, "025": 48, "color": [48, 71, 79, 80, 82, 87, 90, 92, 94, 95], "red": [48, 62, 79, 80, 84, 87, 90, 91, 92, 95], "colored_sent": 48, "termcolor": 48, "31msentenc": 48, "0m": 48, "ancillari": 49, "class_without_nois": 49, "any_other_class": 49, "choos": [49, 64, 82, 85, 87, 94, 96], "tradition": 49, "new_sum": 49, "fill": 49, "come": [49, 79, 80, 85, 92, 95], "major": [49, 54, 77, 86, 92], "versu": [49, 87], "obviou": 49, "cgdeboer": 49, "iteround": 49, "reach": 49, "prob_s_eq_1": 49, "claesen": 49, "f1": [49, 62, 83, 87], "BE": 49, "left_nam": 49, "top_nam": 49, "titl": [49, 79, 80, 87, 90, 92], "short_titl": 49, "round_plac": 49, "pretti": [49, 87], "joint_matrix": 49, "num_possible_valu": 49, "holdout_idx": 49, "extract": [49, 63, 78, 83, 89, 92, 95, 97], "allow_shuffl": 49, "turn": [49, 76, 91], "shuffledataset": 49, "histori": 49, "pre_x": 49, "buffer_s": 49, "csr_matric": 49, "append": [49, 78, 84, 85, 86, 87, 89, 90, 91, 92, 98], "bottom": [49, 59, 62, 91], "to_data": 49, "from_data": 49, "taken": 49, "label_matrix": 49, "canon": 49, "displai": [49, 62, 71, 75, 78, 83, 87, 97, 98], "jupyt": [49, 78, 79, 80, 84, 85, 86, 87, 89, 90, 92, 94, 98], "notebook": [49, 54, 78, 80, 84, 85, 87, 89, 90, 91, 95, 98], "consol": 49, "html": [49, 59, 62, 63, 82, 85, 87], "allow_missing_class": 50, "allow_one_class": 50, "length_x": 50, "labellik": 50, "labels_list": [50, 56], "keraswrappermodel": [52, 53, 76], "keraswrappersequenti": [52, 53], "tf": [53, 78], "legaci": 53, "lack": 53, "keraswrapp": 53, "huggingface_keras_imdb": 53, "unit": [53, 98], "model_kwarg": [53, 66], "compile_kwarg": 53, "sparsecategoricalcrossentropi": 53, "layer": [53, 78, 83, 92, 97], "dens": 53, "my_keras_model": 53, "from_logit": 53, "declar": 53, "apply_softmax": 53, "analysi": 54, "analyz": [54, 76, 87, 89, 90], "get_label_quality_multiannot": [54, 89], "vote": 54, "crowdsourc": [54, 76, 89], "dawid": [54, 89], "skene": [54, 89], "analog": [54, 84, 89], "chosen": [54, 64, 85, 89], "crowdlab": [54, 89], "unlabel": [54, 82, 83, 86, 89, 92, 95], "decid": [54, 83, 84, 89, 94, 97, 98], "get_active_learning_scor": [54, 89], "activelab": [54, 89], "priorit": [54, 61, 91, 95, 98], "showcas": 54, "main": 54, "best_qual": 54, "quality_method": 54, "calibrate_prob": 54, "return_detailed_qu": 54, "return_annotator_stat": 54, "return_weight": 54, "label_quality_score_kwarg": 54, "necessarili": [54, 62, 83, 87], "did": [54, 55, 78, 82, 87, 89, 94, 96, 97], "majority_vot": 54, "broken": [54, 62, 84, 94], "highest": [54, 62, 79, 86, 93], "0th": 54, "consensus_quality_scor": [54, 89], "annotator_agr": [54, 89], "reman": 54, "1st": 54, "2nd": [54, 68], "3rd": 54, "consensus_label_suffix": 54, "consensus_quality_score_suffix": 54, "suffix": 54, "emsembl": 54, "weigh": [54, 84], "agreement": [54, 89], "agre": 54, "prevent": [54, 85], "overconfid": [54, 93], "wrong": [54, 59, 61, 77, 79, 80, 83, 85, 87, 91, 97], "detailed_label_qu": [54, 89], "annotator_stat": [54, 89], "model_weight": 54, "annotator_weight": 54, "warn": [54, 79, 80, 85], "labels_info": 54, "num_annot": [54, 89], "deriv": [54, 89], "quality_annotator_1": 54, "quality_annotator_2": 54, "quality_annotator_m": 54, "annotator_qu": [54, 89], "num_examples_label": [54, 89], "agreement_with_consensu": [54, 89], "worst_class": [54, 89], "trustworthi": [54, 89, 94], "get_label_quality_multiannotator_ensembl": 54, "weigtht": 54, "budget": 54, "retrain": [54, 94, 97], "active_learning_scor": 54, "improv": [54, 80, 84, 85, 86, 87, 94, 95, 96, 97], "active_learning_scores_unlabel": 54, "get_active_learning_scores_ensembl": 54, "henc": [54, 78, 79, 89], "get_majority_vote_label": [54, 89], "event": 54, "lastli": [54, 82], "convert_long_to_wide_dataset": 54, "labels_multiannotator_long": 54, "wide": [54, 78, 96, 97], "suitabl": [54, 82, 96], "labels_multiannotator_wid": 54, "common_multilabel_issu": [55, 57], "mutual": [55, 90], "exclus": [55, 90], "rank_classes_by_multilabel_qu": [55, 57], "overall_multilabel_health_scor": [55, 57], "multilabel_health_summari": [55, 57], "classes_by_multilabel_qu": 55, "inner": [56, 70], "find_multilabel_issues_per_class": [56, 57], "per_class_label_issu": 56, "label_issues_list": 56, "pred_probs_list": [56, 64, 86, 87], "anim": [57, 92], "rat": 57, "predat": 57, "pet": 57, "reptil": 57, "manner": [58, 89, 94, 96, 97], "box": [59, 61, 62, 84, 91], "object_detect": [59, 61, 62, 91], "return_indices_ranked_by_scor": [59, 91], "overlapping_label_check": [59, 61], "suboptim": [59, 61], "locat": [59, 61, 91, 95, 98], "bbox": [59, 62, 91], "image_nam": [59, 62], "y1": [59, 62, 91], "y2": [59, 62, 91], "later": [59, 62, 63, 97, 98], "corner": [59, 62, 91], "xyxi": [59, 62, 91], "io": [59, 62, 78, 84], "keras_cv": [59, 62], "bounding_box": [59, 62, 91], "detectron": [59, 62, 91], "detectron2": [59, 62, 91], "readthedoc": [59, 62], "en": [59, 62], "latest": [59, 62], "visual": [59, 60, 62, 79, 80, 86, 94, 96, 98], "draw_box": [59, 62], "mmdetect": [59, 62, 91], "swap": [59, 61, 71, 75], "penal": [59, 61], "concern": [59, 61, 76, 80], "issues_from_scor": [60, 61, 69, 70, 71, 73, 74, 75, 91, 95, 98], "compute_overlooked_box_scor": [60, 61], "compute_badloc_box_scor": [60, 61], "compute_swap_box_scor": [60, 61], "pool_box_scores_per_imag": [60, 61], "object_counts_per_imag": [60, 62, 91], "bounding_box_size_distribut": [60, 62, 91], "class_label_distribut": [60, 62, 91], "get_sorted_bbox_count_idx": [60, 62], "plot_class_size_distribut": [60, 62], "plot_class_distribut": [60, 62], "get_average_per_class_confusion_matrix": [60, 62], "calculate_per_class_metr": [60, 62], "aggregation_weight": 61, "imperfect": [61, 85], "chose": [61, 89, 91], "imperfectli": [61, 91], "dirti": [61, 64, 67, 94], "subtyp": 61, "badloc": 61, "nonneg": 61, "high_probability_threshold": 61, "auxiliary_input": [61, 62], "vari": [61, 80], "iou": [61, 62], "heavili": 61, "auxiliarytypesdict": 61, "pred_label": [61, 97], "pred_label_prob": 61, "pred_bbox": 61, "lab_label": 61, "lab_bbox": 61, "similarity_matrix": 61, "min_possible_similar": 61, "scores_overlook": 61, "low_probability_threshold": 61, "scores_badloc": 61, "accident": [61, 82, 83, 85, 97], "scores_swap": 61, "box_scor": 61, "image_scor": [61, 70, 95], "discov": [62, 80, 98], "auxiliari": [62, 92, 95], "_get_valid_inputs_for_compute_scor": 62, "object_count": 62, "down": 62, "bbox_siz": 62, "class_distribut": 62, "plot": [62, 79, 80, 87, 90, 92, 94, 95], "sorted_idx": [62, 92], "class_to_show": 62, "hidden": [62, 92], "max_class_to_show": 62, "prediction_threshold": 62, "overlai": [62, 91], "figsiz": [62, 79, 80, 86, 87, 90, 92], "save_path": [62, 91], "blue": [62, 84, 87, 91], "overlaid": 62, "side": [62, 84, 91], "figur": [62, 87, 90, 92, 94], "extens": [62, 87, 89], "png": [62, 91], "pdf": [62, 63], "svg": 62, "matplotlib": [62, 79, 80, 86, 87, 90, 91, 92, 94], "num_proc": [62, 86], "intersect": [62, 85], "tp": 62, "fp": 62, "ground": [62, 84, 87, 89, 94], "truth": [62, 87, 89, 94], "bias": 62, "avg_metr": 62, "distionari": 62, "95": [62, 72, 74, 82, 84, 87, 94], "per_class_metr": 62, "Of": 63, "li": 63, "smaller": [63, 90, 91], "find_top_issu": [63, 64, 92], "reli": [63, 78, 79, 80, 83, 91, 92, 94, 97], "dist_metr": 63, "dim": [63, 86, 95], "subtract": [63, 64], "renorm": [63, 64, 85], "least_confid": 63, "sum_": 63, "log": [63, 64, 77], "softmax": [63, 70, 74, 86], "literatur": 63, "gen": 63, "liu": 63, "lochman": 63, "zach": 63, "openaccess": 63, "thecvf": 63, "content": [63, 78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "cvpr2023": 63, "liu_gen_pushing_the_limits_of_softmax": 63, "based_out": 63, "distribution_detection_cvpr_2023_pap": 63, "fit_scor": [63, 92], "ood_predictions_scor": 63, "pretrain": [63, 78, 83, 92, 97], "adjust_confident_threshold": 63, "probabilist": [63, 78, 79, 80, 82, 83, 92, 93, 96], "order_label_issu": [64, 77], "whichev": [64, 93], "argsort": [64, 83, 86, 87, 91, 92, 94, 97], "max_": 64, "get_label_quality_ensemble_scor": [64, 85, 87], "weight_ensemble_members_bi": 64, "custom_weight": 64, "log_loss_search_t_valu": 64, "0001": [64, 84], "scheme": 64, "log_loss_search": 64, "log_loss": [64, 83], "1e0": 64, "1e1": 64, "1e2": 64, "2e2": 64, "quality_scor": [64, 92], "forth": 64, "top_issue_indic": 64, "rank_bi": [64, 77], "weird": [64, 75], "minu": 64, "prob_label": 64, "max_prob_not_label": 64, "idea": [64, 91], "AND": [64, 83], "get_epistemic_uncertainti": [65, 66], "get_aleatoric_uncertainti": [65, 66], "corrupt": [66, 94], "linearregress": [66, 85, 94], "y_with_nois": 66, "n_boot": [66, 85], "include_aleatoric_uncertainti": [66, 85], "sole": [66, 79, 89, 92, 96], "bootstrap": [66, 85, 94], "resampl": [66, 78, 85], "epistem": [66, 85, 92, 94], "aleator": [66, 85, 94], "model_final_kwarg": 66, "coars": 66, "thorough": [66, 85], "fine": [66, 78, 83, 92, 97], "grain": 66, "grid": 66, "varianc": [66, 87], "epistemic_uncertainti": 66, "residu": [66, 67, 85], "deviat": [66, 91, 94], "aleatoric_uncertainti": 66, "outr": 67, "contin": 67, "raw": [67, 76, 77, 80, 84, 86, 89, 91, 92, 94], "aka": [67, 78, 87, 91, 94, 98], "00323821": 67, "33692597": 67, "00191686": 67, "semant": [68, 70, 71, 88], "pixel": [68, 70, 71, 92, 95], "h": [68, 70, 71, 95], "height": [68, 70, 71, 95], "w": [68, 70, 71, 95], "width": [68, 70, 71, 95], "labels_one_hot": [68, 71, 95], "stream": [68, 92, 98], "downsampl": [68, 70, 95], "shrink": [68, 70], "divis": [68, 70, 79], "common_label_issu": [69, 71, 73, 75, 95, 98], "filter_by_class": [69, 71, 95], "segmant": [70, 71], "num_pixel_issu": [70, 95], "product": [70, 85, 86], "pixel_scor": [70, 95], "highlight": [71, 75, 79, 80, 82, 95], "enter": 71, "legend": [71, 79, 80, 90, 91, 94, 95], "colormap": 71, "background": 71, "person": [71, 85, 91, 95, 98], "ambigu": [71, 75, 78, 83, 84, 87, 97, 98], "systemat": [71, 75, 89], "misunderstood": [71, 75], "issues_df": [71, 86], "class_index": 71, "issues_subset": [71, 75], "filter_by_token": [73, 75, 98], "token_score_method": 74, "sentence_score_method": 74, "sentence_score_kwarg": 74, "compris": [74, 75], "token_scor": [74, 98], "converg": 74, "toward": 74, "_softmin_sentence_scor": 74, "sentence_scor": [74, 98], "token_info": 74, "70": [74, 82, 98], "02": [74, 79, 80, 87, 91, 92, 98], "03": [74, 82, 84, 87, 91, 92, 98], "04": [74, 82, 91, 92], "08": [74, 87, 91, 94, 98], "commonli": [75, 77, 79, 80, 90, 98], "But": [75, 83, 87, 94, 98], "restrict": [75, 85], "reliabl": [76, 78, 85, 89, 95, 96], "thousand": 76, "imagenet": [76, 84], "popular": [76, 89, 91], "centric": [76, 82, 83, 86, 88], "capabl": 76, "minut": [76, 78, 82, 83, 84, 89, 90, 91, 94, 95, 96, 97, 98], "conda": 76, "feature_embed": [76, 92], "Then": [76, 85, 86, 96, 97], "your_dataset": [76, 78, 79, 80, 82, 83, 85, 86], "column_name_of_label": [76, 78, 79, 80, 82, 83, 86], "plagu": [76, 80], "untrain": 76, "\u30c4": 76, "label_issues_info": [76, 80], "sklearn_compatible_model": 76, "framework": [76, 90, 91], "complianc": 76, "tag": [76, 90, 98], "sequenc": 76, "recognit": [76, 78, 85, 98], "train_data": [76, 92, 94, 96, 97], "gotten": 76, "test_data": [76, 87, 90, 92, 94, 96, 97], "deal": [76, 80], "tutori": [76, 78, 79, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "feel": [76, 78, 80, 85], "free": [76, 78, 80, 82, 83, 85, 86, 87], "ask": [76, 85], "slack": [76, 85], "project": [76, 94], "welcom": 76, "commun": [76, 85], "guidelin": [76, 91], "piec": 76, "studio": [76, 80, 82, 83, 85, 86], "platform": [76, 82, 83, 85, 86], "automl": [76, 85], "foundat": 76, "smart": [76, 82, 83, 85, 86], "edit": [76, 85], "easier": [76, 87], "unreli": [76, 78, 82, 83, 96], "link": [76, 78, 84, 91], "older": 77, "outlin": 77, "substitut": 77, "v2": [77, 82, 96], "get_noise_indic": 77, "psx": 77, "sorted_index_method": 77, "order_label_error": 77, "label_errors_bool": 77, "latent_estim": 77, "num_label_error": 77, "learningwithnoisylabel": 77, "neatli": 77, "organ": [77, 82, 84, 96, 98], "reorgan": 77, "baseline_method": 77, "incorpor": [77, 87], "research": [77, 87], "polyplex": 77, "terminologi": 77, "label_error": 77, "quickstart": [78, 79, 80, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "spoken": 78, "500": [78, 92, 98], "english": [78, 84], "pronunci": 78, "wav": 78, "huggingfac": [78, 79, 80, 86], "voxceleb": 78, "speech": [78, 98], "your_pred_prob": [78, 79, 80, 82, 83], "tensorflow_io": 78, "huggingface_hub": 78, "branch": [78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 96, 97], "reproduc": [78, 82, 87, 89], "command": 78, "wget": [78, 91, 95, 98], "navig": 78, "browser": 78, "jakobovski": 78, "archiv": [78, 98], "v1": 78, "tar": [78, 92], "gz": [78, 92], "mkdir": [78, 98], "spoken_digit": 78, "xf": 78, "6_nicolas_32": 78, "data_path": 78, "listdir": 78, "nondeterminist": 78, "file_nam": 78, "endswith": 78, "file_path": 78, "join": [78, 85, 86], "39": [78, 79, 83, 84, 85, 86, 91, 92, 94, 95, 97, 98], "7_george_26": 78, "0_nicolas_24": 78, "0_nicolas_6": 78, "listen": 78, "display_exampl": 78, "click": [78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "expand": [78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "pulldown": [78, 79, 80, 84, 86, 87, 89, 90, 92, 94, 98], "colab": [78, 79, 80, 84, 85, 86, 87, 89, 90, 92, 94, 98], "tfio": 78, "pathlib": 78, "ipython": 78, "load_wav_16k_mono": 78, "filenam": 78, "khz": 78, "file_cont": 78, "read_fil": 78, "sample_r": 78, "decode_wav": 78, "desired_channel": 78, "squeez": 78, "rate_in": 78, "rate_out": 78, "16000": 78, "wav_file_nam": 78, "audio_r": 78, "wav_file_exampl": 78, "plai": [78, 84, 85], "button": 78, "wav_file_name_exampl": 78, "7_jackson_43": 78, "hear": 78, "extractor": 78, "encoderclassifi": 78, "spkrec": 78, "xvect": 78, "feature_extractor": 78, "from_hparam": 78, "run_opt": 78, "uncom": 78, "ffmpeg": 78, "system": [78, 82, 83, 86, 95], "backend": 78, "wav_audio_file_path": 78, "head": [78, 80, 82, 83, 84, 86, 87, 89, 94, 96, 97], "torchaudio": 78, "extract_audio_embed": 78, "emb": [78, 86], "signal": 78, "encode_batch": 78, "embeddings_list": [78, 86], "embeddings_arrai": 78, "opt": [78, 80, 83, 97], "hostedtoolcach": [78, 80, 83, 97], "x64": [78, 80, 83, 97], "lib": [78, 80, 83, 97], "python3": [78, 80, 83, 97], "site": [78, 80, 83, 97], "650": 78, "userwarn": [78, 79, 80, 83, 97], "stft": 78, "return_complex": 78, "view_as_r": 78, "recov": 78, "trigger": 78, "aten": 78, "src": 78, "nativ": 78, "spectralop": 78, "cpp": 78, "863": [78, 97], "_vf": 78, "n_fft": 78, "hop_length": 78, "win_length": 78, "attr": 78, "512": [78, 86], "14": [78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "196311": 78, "319459": 78, "478975": 78, "2890875": 78, "8170238": 78, "89265": 78, "24": [78, 84, 87, 89, 91, 94], "898056": 78, "256195": 78, "559641": 78, "559721": 78, "62067": 78, "285245": 78, "21": [78, 79, 84, 85, 87, 91, 94, 98], "709627": 78, "5033693": 78, "913803": 78, "819831": 78, "1831515": 78, "208763": 78, "084257": 78, "3210397": 78, "005453": 78, "216152": 78, "478235": 78, "6821785": 78, "053807": 78, "242471": 78, "091424": 78, "78334856": 78, "03954": 78, "23": [78, 84, 86, 87, 91, 94], "569176": 78, "19": [78, 83, 84, 85, 86, 87, 91, 92, 94, 95, 97], "761097": 78, "1258295": 78, "753237": 78, "3508866": 78, "598274": 78, "23712": 78, "2500": 78, "leverag": [78, 83, 85, 87, 89, 97], "tune": [78, 83, 84, 92, 97], "computation": [78, 83, 97], "intens": [78, 83, 97], "held": [78, 82, 83, 84, 91, 92, 93, 96], "straightforward": [78, 82, 96], "benefit": [78, 93, 95, 96], "tol": 78, "num_crossval_fold": [78, 82, 89, 96], "decreas": [78, 85], "accuracy_scor": [78, 83, 87, 96, 97], "cv_accuraci": 78, "9708": 78, "probabilit": [78, 97], "9976": 78, "986": 78, "002161": 78, "176": [78, 84, 87, 90], "002483": 78, "2318": 78, "004411": 78, "1005": 78, "004857": 78, "1871": 78, "007494": 78, "investig": 78, "040587": 78, "999207": 78, "999377": 78, "975220": 78, "999367": 78, "18": [78, 83, 84, 85, 87, 91, 92, 94, 95, 97], "identified_label_issu": [78, 83], "lowest_quality_label": [78, 83, 87, 94, 97], "sort_valu": [78, 80, 82, 83, 85, 86, 87, 89, 90, 94], "516": 78, "1946": 78, "469": 78, "2132": 78, "worth": [78, 87], "iloc": [78, 82, 83, 94, 96, 97], "6_yweweler_25": 78, "7_nicolas_43": 78, "6_theo_27": 78, "6_yweweler_36": 78, "6_yweweler_14": 78, "6_yweweler_35": 78, "6_nicolas_8": 78, "sound": 78, "quit": [78, 92], "22": [78, 79, 84, 86, 87, 90, 91, 92, 98], "blindli": [78, 85, 94, 96, 97], "trust": [78, 85, 87, 89, 93, 94, 96, 97], "underneath": 79, "hood": 79, "alert": 79, "introduct": 79, "mayb": [79, 80, 83], "examin": [79, 80, 82, 91, 96], "your_feature_matrix": [79, 80], "toi": [79, 80, 84, 86, 87, 89], "train_test_split": [79, 80, 92, 96, 97], "inf": [79, 80], "mid": [79, 80], "bins_map": [79, 80], "create_data": [79, 80], "y_bin": [79, 80], "y_i": [79, 80], "y_bin_idx": [79, 80], "y_train": [79, 80, 87, 94], "y_test": [79, 80, 87, 94], "y_train_idx": [79, 80], "y_test_idx": [79, 80], "test_siz": [79, 80, 96, 97], "slide": [79, 80, 84], "decis": [79, 80, 96], "frame": [79, 80], "x_out": [79, 80], "tini": [79, 80], "concaten": [79, 80, 85, 93], "y_out": [79, 80], "y_out_bin": [79, 80], "y_out_bin_idx": [79, 80], "exact_duplicate_idx": [79, 80], "x_duplic": [79, 80], "y_duplic": [79, 80], "y_duplicate_idx": [79, 80], "noisy_labels_idx": [79, 80, 90], "scatter": [79, 80, 87, 90, 94], "black": [79, 80, 84, 94], "cyan": [79, 80], "pyplot": [79, 80, 86, 87, 90, 92, 94], "plt": [79, 80, 86, 87, 90, 92, 94], "plot_data": [79, 80, 87, 90, 94], "fig": [79, 80, 84, 86, 92, 94], "ax": [79, 80, 86, 92, 94], "subplot": [79, 80, 86, 92], "set_titl": [79, 80, 86, 92], "set_xlabel": [79, 80], "x_1": [79, 80], "fontsiz": [79, 80, 86, 87, 90], "set_ylabel": [79, 80], "x_2": [79, 80], "set_xlim": [79, 80], "set_ylim": [79, 80], "linestyl": [79, 80], "circl": [79, 80, 87, 90], "misclassifi": [79, 80], "zip": [79, 80, 86, 91, 98], "label_err": [79, 80], "180": [79, 80, 91], "marker": [79, 80], "facecolor": [79, 80], "edgecolor": [79, 80], "linewidth": [79, 80, 92], "dup": [79, 80], "first_legend": [79, 80], "align": [79, 80], "title_fontproperti": [79, 80], "semibold": [79, 80], "second_legend": [79, 80], "45": [79, 80, 84, 87, 91], "gca": [79, 80], "add_artist": [79, 80], "tight_layout": [79, 80], "ideal": [79, 80], "logist": [79, 80, 83, 89, 92, 97], "remaind": 79, "modal": [79, 80, 85, 89], "132": [79, 80, 87, 91], "9318": 79, "77": [79, 80, 82, 91, 96], "006940": 79, "007830": 79, "40": [79, 80, 83, 84, 98], "014828": 79, "107": [79, 80, 87, 90], "021241": 79, "120": [79, 80, 96], "026407": 79, "notic": [79, 87, 89, 91], "3558": [79, 80], "126": [79, 80, 87, 91], "006636": [79, 80], "130": [79, 80], "012571": [79, 80], "129": [79, 80, 98], "127": [79, 80], "014909": [79, 80], "128": [79, 80, 86], "017443": [79, 80], "6160": [79, 80], "is_near_duplicate_issu": [79, 80, 82, 83, 85, 86, 87], "131": [79, 80, 95], "000000e": [79, 80], "00": [79, 80, 82, 84, 92, 96], "000002": [79, 80], "463180e": [79, 80], "07": [79, 80, 82, 86, 87, 91, 92, 94], "51": [79, 80, 82, 84, 87, 91, 92], "161148": [79, 80], "859087e": [79, 80], "30": [79, 80, 84, 85, 86, 90, 92, 95, 98], "3453": 79, "029542": 79, "031182": 79, "057961": 79, "058244": 79, "home": [79, 80, 83, 84, 97], "runner": [79, 80, 83, 97], "329": [79, 86, 91], "359": 79, "338": 79, "34": [79, 84, 87, 89, 91, 98], "54": [79, 84, 87, 91], "039122": 79, "53": [79, 80, 82, 84, 90, 91, 92, 96], "044598": 79, "105": [79, 91], "105196": 79, "133654": 79, "43": [79, 84, 87, 91], "168033": 79, "125": [79, 98], "101107": 79, "37": [79, 84, 98], "183382": 79, "109": [79, 84, 91], "209259": 79, "211042": 79, "221316": 79, "average_ood_scor": 79, "34530442089193386": 79, "52": [79, 84, 91, 98], "169820": 79, "087324e": 79, "89": [79, 82, 91, 92, 94, 97], "92": [79, 87, 91, 92, 96, 98], "259024": 79, "583757e": 79, "91": [79, 91], "346458": 79, "341292e": 79, "specfi": 79, "new_lab": 79, "scoring_funct": 79, "div": 79, "rem": 79, "inv_scal": 79, "49": [79, 84, 87, 91, 98], "superstitionissuemanag": 79, "unlucki": 79, "superstit": 79, "to_seri": 79, "issues_mask": 79, "summary_scor": 79, "9242": 79, "is_superstition_issu": 79, "superstition_scor": 79, "26": [79, 84, 86, 87, 89, 91], "047581": 79, "090635": 79, "129591": 79, "65": [79, 91, 96, 98], "164840": 79, "demo": [80, 82, 90, 96], "lurk": [80, 86, 87], "_split": 80, "737": 80, "thoroughli": 80, "preprocess": [80, 82, 92, 94, 96, 97], "904": 80, "review": [80, 82, 83, 84, 85, 87, 91, 94, 95, 96, 97, 98], "8561": 80, "001908": 80, "58": [80, 82, 84, 87, 91, 92, 96, 98], "003564": 80, "007331": 80, "008963": 80, "009664": 80, "0227": 80, "is_class_imbalance_issu": 80, "022727": 80, "86": [80, 82, 86, 87, 91, 92, 94, 96], "87": [80, 86, 91, 94, 97], "auto": [80, 84, 85, 94, 96, 97], "conceptu": 80, "856061": 80, "355772": 80, "616034": 80, "821750": 80, "901562": 80, "betweeen": 80, "is_null_issu": 80, "is_non_iid_issu": [80, 82, 83, 87], "is_underperforming_group_issu": 80, "859131": 80, "417707": 80, "664083": 80, "970324": 80, "816953": 80, "375317": 80, "641516": 80, "890575": 80, "531021": 80, "460593": 80, "601188": 80, "826147": 80, "752808": 80, "321635": 80, "562539": 80, "948362": 80, "090243": 80, "472909": 80, "746763": 80, "878267": 80, "examples_w_issu": [80, 85], "013445": 80, "025184": 80, "026376": 80, "inde": [80, 83], "miscellan": [80, 98], "428571": 80, "111111": 80, "571429": 80, "407407": 80, "592593": 80, "337838": 80, "092593": 80, "662162": 80, "333333": [80, 84], "952381": 80, "666667": 80, "portion": 80, "huge": [80, 87], "worri": [80, 83], "critic": 80, "highli": [80, 86], "sql": [82, 96], "databas": [82, 96], "excel": [82, 96], "parquet": [82, 96], "student": [82, 94, 96, 98], "grade": [82, 94, 96], "900": [82, 94, 96], "exam": [82, 94, 96], "letter": [82, 96, 98], "hundr": [82, 96], "histgradientboostingclassifi": 82, "standardscal": [82, 92, 96], "grades_data": [82, 96], "read_csv": [82, 83, 94, 96, 97], "stud_id": [82, 96], "exam_1": [82, 94, 96], "exam_2": [82, 94, 96], "exam_3": [82, 94, 96], "letter_grad": [82, 96], "f48f73": [82, 96], "0bd4e7": [82, 96], "81": [82, 83, 91, 92, 94, 96, 98], "great": [82, 84, 96], "particip": [82, 96], "cb9d7a": [82, 96], "61": [82, 87, 91, 92, 94, 96], "94": [82, 84, 87, 91, 92, 94, 96], "78": [82, 84, 87, 91, 92, 94, 96], "9acca4": [82, 96], "48": [82, 84, 87, 91, 92, 96], "x_raw": [82, 96], "cat_featur": 82, "x_encod": [82, 96], "get_dummi": [82, 94, 96], "drop_first": [82, 96], "numeric_featur": [82, 96], "scaler": [82, 92, 96], "x_process": [82, 96], "fit_transform": [82, 96], "bring": [82, 83, 86, 89, 94, 96, 97], "byod": [82, 83, 86, 89, 94, 96, 97], "boost": [82, 85, 89, 94], "xgboost": [82, 85, 94], "think": [82, 83, 85, 90, 95, 98], "carefulli": [82, 83, 86, 96], "nonzero": 82, "suspici": [82, 96], "tabl": [82, 84, 89, 96], "358": 82, "294": [82, 91], "46": [82, 84, 87, 91], "941": 82, "7109": 82, "000005": [82, 83, 94], "886": 82, "000059": 82, "709": 82, "000104": 82, "723": 82, "000169": 82, "689": 82, "000181": 82, "3590": 82, "051882e": 82, "683133e": 82, "536582e": 82, "406589e": 82, "324246e": 82, "6165": 82, "582": 82, "185": [82, 84, 91], "187": [82, 84], "27": [82, 84, 87, 91, 98], "898": 82, "637": [82, 96], "0014": [82, 84], "595": 82, "702427": 82, "147": [82, 87, 91], "711186": 82, "157": [82, 87], "721394": 82, "771": 82, "731979": 82, "740335": 82, "0014153602099278074": 82, "issue_result": 82, "000842": 82, "555944": 82, "004374": 82, "sorted_issu": 82, "73": [82, 84, 90, 91, 94], "deserv": 82, "outlier_result": 82, "sorted_outli": 82, "56": [82, 84, 92, 94], "96": [82, 84, 87, 90, 91, 94], "lt": [82, 83, 84, 89, 92], "style": [82, 95], "font": 82, "18px": 82, "ff00ff": 82, "bac": 82, "unintend": [82, 83], "mistak": [82, 83, 86, 96, 97], "duplicate_result": 82, "690": 82, "246": [82, 91], "perhap": [82, 87, 89], "twice": 82, "67": [82, 84, 91, 92, 94], "wari": [82, 83, 85], "super": [82, 83, 86], "intent": [83, 97], "servic": [83, 85, 97], "onlin": [83, 97], "bank": [83, 84, 97], "banking77": [83, 97], "oo": [83, 97], "000": [83, 84, 86, 97, 98], "categori": [83, 86, 97], "scope": [83, 97], "dive": 83, "your_featur": 83, "sentence_transform": [83, 97], "sentencetransform": [83, 97], "payment": [83, 97], "cancel_transf": [83, 97], "transfer": [83, 97], "fund": [83, 97], "cancel": [83, 97], "transact": [83, 97], "my": [83, 97], "revert": [83, 97], "morn": [83, 97], "realis": [83, 97], "yesterdai": [83, 97], "rent": [83, 97], "realli": [83, 89, 95, 97], "tomorrow": [83, 97], "raw_text": [83, 97], "card_payment_fee_charg": [83, 97], "supported_cards_and_curr": [83, 97], "lost_or_stolen_phon": [83, 97], "change_pin": [83, 97], "visa_or_mastercard": [83, 97], "getting_spare_card": [83, 97], "apple_pay_or_google_pai": [83, 97], "card_about_to_expir": [83, 97], "beneficiary_not_allow": [83, 97], "utter": [83, 97], "suit": [83, 84, 85, 97], "electra": [83, 97], "discrimin": [83, 97], "googl": [83, 97], "text_embed": 83, "No": [83, 85, 97], "google_electra": [83, 97], "pool": [83, 85, 92, 97], "_util": [83, 97], "831": [83, 97], "typedstorag": [83, 97], "untypedstorag": [83, 97], "untyped_storag": [83, 97], "fget": [83, 97], "__get__": [83, 97], "owner": [83, 97], "400": [83, 97], "data_dict": [83, 87, 89], "85": [83, 91], "38": [83, 84, 91], "9710": 83, "981": 83, "974": 83, "000146": 83, "982": [83, 84], "000224": 83, "971": 83, "000507": 83, "980": [83, 84], "000960": 83, "3584": 83, "994": 83, "009642": 83, "999": 83, "013067": 83, "013841": 83, "433": 83, "014722": 83, "989": 83, "018224": 83, "6070": 83, "160": [83, 94], "095724": 83, "148": 83, "006237": 83, "546": 83, "099341": 83, "514": 83, "006485": 83, "481": 83, "123418": 83, "008165": 83, "0000": [83, 84, 87], "313": [83, 91], "564102": 83, "572258": 83, "28": [83, 84, 86, 87, 89, 92, 98], "574915": 83, "31": [83, 84, 87, 89, 91, 98], "575507": 83, "575874": 83, "792090": 83, "257611": 83, "698710": 83, "182121": 83, "771619": 83, "to_numpi": [83, 85, 94, 97], "data_with_suggested_label": 83, "suggested_label": 83, "charg": [83, 97], "cash": [83, 97], "holidai": [83, 97], "sent": [83, 97, 98], "card": [83, 84, 97], "mine": [83, 97], "expir": [83, 97], "me": [83, 97], "withdraw": 83, "monei": 83, "whoever": [83, 97], "outlier_issu": [83, 86], "lowest_quality_outli": 83, "OR": 83, "636c65616e6c616220697320617765736f6d6521": 83, "phone": [83, 84], "gone": 83, "gt": [83, 89, 98], "samp": 83, "br": 83, "press": [83, 98], "nonsens": 83, "sens": 83, "detriment": 83, "duplicate_issu": 83, "fee": 83, "pai": 83, "go": [83, 84, 87], "strongli": 83, "p_valu": 83, "benign": 83, "shortlist": [83, 94, 97], "curat": [83, 88], "mnist_test_set": 84, "imagenet_val_set": 84, "tench": 84, "goldfish": 84, "white": [84, 98], "shark": 84, "tiger": 84, "hammerhead": 84, "electr": 84, "rai": 84, "stingrai": 84, "cock": 84, "hen": 84, "ostrich": 84, "brambl": 84, "goldfinch": 84, "hous": 84, "finch": 84, "junco": 84, "indigo": 84, "bunt": 84, "american": [84, 98], "robin": 84, "bulbul": 84, "jai": 84, "magpi": 84, "chickade": 84, "dipper": 84, "kite": 84, "bald": 84, "eagl": 84, "vultur": 84, "grei": 84, "owl": 84, "salamand": 84, "smooth": 84, "newt": 84, "spot": [84, 91], "axolotl": 84, "bullfrog": 84, "tree": 84, "frog": [84, 92], "tail": 84, "loggerhead": 84, "sea": 84, "turtl": 84, "leatherback": 84, "mud": 84, "terrapin": 84, "band": 84, "gecko": 84, "green": [84, 98], "iguana": 84, "carolina": 84, "anol": 84, "desert": 84, "grassland": 84, "whiptail": 84, "lizard": 84, "agama": 84, "frill": 84, "neck": 84, "allig": 84, "gila": 84, "monster": 84, "european": 84, "chameleon": 84, "komodo": 84, "dragon": 84, "nile": 84, "crocodil": 84, "triceratop": 84, "worm": 84, "snake": 84, "ring": 84, "eastern": 84, "hog": 84, "nose": 84, "kingsnak": 84, "garter": 84, "water": 84, "vine": 84, "night": 84, "boa": 84, "constrictor": 84, "african": 84, "rock": 84, "indian": 84, "cobra": 84, "mamba": 84, "saharan": 84, "horn": 84, "viper": 84, "diamondback": 84, "rattlesnak": 84, "sidewind": 84, "trilobit": 84, "harvestman": 84, "scorpion": 84, "yellow": 84, "garden": 84, "spider": 84, "barn": 84, "southern": 84, "widow": 84, "tarantula": 84, "wolf": 84, "tick": 84, "centiped": 84, "grous": 84, "ptarmigan": 84, "ruf": 84, "prairi": 84, "peacock": 84, "quail": 84, "partridg": 84, "parrot": 84, "macaw": 84, "sulphur": 84, "crest": 84, "cockatoo": 84, "lorikeet": 84, "coucal": 84, "bee": 84, "eater": 84, "hornbil": 84, "hummingbird": 84, "jacamar": 84, "toucan": 84, "duck": [84, 97], "breast": 84, "mergans": 84, "goos": 84, "swan": 84, "tusker": 84, "echidna": 84, "platypu": 84, "wallabi": 84, "koala": 84, "wombat": 84, "jellyfish": 84, "anemon": 84, "brain": 84, "coral": 84, "flatworm": 84, "nematod": 84, "conch": 84, "snail": 84, "slug": 84, "chiton": 84, "chamber": 84, "nautilu": 84, "dung": 84, "crab": 84, "fiddler": 84, "king": 84, "lobster": 84, "spini": 84, "crayfish": 84, "hermit": 84, "isopod": 84, "stork": 84, "spoonbil": 84, "flamingo": 84, "heron": 84, "egret": 84, "bittern": 84, "crane": 84, "bird": [84, 92], "limpkin": 84, "gallinul": 84, "coot": 84, "bustard": 84, "ruddi": 84, "turnston": 84, "dunlin": 84, "redshank": 84, "dowitch": 84, "oystercatch": 84, "pelican": 84, "penguin": 84, "albatross": 84, "whale": 84, "killer": 84, "dugong": 84, "lion": 84, "chihuahua": 84, "japanes": 84, "chin": 84, "maltes": 84, "pekinges": 84, "shih": 84, "tzu": 84, "charl": 84, "spaniel": 84, "papillon": 84, "terrier": 84, "rhodesian": 84, "ridgeback": 84, "afghan": [84, 98], "hound": 84, "basset": 84, "beagl": 84, "bloodhound": 84, "bluetick": 84, "coonhound": 84, "tan": 84, "walker": 84, "foxhound": 84, "redbon": 84, "borzoi": 84, "irish": 84, "wolfhound": 84, "italian": 84, "greyhound": 84, "whippet": 84, "ibizan": 84, "norwegian": 84, "elkhound": 84, "otterhound": 84, "saluki": 84, "scottish": 84, "deerhound": 84, "weimaran": 84, "staffordshir": 84, "bull": 84, "bedlington": 84, "border": 84, "kerri": 84, "norfolk": 84, "norwich": 84, "yorkshir": 84, "wire": 84, "fox": 84, "lakeland": 84, "sealyham": 84, "airedal": 84, "cairn": 84, "australian": 84, "dandi": 84, "dinmont": 84, "boston": 84, "miniatur": 84, "schnauzer": 84, "giant": 84, "tibetan": 84, "silki": 84, "coat": [84, 86], "wheaten": 84, "west": 84, "highland": 84, "lhasa": 84, "apso": 84, "flat": 84, "retriev": 84, "curli": 84, "golden": 84, "labrador": 84, "chesapeak": 84, "bai": 84, "german": [84, 98], "shorthair": 84, "pointer": 84, "vizsla": 84, "setter": 84, "gordon": 84, "brittani": 84, "clumber": 84, "springer": 84, "welsh": 84, "cocker": 84, "sussex": 84, "kuvasz": 84, "schipperk": 84, "groenendael": 84, "malinoi": 84, "briard": 84, "kelpi": 84, "komondor": 84, "sheepdog": 84, "shetland": 84, "colli": 84, "bouvier": 84, "de": 84, "flandr": 84, "rottweil": 84, "shepherd": 84, "dobermann": 84, "pinscher": 84, "swiss": [84, 98], "mountain": 84, "bernes": 84, "appenzel": 84, "sennenhund": 84, "entlebuch": 84, "boxer": 84, "bullmastiff": 84, "mastiff": 84, "french": 84, "bulldog": 84, "dane": 84, "st": 84, "bernard": 84, "huski": 84, "alaskan": 84, "malamut": 84, "siberian": 84, "dalmatian": 84, "affenpinsch": 84, "basenji": 84, "pug": 84, "leonberg": 84, "newfoundland": 84, "pyrenean": 84, "samoi": 84, "pomeranian": 84, "chow": 84, "keeshond": 84, "griffon": 84, "bruxelloi": 84, "pembrok": 84, "corgi": 84, "cardigan": 84, "poodl": 84, "mexican": 84, "hairless": 84, "tundra": 84, "coyot": 84, "dingo": 84, "dhole": 84, "wild": 84, "hyena": 84, "kit": 84, "arctic": 84, "tabbi": 84, "persian": 84, "siames": 84, "egyptian": 84, "mau": 84, "cougar": 84, "lynx": 84, "leopard": 84, "snow": 84, "jaguar": 84, "cheetah": 84, "brown": [84, 95], "bear": 84, "polar": 84, "sloth": 84, "mongoos": 84, "meerkat": 84, "beetl": 84, "ladybug": 84, "longhorn": 84, "leaf": 84, "rhinocero": 84, "weevil": 84, "fly": 84, "ant": 84, "grasshopp": 84, "cricket": 84, "stick": 84, "insect": 84, "cockroach": 84, "manti": 84, "cicada": 84, "leafhopp": 84, "lacew": 84, "dragonfli": 84, "damselfli": 84, "admir": 84, "ringlet": 84, "monarch": 84, "butterfli": 84, "gossam": 84, "wing": 84, "starfish": 84, "urchin": 84, "cucumb": 84, "cottontail": 84, "rabbit": 84, "hare": 84, "angora": 84, "hamster": 84, "porcupin": 84, "squirrel": 84, "marmot": 84, "beaver": 84, "guinea": 84, "pig": 84, "sorrel": 84, "zebra": 84, "boar": 84, "warthog": 84, "hippopotamu": 84, "ox": 84, "buffalo": 84, "bison": 84, "bighorn": 84, "sheep": 84, "alpin": 84, "ibex": 84, "hartebeest": 84, "impala": 84, "gazel": 84, "dromedari": 84, "llama": 84, "weasel": 84, "mink": 84, "polecat": 84, "foot": 84, "ferret": 84, "otter": 84, "skunk": 84, "badger": 84, "armadillo": 84, "toed": 84, "orangutan": 84, "gorilla": 84, "chimpanze": 84, "gibbon": 84, "siamang": 84, "guenon": 84, "pata": 84, "monkei": 84, "baboon": 84, "macaqu": 84, "langur": 84, "colobu": 84, "probosci": 84, "marmoset": 84, "capuchin": 84, "howler": 84, "titi": 84, "geoffroi": 84, "lemur": 84, "indri": 84, "asian": 84, "eleph": 84, "bush": 84, "snoek": 84, "eel": 84, "coho": 84, "salmon": 84, "beauti": 84, "clownfish": 84, "sturgeon": 84, "garfish": 84, "lionfish": 84, "pufferfish": 84, "abacu": 84, "abaya": 84, "academ": 84, "gown": 84, "accordion": 84, "acoust": 84, "guitar": 84, "aircraft": 84, "carrier": 84, "airlin": 84, "airship": 84, "altar": 84, "ambul": 84, "amphibi": 84, "clock": [84, 98], "apiari": 84, "apron": 84, "wast": 84, "assault": 84, "rifl": 84, "backpack": 84, "bakeri": 84, "balanc": 84, "beam": 84, "balloon": 84, "ballpoint": 84, "pen": 84, "aid": 84, "banjo": 84, "balust": 84, "barbel": 84, "barber": 84, "chair": [84, 91], "barbershop": 84, "baromet": 84, "barrel": 84, "wheelbarrow": 84, "basebal": 84, "basketbal": 84, "bassinet": 84, "bassoon": 84, "swim": 84, "cap": 84, "bath": 84, "towel": 84, "bathtub": 84, "station": 84, "wagon": 84, "lighthous": 84, "beaker": 84, "militari": 84, "beer": 84, "bottl": 84, "glass": 84, "bell": 84, "cot": 84, "bib": 84, "bicycl": [84, 95], "bikini": 84, "binder": 84, "binocular": 84, "birdhous": 84, "boathous": 84, "bobsleigh": 84, "bolo": 84, "tie": 84, "poke": 84, "bonnet": 84, "bookcas": 84, "bookstor": 84, "bow": 84, "brass": 84, "bra": 84, "breakwat": 84, "breastplat": 84, "broom": 84, "bucket": 84, "buckl": 84, "bulletproof": 84, "vest": 84, "butcher": 84, "shop": 84, "taxicab": 84, "cauldron": 84, "candl": 84, "cannon": 84, "cano": 84, "mirror": [84, 91], "carousel": 84, "tool": [84, 87, 89], "carton": 84, "wheel": 84, "teller": 84, "cassett": 84, "player": 84, "castl": 84, "catamaran": 84, "cd": 84, "cello": 84, "mobil": [84, 98], "chain": 84, "fenc": [84, 95], "mail": 84, "chainsaw": 84, "chest": 84, "chiffoni": 84, "chime": 84, "china": 84, "cabinet": 84, "christma": 84, "stock": 84, "church": 84, "movi": 84, "theater": 84, "cleaver": 84, "cliff": 84, "dwell": 84, "cloak": 84, "clog": 84, "cocktail": 84, "shaker": 84, "coffe": 84, "mug": 84, "coffeemak": 84, "coil": 84, "lock": 84, "keyboard": 84, "confectioneri": 84, "ship": [84, 92], "corkscrew": 84, "cornet": 84, "cowboi": 84, "boot": 84, "hat": 84, "cradl": 84, "crash": 84, "helmet": 84, "crate": 84, "infant": 84, "bed": 84, "crock": 84, "pot": 84, "croquet": 84, "crutch": 84, "cuirass": 84, "dam": 84, "desk": 84, "desktop": 84, "rotari": 84, "dial": 84, "telephon": 84, "diaper": 84, "watch": 84, "dine": 84, "dishcloth": 84, "dishwash": 84, "disc": 84, "brake": 84, "dock": 84, "sled": 84, "dome": 84, "doormat": 84, "drill": 84, "rig": 84, "drum": 84, "drumstick": 84, "dumbbel": 84, "dutch": 84, "oven": 84, "fan": 84, "locomot": 84, "entertain": 84, "center": 84, "envelop": 84, "espresso": 84, "powder": 84, "feather": 84, "fireboat": 84, "engin": [84, 95], "screen": 84, "sheet": 84, "flagpol": 84, "flute": 84, "footbal": 84, "forklift": 84, "fountain": 84, "poster": 84, "freight": 84, "fry": 84, "pan": 84, "fur": 84, "garbag": 84, "ga": 84, "pump": 84, "goblet": 84, "kart": 84, "golf": 84, "cart": 84, "gondola": 84, "gong": 84, "grand": 84, "piano": 84, "greenhous": 84, "grill": 84, "groceri": 84, "guillotin": 84, "barrett": 84, "hair": 84, "sprai": 84, "hammer": 84, "dryer": 84, "hand": [84, 87], "handkerchief": 84, "drive": 84, "harmonica": 84, "harp": 84, "harvest": 84, "hatchet": 84, "holster": 84, "honeycomb": 84, "hoop": 84, "skirt": 84, "horizont": 84, "bar": 84, "hors": [84, 92, 97], "drawn": 84, "hourglass": 84, "ipod": 84, "cloth": 84, "iron": 84, "jack": 84, "lantern": 84, "jean": 84, "jeep": 84, "shirt": [84, 86], "jigsaw": 84, "puzzl": 84, "pull": 84, "rickshaw": 84, "joystick": 84, "kimono": 84, "knee": 84, "pad": 84, "knot": 84, "ladl": 84, "lampshad": 84, "laptop": 84, "lawn": 84, "mower": 84, "knife": 84, "lifeboat": 84, "lighter": 84, "limousin": 84, "ocean": 84, "liner": 84, "lipstick": 84, "slip": 84, "shoe": 84, "lotion": 84, "speaker": 84, "loup": 84, "sawmil": 84, "magnet": 84, "compass": 84, "bag": [84, 86, 92, 93], "mailbox": 84, "tight": 84, "tank": 84, "manhol": 84, "maraca": 84, "marimba": 84, "maypol": 84, "maze": 84, "cup": [84, 91], "medicin": 84, "megalith": 84, "microphon": 84, "microwav": 84, "milk": 84, "minibu": 84, "miniskirt": 84, "minivan": 84, "missil": 84, "mitten": 84, "mix": 84, "bowl": 84, "modem": 84, "monasteri": 84, "monitor": 84, "mope": 84, "mortar": 84, "mosqu": 84, "mosquito": 84, "scooter": 84, "bike": 84, "tent": 84, "mous": [84, 85], "mousetrap": 84, "van": 84, "muzzl": 84, "nail": 84, "brace": 84, "necklac": 84, "nippl": 84, "obelisk": 84, "obo": 84, "ocarina": 84, "odomet": 84, "oil": 84, "oscilloscop": 84, "overskirt": 84, "bullock": 84, "oxygen": 84, "packet": 84, "paddl": 84, "padlock": 84, "paintbrush": 84, "pajama": 84, "palac": [84, 98], "parachut": 84, "park": 84, "bench": 84, "meter": 84, "passeng": 84, "patio": 84, "payphon": 84, "pedest": 84, "pencil": 84, "perfum": 84, "petri": 84, "dish": 84, "photocopi": 84, "plectrum": 84, "pickelhaub": 84, "picket": 84, "pickup": 84, "pier": 84, "piggi": 84, "pill": 84, "pillow": 84, "ping": 84, "pong": 84, "pinwheel": 84, "pirat": 84, "pitcher": 84, "plane": 84, "planetarium": 84, "plastic": 84, "plate": 84, "rack": 84, "plow": 84, "plunger": 84, "polaroid": 84, "camera": 84, "pole": [84, 95], "polic": 84, "poncho": 84, "billiard": 84, "soda": 84, "potter": 84, "prayer": 84, "rug": 84, "printer": 84, "prison": 84, "projectil": 84, "projector": 84, "hockei": 84, "puck": 84, "punch": 84, "purs": 84, "quill": 84, "quilt": 84, "race": 84, "racket": 84, "radiat": 84, "radio": 84, "telescop": 84, "rain": 84, "recreat": 84, "reel": 84, "reflex": 84, "refriger": 84, "remot": 84, "restaur": 84, "revolv": 84, "rotisseri": 84, "eras": 84, "rugbi": 84, "ruler": 84, "safe": 84, "safeti": 84, "salt": 84, "sandal": [84, 86], "sarong": 84, "saxophon": 84, "scabbard": 84, "school": 84, "bu": [84, 95], "schooner": 84, "scoreboard": 84, "crt": 84, "screw": 84, "screwdriv": 84, "seat": 84, "belt": 84, "sew": 84, "shield": 84, "shoji": 84, "basket": 84, "shovel": 84, "shower": 84, "curtain": 84, "ski": 84, "sleep": 84, "door": 84, "slot": 84, "snorkel": 84, "snowmobil": 84, "snowplow": 84, "soap": 84, "dispens": 84, "soccer": [84, 98], "sock": 84, "solar": 84, "thermal": 84, "collector": 84, "sombrero": 84, "soup": 84, "heater": 84, "shuttl": 84, "spatula": 84, "motorboat": 84, "web": 84, "spindl": 84, "sport": [84, 98], "spotlight": 84, "stage": 84, "steam": 84, "arch": 84, "bridg": 84, "steel": 84, "stethoscop": 84, "scarf": 84, "stone": 84, "wall": [84, 95], "stopwatch": 84, "stove": 84, "strainer": 84, "tram": 84, "stretcher": 84, "couch": 84, "stupa": 84, "submarin": 84, "sundial": 84, "sunglass": 84, "sunscreen": 84, "suspens": 84, "mop": 84, "sweatshirt": 84, "swimsuit": 84, "swing": 84, "switch": 84, "syring": 84, "lamp": 84, "tape": 84, "teapot": 84, "teddi": 84, "televis": [84, 98], "tenni": 84, "thatch": 84, "roof": 84, "front": 84, "thimbl": 84, "thresh": 84, "throne": 84, "tile": 84, "toaster": 84, "tobacco": 84, "toilet": 84, "totem": 84, "tow": 84, "tractor": 84, "semi": 84, "trailer": 84, "trai": 84, "trench": 84, "tricycl": 84, "trimaran": 84, "tripod": 84, "triumphal": 84, "trolleybu": 84, "trombon": 84, "tub": 84, "turnstil": 84, "typewrit": 84, "umbrella": 84, "unicycl": 84, "upright": 84, "vacuum": 84, "cleaner": 84, "vase": 84, "vault": 84, "velvet": 84, "vend": 84, "vestment": 84, "viaduct": 84, "violin": 84, "volleybal": 84, "waffl": 84, "wallet": 84, "wardrob": 84, "sink": 84, "wash": 84, "jug": 84, "tower": 84, "whiskei": 84, "whistl": 84, "wig": 84, "shade": [84, 95], "windsor": 84, "wine": 84, "wok": 84, "wooden": 84, "spoon": 84, "wool": 84, "rail": 84, "shipwreck": 84, "yawl": 84, "yurt": 84, "websit": 84, "comic": 84, "book": 84, "crossword": 84, "traffic": [84, 91, 95], "sign": [84, 95, 98], "dust": 84, "jacket": [84, 91], "menu": 84, "guacamol": 84, "consomm": 84, "trifl": 84, "ic": 84, "cream": 84, "pop": 84, "baguett": 84, "bagel": 84, "pretzel": 84, "cheeseburg": 84, "mash": 84, "potato": 84, "cabbag": 84, "broccoli": 84, "cauliflow": 84, "zucchini": 84, "spaghetti": 84, "squash": 84, "acorn": 84, "butternut": 84, "artichok": 84, "pepper": 84, "cardoon": 84, "mushroom": 84, "granni": 84, "smith": 84, "strawberri": 84, "orang": 84, "lemon": 84, "pineappl": 84, "banana": 84, "jackfruit": 84, "custard": 84, "appl": 84, "pomegran": 84, "hai": 84, "carbonara": 84, "chocol": 84, "syrup": 84, "dough": 84, "meatloaf": 84, "pizza": 84, "pie": 84, "burrito": 84, "eggnog": 84, "alp": 84, "bubbl": 84, "reef": 84, "geyser": 84, "lakeshor": 84, "promontori": 84, "shoal": 84, "seashor": 84, "vallei": 84, "volcano": 84, "bridegroom": 84, "scuba": 84, "diver": 84, "rapese": 84, "daisi": 84, "ladi": 84, "slipper": 84, "corn": 84, "rose": 84, "hip": 84, "chestnut": 84, "fungu": 84, "agar": 84, "gyromitra": 84, "stinkhorn": 84, "earth": 84, "star": 84, "wood": 84, "bolet": 84, "ear": 84, "cifar10_test_set": 84, "airplan": [84, 92], "automobil": [84, 92], "deer": [84, 92], "cifar100_test_set": 84, "aquarium_fish": 84, "babi": 84, "boi": 84, "camel": 84, "caterpillar": 84, "cattl": [84, 98], "cloud": 84, "dinosaur": 84, "dolphin": 84, "flatfish": 84, "forest": 84, "girl": 84, "kangaroo": 84, "lawn_mow": 84, "man": 84, "maple_tre": 84, "motorcycl": [84, 95], "oak_tre": 84, "orchid": 84, "palm_tre": 84, "pear": 84, "pickup_truck": 84, "pine_tre": 84, "plain": 84, "poppi": 84, "possum": 84, "raccoon": 84, "road": [84, 95], "rocket": 84, "seal": 84, "shrew": 84, "skyscrap": 84, "streetcar": 84, "sunflow": 84, "sweet_pepp": 84, "trout": 84, "tulip": 84, "willow_tre": 84, "woman": [84, 91], "caltech256": 84, "ak47": 84, "bat": 84, "glove": 84, "birdbath": 84, "blimp": 84, "bonsai": 84, "boom": 84, "breadmak": 84, "buddha": 84, "bulldoz": 84, "cactu": 84, "cake": 84, "tire": 84, "cartman": 84, "cereal": 84, "chandeli": 84, "chess": 84, "board": 84, "chimp": 84, "chopstick": 84, "coffin": 84, "coin": 84, "comet": 84, "cormor": 84, "globe": 84, "diamond": 84, "dice": 84, "doorknob": 84, "drink": 84, "straw": 84, "dumb": 84, "eiffel": 84, "elk": 84, "ewer": 84, "eyeglass": 84, "fern": 84, "fighter": 84, "jet": [84, 94], "extinguish": 84, "hydrant": 84, "firework": 84, "flashlight": 84, "floppi": 84, "fri": 84, "frisbe": 84, "galaxi": 84, "giraff": 84, "goat": 84, "gate": 84, "grape": 84, "pick": [84, 85], "hamburg": 84, "hammock": 84, "harpsichord": 84, "hawksbil": 84, "helicopt": 84, "hibiscu": 84, "homer": 84, "simpson": 84, "horsesho": 84, "air": 84, "skeleton": 84, "ibi": 84, "cone": 84, "iri": 84, "jesu": 84, "christ": 84, "joi": 84, "kayak": 84, "ketch": 84, "ladder": 84, "lath": 84, "licens": 84, "lightbulb": 84, "lightn": 84, "mandolin": 84, "mar": 84, "mattress": 84, "megaphon": 84, "menorah": 84, "microscop": 84, "minaret": 84, "minotaur": 84, "motorbik": 84, "mussel": 84, "neckti": 84, "octopu": 84, "palm": 84, "pilot": 84, "paperclip": 84, "shredder": 84, "pci": 84, "peopl": [84, 91], "pez": 84, "picnic": 84, "pram": 84, "prai": 84, "pyramid": 84, "rainbow": 84, "roulett": 84, "saddl": 84, "saturn": 84, "segwai": 84, "propel": 84, "sextant": 84, "music": 84, "skateboard": 84, "smokestack": 84, "sneaker": 84, "boat": 84, "stain": 84, "steer": 84, "stirrup": 84, "superman": 84, "sushi": 84, "armi": [84, 98], "sword": 84, "tambourin": 84, "teepe": 84, "court": 84, "theodolit": 84, "tomato": 84, "tombston": 84, "tour": 84, "pisa": 84, "treadmil": 84, "fork": 84, "tweezer": 84, "unicorn": 84, "vcr": 84, "waterfal": 84, "watermelon": 84, "weld": 84, "windmil": 84, "xylophon": 84, "yarmulk": 84, "yo": 84, "toad": 84, "twenty_news_test_set": 84, "alt": 84, "atheism": 84, "comp": 84, "graphic": [84, 95], "misc": [84, 98], "sy": 84, "ibm": 84, "pc": 84, "hardwar": 84, "mac": 84, "forsal": 84, "rec": 84, "sci": 84, "crypt": 84, "electron": 84, "med": 84, "soc": 84, "religion": 84, "christian": [84, 98], "talk": [84, 98], "polit": 84, "gun": 84, "mideast": 84, "amazon": 84, "neutral": 84, "imdb_test_set": 84, "all_class": 84, "20news_test_set": 84, "_load_classes_predprobs_label": 84, "dataset_nam": 84, "labelerror": 84, "url_bas": 84, "5392f6c71473055060be3044becdde1cbc18284d": 84, "url_label": 84, "original_test_label": 84, "_original_label": 84, "url_prob": 84, "cross_validated_predicted_prob": 84, "_pyx": 84, "num_part": 84, "datatset": 84, "bytesio": 84, "allow_pickl": 84, "pred_probs_part": 84, "url": 84, "_of_": 84, "nload": 84, "imdb": 84, "ve": [84, 85, 87, 89, 91], "interpret": [84, 85, 87, 90, 94], "capit": 84, "29780": 84, "256": [84, 85, 91], "780": 84, "medic": [84, 98], "doctor": 84, "254": [84, 91], "359223": 84, "640777": 84, "184": [84, 87], "258427": 84, "341176": 84, "263158": 84, "658824": 84, "337349": 84, "246575": 84, "662651": 84, "248": 84, "330000": 84, "355769": 84, "670000": 84, "251": [84, 91], "167": [84, 87, 91], "252": 84, "112": 84, "253": [84, 91], "022989": 84, "255": [84, 86], "049505": 84, "190": [84, 87, 91], "66": 84, "002216": 84, "000974": 84, "59": [84, 91], "88": [84, 85, 86, 87, 90, 91, 94, 98], "000873": 84, "000739": 84, "79": [84, 91, 96], "32635": 84, "32636": 84, "47": [84, 91, 92, 98], "32637": 84, "32638": 84, "32639": 84, "32640": 84, "051": 84, "93": [84, 91, 94, 96], "002242": 84, "997758": 84, "002088": 84, "001045": 84, "997912": 84, "002053": 84, "997947": 84, "001980": 84, "000991": 84, "998020": 84, "001946": 84, "002915": 84, "998054": 84, "001938": 84, "002904": 84, "998062": 84, "001020": 84, "998980": 84, "001018": 84, "002035": 84, "998982": 84, "999009": 84, "0003": 84, "0002": 84, "36": [84, 92, 98], "41": [84, 91, 94], "44": [84, 90, 91, 92, 97, 98], "71": [84, 87, 91, 94], "071": 84, "067269": 84, "929": 84, "046": 84, "058243": 84, "954": 84, "035": 84, "032096": 84, "965": 84, "031": 84, "012232": 84, "969": 84, "022": 84, "025896": 84, "978": 84, "020": [84, 87], "013092": 84, "018": 84, "013065": 84, "016": 84, "030542": 84, "984": 84, "013": 84, "020833": 84, "987": 84, "012": 84, "010020": 84, "988": 84, "0073": 84, "0020": 84, "0016": 84, "0015": 84, "0013": 84, "0012": 84, "0010": 84, "0008": 84, "0007": 84, "0006": 84, "0005": 84, "0004": 84, "244": [84, 91, 98], "98": [84, 85, 94], "452381": 84, "459770": 84, "72": [84, 87, 90, 92, 94], "523364": 84, "460784": 84, "446602": 84, "57": [84, 87], "68": [84, 87, 91, 96], "103774": 84, "030612": 84, "97": [84, 85, 87, 91, 92, 94, 96, 98], "110092": 84, "049020": 84, "99": [84, 87, 96], "0034": 84, "0032": 84, "0026": 84, "0025": 84, "4945": 84, "4946": 84, "4947": 84, "4948": 84, "4949": 84, "4950": 84, "846": 84, "82": [84, 87, 91, 94], "7532": 84, "532": 84, "034483": 84, "009646": 84, "965517": 84, "030457": 84, "020513": 84, "969543": 84, "028061": 84, "035443": 84, "971939": 84, "025316": 84, "005168": 84, "974684": 84, "049751": 84, "979487": 84, "019920": 84, "042802": 84, "980080": 84, "017677": 84, "005115": 84, "982323": 84, "012987": 84, "005236": 84, "987013": 84, "012723": 84, "025126": 84, "987277": 84, "010989": 84, "008264": 84, "989011": 84, "010283": 84, "027778": 84, "989717": 84, "009677": 84, "990323": 84, "007614": 84, "010127": 84, "992386": 84, "005051": 84, "994949": 84, "005025": 84, "994975": 84, "005013": 84, "994987": 84, "001859": 84, "001328": 84, "000929": 84, "000664": 84, "186": [84, 87], "188": [84, 87, 90], "189": [84, 87], "snippet": 85, "nlp": [85, 98], "mind": [85, 87], "number_of_class": 85, "total_number_of_data_point": 85, "drop": [85, 89, 94, 97], "feed": 85, "alphabet": 85, "labels_proper_format": 85, "your_classifi": 85, "issues_datafram": 85, "class_predicted_for_flagged_exampl": 85, "class_predicted_for_all_exampl": 85, "grant": 85, "datataset": 85, "fair": [85, 87], "game": 85, "speedup": [85, 92], "flexibl": 85, "tempfil": 85, "mkdtemp": 85, "sped": 85, "anywai": 85, "pred_probs_merg": 85, "merge_rare_class": 85, "count_threshold": 85, "class_mapping_orig2new": 85, "heath_summari": 85, "num_examples_per_class": 85, "rare_class": 85, "num_classes_merg": 85, "other_class": 85, "labels_merg": 85, "new_c": 85, "merged_prob": 85, "hstack": [85, 86, 87, 89], "new_class": 85, "original_class": 85, "num_check": 85, "ones_array_ref": 85, "isclos": 85, "though": [85, 87, 98], "successfulli": 85, "meaning": [85, 92], "virtuou": [85, 89], "cycl": [85, 89], "jointli": 85, "junk": 85, "clutter": 85, "unknown": 85, "caltech": 85, "combined_boolean_mask": 85, "mask1": 85, "mask2": 85, "gradientboostingclassifi": [85, 87], "true_error": [85, 87, 90], "101": [85, 91], "102": [85, 90, 91], "104": [85, 87, 91], "model_to_find_error": 85, "model_to_return": 85, "cl0": 85, "randomizedsearchcv": 85, "expens": 85, "param_distribut": 85, "learning_r": [85, 87], "max_depth": [85, 87], "magnitud": 85, "coeffici": [85, 94], "optin": 85, "environ": [85, 87], "rerun": [85, 87], "cell": [85, 87], "On": [85, 87, 91], "unabl": [85, 87], "render": [85, 87], "nbviewer": [85, 87], "nbsp": [85, 87], "cleanlearninginot": [85, 87], "fittedcleanlearn": [85, 87], "linearregressionlinearregress": 85, "n_init": 85, "fit_predict": 85, "continuous_column": 85, "categorical_column": 85, "data_df": 85, "feature_a": 85, "feature_b": 85, "unexpectedli": 85, "emphas": 85, "especi": [85, 86, 94, 96, 97], "crucial": 85, "merge_duplicate_set": 85, "merge_kei": 85, "construct_group_kei": 85, "merged_set": 85, "consolidate_set": 85, "tolist": [85, 90], "issubset": 85, "frozenset": 85, "sets_list": 85, "mutabl": 85, "new_set": 85, "current_set": 85, "intersecting_set": 85, "lowest_score_strategi": 85, "sub_df": 85, "idxmin": 85, "filter_near_dupl": 85, "strategy_fn": 85, "strategy_kwarg": 85, "duplicate_row": 85, "group_kei": 85, "to_keep_indic": 85, "groupbi": 85, "explod": 85, "to_remov": 85, "isin": [85, 92], "kept": 85, "near_duplicate_issu": [85, 86], "ids_to_remove_seri": 85, "tmp": 85, "ipykernel_6142": 85, "1995098996": 85, "deprecationwarn": 85, "dataframegroupbi": 85, "include_group": 85, "silenc": 85, "assist": 85, "streamlin": 85, "ux": 85, "agpl": 85, "compani": 85, "commerci": 85, "alter": 85, "email": 85, "discuss": 85, "anywher": 85, "profession": 85, "expert": 85, "60": [86, 87, 94, 98], "excess": 86, "torchvis": [86, 92], "tensordataset": 86, "stratifiedkfold": [86, 90], "tqdm": 86, "autonotebook": 86, "fashion_mnist": 86, "num_row": 86, "60000": 86, "pil": 86, "transformed_dataset": 86, "with_format": 86, "unsqueez": 86, "cpu_count": 86, "torch_dataset": 86, "quick": [86, 90], "relu": 86, "batchnorm2d": 86, "maxpool2d": 86, "lazylinear": 86, "flatten": 86, "get_test_accuraci": 86, "testload": [86, 92], "energi": 86, "trainload": [86, 92], "n_epoch": 86, "patienc": 86, "criterion": 86, "crossentropyloss": 86, "adamw": 86, "best_test_accuraci": 86, "start_epoch": 86, "running_loss": 86, "best_epoch": 86, "end_epoch": 86, "3f": [86, 94], "acc": [86, 87], "time_taken": 86, "compute_embed": 86, "compute_pred_prob": 86, "train_batch_s": 86, "num_work": 86, "worker": [86, 98], "train_id_list": 86, "test_id_list": 86, "train_id": 86, "test_id": 86, "embeddings_model": 86, "ntrain": 86, "trainset": 86, "testset": 86, "pin_memori": 86, "fold_embed": 86, "fold_pred_prob": 86, "finish": 86, "482": 86, "720": 86, "853": 86, "195": 86, "613": 86, "493": 86, "060": 86, "799": 86, "330": [86, 91], "505": 86, "625": 86, "476": 86, "340": 86, "993": 86, "328": [86, 91], "310": 86, "502": 86, "reorder": 86, "vision": 86, "grayscal": 86, "exce": 86, "max_preval": 86, "7714": 86, "3772": 86, "3585": 86, "166": 86, "3651": 86, "27080": 86, "873833e": 86, "40378": 86, "915575e": 86, "25316": 86, "390277e": 86, "06": [86, 87, 91, 98], "2090": 86, "751164e": 86, "14999": 86, "881301e": 86, "9569": 86, "11262": 86, "000003": 86, "19228": 86, "000010": 86, "dress": 86, "32657": 86, "000013": 86, "21282": 86, "000016": 86, "53564": 86, "000018": 86, "pullov": 86, "6321": 86, "30968": 86, "001267": 86, "30659": 86, "000022": [86, 98], "47824": 86, "001454": 86, "3370": 86, "000026": 86, "54565": 86, "001854": 86, "9762": 86, "258": 86, "47139": 86, "000033": 86, "166980": 86, "986195": 86, "997205": 86, "948781": 86, "999358": 86, "54078": 86, "17371": 86, "000025": 86, "plot_label_issue_exampl": 86, "ncol": [86, 92], "nrow": [86, 92], "ceil": 86, "axes_list": 86, "label_issue_indic": 86, "gl": 86, "sl": 86, "fontdict": 86, "imshow": [86, 92], "cmap": [86, 94], "grai": 86, "subplots_adjust": 86, "hspace": 86, "outsiz": 86, "outlier_issues_df": 86, "depict": [86, 90, 91, 92, 93, 95], "plot_outlier_issues_exampl": 86, "n_comparison_imag": 86, "sample_from_class": 86, "number_of_sampl": 86, "non_outlier_indic": 86, "isnul": 86, "non_outlier_indices_excluding_curr": 86, "sampled_indic": 86, "label_scores_of_sampl": 86, "top_score_indic": 86, "top_label_indic": 86, "sampled_imag": 86, "get_image_given_label_and_sampl": 86, "image_from_dataset": 86, "corresponding_label": 86, "comparison_imag": 86, "images_to_plot": 86, "idlist": 86, "iterrow": 86, "closest": 86, "counterpart": 86, "near_duplicate_issues_df": 86, "plot_near_duplicate_issue_exampl": 86, "seen_id_pair": 86, "get_image_and_given_label_and_predicted_label": 86, "duplicate_imag": 86, "nd_set": 86, "challeng": 86, "dark_issu": 86, "reveal": [86, 91, 95], "dark_scor": 86, "dark_issues_df": 86, "is_dark_issu": 86, "34848": 86, "203922": 86, "50270": 86, "204588": 86, "3936": 86, "213098": 86, "733": 86, "217686": 86, "8094": 86, "230118": 86, "plot_image_issue_exampl": 86, "difficult": 86, "disproportion": 86, "lowinfo_issu": 86, "low_information_scor": 86, "lowinfo_issues_df": 86, "is_low_information_issu": 86, "53050": 86, "067975": 86, "40875": 86, "089929": 86, "9594": 86, "092601": 86, "34825": 86, "107744": 86, "37530": 86, "108516": 86, "lot": 86, "depth": 87, "survei": [87, 98], "focus": [87, 89, 90, 94], "scienc": 87, "multivariate_norm": [87, 89, 90], "make_data": [87, 89], "cov": [87, 89, 90], "avg_trac": [87, 90], "test_label": [87, 90, 92, 97], "py_tru": 87, "noise_matrix_tru": 87, "noise_marix": 87, "s_test": 87, "noisy_test_label": 87, "purpl": 87, "val": 87, "namespac": 87, "exec": 87, "markerfacecolor": [87, 90], "markeredgecolor": [87, 90, 94], "markers": [87, 90, 94], "markeredgewidth": [87, 90, 94], "realist": 87, "7560": 87, "637318e": 87, "896262e": 87, "548391e": 87, "923417e": 87, "375075e": 87, "3454": 87, "014051": 87, "020451": 87, "249": [87, 91, 98], "042594": 87, "043859": 87, "045954": 87, "6120": 87, "023714": 87, "007136": 87, "119": [87, 91], "107266": 87, "103": [87, 91], "033738": 87, "238": [87, 91], "119505": 87, "236": [87, 91], "037843": 87, "222": 87, "614915": 87, "122": [87, 91], "624422": 87, "625965": 87, "626079": 87, "118": 87, "627675": 87, "695223": 87, "323529": 87, "523015": 87, "013720": 87, "675727": 87, "646521": 87, "anyth": 87, "enhanc": [87, 89, 91], "magic": 87, "83": [87, 91, 92, 94, 96, 98], "liter": 87, "identif": 87, "x27": 87, "logisticregressionlogisticregress": 87, "ever": 87, "092": 87, "040": 87, "024": 87, "004": 87, "surpris": 87, "1705": 87, "01936": 87, "ton": 87, "yourfavoritemodel1": 87, "merged_label": 87, "merged_test_label": 87, "newli": [87, 89], "yourfavoritemodel2": 87, "yourfavoritemodel3": 87, "cl3": 87, "takeawai": 87, "That": [87, 90], "randomli": 87, "my_test_pred_prob": 87, "my_test_pr": 87, "issues_test": 87, "corrected_test_label": 87, "pretend": 87, "cl_test_pr": 87, "69": [87, 92, 94], "fairli": 87, "label_acc": 87, "percentag": 87, "offset": 87, "nquestion": 87, "overestim": 87, "answer": 87, "experienc": 87, "76": [87, 90, 91, 94, 96, 98], "knowledg": 87, "prioiri": 87, "known": 87, "versatil": 87, "label_issues_indic": 87, "213": [87, 91], "212": [87, 96], "218": [87, 91], "152": 87, "197": [87, 91], "196": [87, 91], "170": 87, "214": 87, "164": [87, 90], "198": [87, 91], "191": [87, 91], "63": [87, 91, 94], "121": [87, 97], "117": [87, 94], "62": [87, 91, 94], "206": [87, 91], "115": [87, 91], "193": 87, "194": 87, "201": [87, 91], "174": 87, "163": 87, "150": [87, 89, 91], "169": 87, "151": [87, 91], "168": 87, "precision_scor": 87, "recall_scor": 87, "f1_score": 87, "true_label_issu": 87, "filter_by_list": 87, "718750": [87, 89], "807018": 87, "912": 87, "733333": 87, "800000": 87, "721311": 87, "792793": 87, "908": 87, "676923": 87, "765217": 87, "892": 87, "567901": 87, "702290": 87, "844": 87, "gaug": 87, "label_issues_count": 87, "155": [87, 91], "156": 87, "172": [87, 90], "easiest": 87, "modular": 87, "penalti": 87, "l2": 87, "model3": 87, "n_estim": 87, "cv_pred_probs_1": 87, "cv_pred_probs_2": 87, "cv_pred_probs_3": 87, "label_quality_scores_best": 87, "cv_pred_probs_ensembl": 87, "label_quality_scores_bett": 87, "superior": [87, 93], "workflow": [88, 94], "speechbrain": 88, "timm": 88, "glad": 89, "multiannotator_label": 89, "300": [89, 98], "noisier": 89, "111": [89, 94], "local_data": [89, 90], "true_labels_train": [89, 90], "noise_matrix_bett": 89, "noise_matrix_wors": 89, "transpos": [89, 92], "dropna": 89, "zfill": 89, "row_na_check": 89, "notna": 89, "reset_index": 89, "a0001": 89, "a0002": 89, "a0003": 89, "a0004": 89, "a0005": 89, "a0006": 89, "a0007": 89, "a0008": 89, "a0009": 89, "a0010": 89, "a0041": 89, "a0042": 89, "a0043": 89, "a0044": 89, "a0045": 89, "a0046": 89, "a0047": 89, "a0048": 89, "a0049": 89, "a0050": 89, "na": 89, "60856743": 89, "41693214": 89, "40908785": 89, "87147629": 89, "64941785": 89, "10774851": 89, "0524466": 89, "71853246": 89, "37169848": 89, "66031048": 89, "multiannotator_util": 89, "crude": 89, "straight": 89, "majority_vote_label": 89, "736118": 89, "757751": 89, "782232": 89, "715565": 89, "824256": 89, "quality_annotator_a0001": 89, "quality_annotator_a0002": 89, "quality_annotator_a0003": 89, "quality_annotator_a0004": 89, "quality_annotator_a0005": 89, "quality_annotator_a0006": 89, "quality_annotator_a0007": 89, "quality_annotator_a0008": 89, "quality_annotator_a0009": 89, "quality_annotator_a0010": 89, "quality_annotator_a0041": 89, "quality_annotator_a0042": 89, "quality_annotator_a0043": 89, "quality_annotator_a0044": 89, "quality_annotator_a0045": 89, "quality_annotator_a0046": 89, "quality_annotator_a0047": 89, "quality_annotator_a0048": 89, "quality_annotator_a0049": 89, "quality_annotator_a0050": 89, "070564": 89, "216078": 89, "119188": 89, "alongisd": 89, "244981": 89, "208333": 89, "295979": 89, "294118": 89, "324197": 89, "310345": 89, "355316": 89, "346154": 89, "439732": 89, "480000": 89, "a0031": 89, "523205": 89, "580645": 89, "a0034": 89, "535313": 89, "607143": 89, "a0021": 89, "606999": 89, "a0015": 89, "609526": 89, "678571": 89, "a0011": 89, "621103": 89, "692308": 89, "wors": 89, "improved_consensus_label": 89, "majority_vote_accuraci": 89, "cleanlab_label_accuraci": 89, "8581081081081081": 89, "9797297297297297": 89, "besid": 89, "sorted_consensus_quality_scor": 89, "worst_qual": 89, "better_qu": 89, "worst_quality_accuraci": 89, "better_quality_accuraci": 89, "9893238434163701": 89, "improved_pred_prob": 89, "treat": [89, 90, 94, 98], "analzi": 89, "copyright": 90, "advertis": 90, "violenc": 90, "nsfw": 90, "suppli": [90, 91, 94], "celeba": 90, "make_multilabel_data": 90, "boxes_coordin": 90, "box_multilabel": 90, "make_multi": 90, "bx1": 90, "by1": 90, "bx2": 90, "by2": 90, "label_list": 90, "ur": 90, "upper": 90, "inidx": 90, "logical_and": 90, "inv_d": 90, "labels_idx": 90, "true_labels_test": 90, "dict_unique_label": 90, "get_color_arrai": 90, "dcolor": 90, "aa4400": 90, "55227f": 90, "55a100": 90, "00ff00": 90, "007f7f": 90, "386b55": 90, "0000ff": 90, "simplic": 90, "advis": 90, "y_onehot": 90, "single_class_label": 90, "stratifi": [90, 93], "kf": 90, "train_index": 90, "test_index": 90, "clf_cv": 90, "x_train_cv": 90, "x_test_cv": 90, "y_train_cv": 90, "y_test_cv": 90, "y_pred_cv": 90, "saw": 90, "num_to_displai": 90, "09": [90, 91, 94], "275": 90, "267": 90, "225": 90, "171": 90, "234": 90, "165": 90, "227": [90, 91, 98], "262": [90, 91], "263": [90, 91], "266": [90, 91], "139": 90, "143": [90, 91, 98], "216": [90, 91, 98], "265": 90, "159": [90, 91], "despit": [90, 98], "suspect": 90, "888": 90, "8224": 90, "9632": 90, "968": 90, "6512": 90, "0444": 90, "774": 90, "labels_binary_format": 90, "labels_list_format": 90, "surround": 91, "scene": 91, "coco": 91, "everydai": 91, "has_label_issu": 91, "insal": 91, "nc": [91, 95, 98], "s3": [91, 95, 98], "amazonaw": [91, 95, 98], "objectdetectionbenchmark": 91, "tutorial_obj": 91, "pkl": 91, "example_imag": 91, "unzip": [91, 98], "_separate_label": 91, "_separate_predict": 91, "begin": 91, "image_path": 91, "rb": 91, "image_to_visu": 91, "seg_map": 91, "334": 91, "float32": 91, "bboxes_ignor": 91, "290": 91, "286": 91, "285": 91, "224": 91, "231": 91, "293": 91, "235": 91, "289": 91, "282": 91, "74": [91, 94, 96], "281": 91, "271": 91, "280": 91, "277": 91, "279": 91, "287": 91, "299": 91, "276": 91, "307": 91, "321": 91, "326": 91, "333": 91, "261": 91, "319": 91, "257": 91, "295": 91, "283": 91, "243": 91, "303": 91, "316": 91, "247": 91, "323": 91, "327": 91, "226": 91, "228": 91, "232": 91, "219": 91, "239": 91, "240": 91, "209": 91, "242": 91, "202": 91, "230": 91, "215": 91, "220": 91, "229": 91, "217": [91, 98], "237": 91, "207": 91, "204": 91, "84": [91, 94, 98], "205": 91, "223": 91, "153": 91, "149": 91, "140": 91, "124": 91, "268": 91, "273": 91, "108": 91, "284": 91, "110": 91, "136": 91, "145": 91, "173": 91, "297": 91, "317": 91, "192": 91, "332": 91, "324": 91, "203": 91, "320": 91, "314": 91, "199": 91, "291": 91, "000000481413": 91, "jpg": 91, "42398": 91, "44503": 91, "337": [91, 97], "29968": 91, "336": 91, "21005": 91, "9978472": 91, "forgot": 91, "drew": 91, "label_issue_idx": 91, "num_examples_to_show": 91, "138": 91, "candid": 91, "97489622": 91, "70610878": 91, "98764951": 91, "88899237": 91, "99085805": 91, "issue_idx": 91, "95569726e": 91, "03354841e": 91, "57510169e": 91, "58447666e": 91, "39755858e": 91, "issue_to_visu": 91, "000000009483": 91, "95569726168054e": 91, "addition": [91, 95], "visibl": 91, "missmatch": 91, "likelei": 91, "agnost": 91, "vaidat": 91, "inconsist": 91, "000000395701": 91, "033548411774308e": 91, "armchair": 91, "tv": 91, "000000154004": 91, "38300759625496356": 91, "foreground": 91, "000000448410": 91, "0008575101690203273": 91, "crowd": 91, "alon": 91, "explor": [91, 92], "resembl": [91, 92], "000000499768": 91, "9748962231208227": 91, "000000521141": 91, "8889923658893665": 91, "000000143931": 91, "9876495074395956": 91, "bonu": 91, "uncov": 91, "irregular": 91, "anomali": 91, "unusu": [91, 92], "object_detection_util": 91, "calculate_bounding_box_area": 91, "num_imgs_to_show": 91, "lab_object_count": 91, "pred_object_count": 91, "000000430073": 91, "000000183709": 91, "000000189475": 91, "studi": 91, "label_norm": 91, "pred_norm": 91, "area": [91, 95], "assess": 91, "lab_area": 91, "pred_area": 91, "lab_area_mean": 91, "lab_area_std": 91, "max_deviation_valu": 91, "max_deviation_class": 91, "deviation_valu": 91, "deviation_class": 91, "mean_area": 91, "std_area": 91, "class_area": 91, "deviations_awai": 91, "max_deviation_index": 91, "num_imgs_to_show_per_class": 91, "class_num": 91, "sorted_indic": 91, "000000422886": 91, "000000341828": 91, "000000461009": 91, "train_feature_embed": 92, "ood_train_feature_scor": 92, "test_feature_embed": 92, "ood_test_feature_scor": 92, "ood_train_predictions_scor": 92, "train_pred_prob": 92, "ood_test_predictions_scor": 92, "test_pred_prob": 92, "pylab": 92, "rcparam": 92, "baggingclassifi": 92, "therebi": 92, "rescal": 92, "transform_norm": 92, "totensor": 92, "root": 92, "animal_class": 92, "non_animal_class": 92, "animal_idx": 92, "test_idx": 92, "toronto": 92, "edu": 92, "kriz": 92, "stderr": 92, "170498071": 92, "sphinxverbatim": [92, 98], "32768": 92, "261666": 92, "87it": 92, "229376": 92, "1008184": 92, "22it": 92, "917504": 92, "3024924": 92, "25it": 92, "3604480": 92, "10815589": 92, "01it": 92, "8093696": 92, "21711301": 92, "20it": 92, "12713984": 92, "28463425": 92, "80it": 92, "18415616": 92, "37093721": 92, "77it": 92, "22315008": 92, "36515212": 92, "62it": 92, "28147712": 92, "41997526": 92, "05it": 92, "32440320": 92, "42045924": 92, "58it": 92, "37552128": 92, "44538921": 92, "94it": 92, "42074112": 92, "44362732": 92, "47054848": 92, "45944965": 92, "49it": 92, "51707904": 92, "45671496": 92, "03it": 92, "56492032": 92, "46240452": 92, "45it": 92, "61145088": 92, "45747071": 92, "86it": 92, "65929216": 92, "45455602": 92, "70877184": 92, "46610019": 92, "43it": 92, "75563008": 92, "45516968": 92, "90it": 92, "80576512": 92, "46656442": 92, "21it": 92, "85262336": 92, "46619528": 92, "02it": 92, "90210304": 92, "46039780": 92, "59it": 92, "94896128": 92, "46157740": 92, "99647488": 92, "46263607": 92, "88it": 92, "104300544": 92, "46282457": 92, "85it": 92, "108953600": 92, "45741010": 92, "83it": 92, "113606656": 92, "45948596": 92, "64it": 92, "118292480": 92, "46092642": 92, "60it": 92, "123043840": 92, "45723865": 92, "127827968": 92, "46262103": 92, "132644864": 92, "46429287": 92, "32it": 92, "137297920": 92, "46427860": 92, "141950976": 92, "46013263": 92, "146702336": 92, "46108863": 92, "41it": 92, "151453696": 92, "46474330": 92, "37it": 92, "156172288": 92, "46430188": 92, "160923648": 92, "46655154": 92, "95it": 92, "165609472": 92, "46292221": 92, "46988419": 92, "63it": 92, "41659923": 92, "5000": 92, "plot_imag": 92, "visualize_outli": 92, "txt_class": 92, "img": [92, 94], "npimg": 92, "show_label": 92, "data_subset": 92, "resnet50": 92, "corpu": 92, "2048": 92, "embed_imag": 92, "create_model": 92, "strang": 92, "odd": 92, "train_ood_features_scor": 92, "top_train_ood_features_idx": 92, "fun": 92, "negat": 92, "homogen": 92, "bottom_train_ood_features_idx": 92, "test_ood_features_scor": 92, "top_ood_features_idx": 92, "inevit": 92, "trade": 92, "5th": 92, "percentil": 92, "fifth_percentil": 92, "plt_rang": 92, "hist": 92, "train_outlier_scor": 92, "ylabel": 92, "axvlin": 92, "test_outlier_scor": 92, "ood_features_indic": 92, "revisit": 92, "return_invers": 92, "train_feature_embeddings_sc": 92, "test_feature_embeddings_sc": 92, "train_pred_label": 92, "9702": 92, "train_ood_predictions_scor": 92, "test_ood_predictions_scor": 92, "mainli": [92, 98], "lost": 92, "unsuit": 93, "ok": [93, 98], "convention": 93, "aforement": 93, "hypothet": 93, "contrast": 93, "tradit": 93, "disjoint": 93, "out_of_sample_pred_probs_for_a": 93, "out_of_sample_pred_probs_for_b": 93, "out_of_sample_pred_probs_for_c": 93, "out_of_sample_pred_prob": 93, "price": 94, "incom": 94, "ag": 94, "sensor": 94, "histgradientboostingregressor": 94, "r2_score": 94, "student_grades_r": 94, "final_scor": 94, "true_final_scor": 94, "homework": 94, "3d": 94, "hue": 94, "mpl_toolkit": 94, "mplot3d": 94, "axes3d": 94, "errors_idx": 94, "add_subplot": 94, "z": 94, "colorbar": 94, "errors_mask": 94, "feature_column": 94, "predicted_column": 94, "x_train_raw": 94, "x_test_raw": 94, "categorical_featur": [94, 96], "randomforestregressor": 94, "636197": 94, "499503": 94, "843478": 94, "776647": 94, "350358": 94, "170547": 94, "706969": 94, "984759": 94, "812515": 94, "795928": 94, "identified_issu": [94, 97], "141": 94, "659": 94, "367": 94, "318": 94, "305": 94, "560": 94, "657": 94, "688": 94, "view_datapoint": 94, "concat": 94, "consum": [94, 97], "baseline_model": [94, 97], "preds_og": 94, "r2_og": 94, "838": 94, "robustli": [94, 96, 97], "acceler": [94, 97], "found_label_issu": 94, "preds_cl": 94, "r2_cl": 94, "926": 94, "effort": [94, 96, 97], "favorit": 94, "968627e": 94, "228799": 94, "646674e": 94, "402962": 94, "323818e": 94, "952758": 94, "422144e": 94, "456908": 94, "465815e": 94, "753968": 94, "110719": 94, "000044": 94, "670640": 94, "000060": 94, "749976": 94, "000066": 94, "947007": 94, "000314": 94, "648396": 94, "plu": 94, "synthia": 95, "imagesegment": 95, "given_mask": 95, "predicted_mask": 95, "set_printopt": [95, 98], "sky": 95, "sidewalk": 95, "veget": 95, "terrain": 95, "rider": 95, "pred_probs_filepath": 95, "1088": 95, "1920": 95, "label_filepath": 95, "synthia_class": 95, "maunal": 95, "100000": 95, "244800": 95, "leftmost": 95, "middl": [95, 98], "infact": 95, "rightmost": 95, "discrep": 95, "3263230": 95, "783379": 95, "275110": 95, "255792": 95, "78225": 95, "55990": 95, "54427": 95, "33591": 95, "24645": 95, "21308": 95, "15045": 95, "14171": 95, "13832": 95, "13498": 95, "11490": 95, "9164": 95, "8769": 95, "6999": 95, "6031": 95, "5011": 95, "mistakenli": 95, "class_issu": 95, "aim": [95, 98], "domin": 95, "extratreesclassifi": 96, "extratre": 96, "ranked_label_issu": [96, 97], "labelencod": [96, 97], "labels_raw": 96, "interg": [96, 97], "tress": 96, "827": 96, "cheat": 96, "0pt": 96, "233": 96, "labels_train": 96, "labels_test": 96, "acc_og": [96, 97], "783068783068783": 96, "acc_cl": [96, 97], "8095238095238095": 96, "earlier": [97, 98], "raw_label": 97, "raw_train_text": 97, "raw_test_text": 97, "raw_train_label": 97, "raw_test_label": 97, "encond": 97, "train_text": 97, "test_text": 97, "858371": 97, "547274": 97, "826228": 97, "966008": 97, "792449": 97, "646": 97, "390": 97, "628": 97, "702": 97, "135": 97, "735": 97, "print_as_df": 97, "inverse_transform": 97, "fight": 97, "bunch": 98, "conll": 98, "2003": 98, "love": 98, "n_i": 98, "optional_list_of_ordered_class_nam": 98, "deepai": 98, "conll2003": 98, "rm": 98, "tokenclassif": 98, "2024": 98, "2400": 98, "52e0": 98, "1a01": 98, "996": 98, "connect": 98, "443": 98, "await": 98, "982975": 98, "960k": 98, "kb": 98, "959": 98, "94k": 98, "mb": 98, "directori": 98, "inflat": 98, "17045998": 98, "16m": 98, "octet": 98, "53k": 98, "594kb": 98, "763": 98, "78mb": 98, "38m": 98, "20mb": 98, "05m": 98, "43mb": 98, "73m": 98, "59mb": 98, "44m": 98, "72mb": 98, "18m": 98, "83mb": 98, "94m": 98, "92mb": 98, "71m": 98, "01mb": 98, "50m": 98, "08mb": 98, "30m": 98, "14mb": 98, "12m": 98, "21mb": 98, "95m": 98, "26mb": 98, "78m": 98, "31mb": 98, "63m": 98, "36mb": 98, "eta": 98, "49m": 98, "40mb": 98, "36m": 98, "44mb": 98, "19m": 98, "47mb": 98, "80m": 98, "45m": 98, "60mb": 98, "10m": 98, "77m": 98, "26m": 98, "62mb": 98, "bert": 98, "read_npz": 98, "filepath": 98, "corrsespond": 98, "iob2": 98, "given_ent": 98, "entity_map": 98, "readfil": 98, "sep": 98, "startswith": 98, "docstart": 98, "isalpha": 98, "isupp": 98, "indices_to_preview": 98, "nsentenc": 98, "eu": 98, "reject": 98, "boycott": 98, "british": 98, "lamb": 98, "00030412": 98, "00023826": 98, "99936208": 98, "00007009": 98, "00002545": 98, "99998795": 98, "00000401": 98, "00000218": 98, "00000455": 98, "00000131": 98, "00000749": 98, "99996115": 98, "00001371": 98, "0000087": 98, "00000895": 98, "99998936": 98, "00000382": 98, "00000178": 98, "00000366": 98, "00000137": 98, "99999101": 98, "00000266": 98, "00000174": 98, "0000035": 98, "00000109": 98, "99998768": 98, "00000482": 98, "00000202": 98, "00000438": 98, "0000011": 98, "00000465": 98, "99996392": 98, "00001105": 98, "0000116": 98, "00000878": 98, "99998671": 98, "00000364": 98, "00000213": 98, "00000472": 98, "00000281": 98, "99999073": 98, "00000211": 98, "00000159": 98, "00000442": 98, "00000115": 98, "peter": 98, "blackburn": 98, "00000358": 98, "00000529": 98, "99995623": 98, "0000129": 98, "0000024": 98, "00001812": 98, "99994141": 98, "00001645": 98, "00002162": 98, "brussel": 98, "1996": 98, "00001172": 98, "00000821": 98, "00004661": 98, "0000618": 98, "99987167": 98, "99999061": 98, "00000201": 98, "00000195": 98, "00000408": 98, "00000135": 98, "2254": 98, "2907": 98, "19392": 98, "9962": 98, "8904": 98, "19303": 98, "12918": 98, "9256": 98, "11855": 98, "18392": 98, "20426": 98, "19402": 98, "14744": 98, "19371": 98, "4645": 98, "10331": 98, "9430": 98, "6143": 98, "18367": 98, "12914": 98, "todai": 98, "weather": 98, "march": 98, "scalfaro": 98, "northern": 98, "himself": 98, "said": 98, "germani": 98, "nastja": 98, "rysich": 98, "north": 98, "spla": 98, "fought": 98, "khartoum": 98, "govern": 98, "south": 98, "1983": 98, "autonomi": 98, "animist": 98, "region": 98, "moslem": 98, "arabis": 98, "mayor": 98, "antonio": 98, "gonzalez": 98, "garcia": 98, "revolutionari": 98, "parti": 98, "wednesdai": 98, "troop": 98, "raid": 98, "farm": 98, "stole": 98, "rape": 98, "women": 98, "spring": 98, "chg": 98, "hrw": 98, "12pct": 98, "princ": 98, "photo": 98, "moment": 98, "spokeswoman": 98, "rainier": 98, "told": 98, "reuter": 98, "danila": 98, "carib": 98, "w224": 98, "equip": 98, "radiomet": 98, "earn": 98, "19996": 98, "london": 98, "denom": 98, "sale": 98, "uk": 98, "jp": 98, "fr": 98, "maccabi": 98, "hapoel": 98, "haifa": 98, "tel": 98, "aviv": 98, "hospit": 98, "rever": 98, "roman": 98, "cathol": 98, "nun": 98, "admit": 98, "calcutta": 98, "week": 98, "ago": 98, "fever": 98, "vomit": 98, "allianc": 98, "embattl": 98, "kabul": 98, "salang": 98, "highwai": 98, "mondai": 98, "tuesdai": 98, "suprem": 98, "council": 98, "led": 98, "jumbish": 98, "milli": 98, "movement": 98, "warlord": 98, "abdul": 98, "rashid": 98, "dostum": 98, "dollar": 98, "exchang": 98, "3570": 98, "12049": 98, "born": 98, "1937": 98, "provinc": 98, "anhui": 98, "dai": 98, "came": 98, "shanghai": 98, "citi": 98, "prolif": 98, "author": 98, "teacher": 98, "chines": 98, "16764": 98, "1990": 98, "historian": 98, "alan": 98, "john": 98, "percival": 98, "taylor": 98, "di": 98, "20446": 98, "pace": 98, "bowler": 98, "ian": 98, "harvei": 98, "claim": 98, "victoria": 98, "15514": 98, "cotti": 98, "osc": 98, "foreign": 98, "minist": 98, "7525": 98, "sultan": 98, "specter": 98, "met": 98, "crown": 98, "abdullah": 98, "defenc": 98, "aviat": 98, "jeddah": 98, "saudi": 98, "agenc": 98, "2288": 98, "hi": 98, "customari": 98, "outfit": 98, "champion": 98, "damp": 98, "scalp": 98, "canada": 98, "reign": 98, "olymp": 98, "donovan": 98, "bailei": 98, "1992": 98, "linford": 98, "christi": 98, "britain": 98, "1984": 98, "1988": 98, "carl": 98, "lewi": 98, "ambigi": 98, "punctuat": 98, "chicago": 98, "digest": 98, "philadelphia": 98, "usda": 98, "york": 98, "token_issu": 98, "471": 98, "kean": 98, "year": 98, "contract": 98, "manchest": 98, "19072": 98, "societi": 98, "million": 98, "bite": 98, "deliv": 98, "19910": 98, "father": 98, "clarenc": 98, "woolmer": 98, "renam": 98, "uttar": 98, "pradesh": 98, "india": 98, "ranji": 98, "trophi": 98, "nation": 98, "championship": 98, "captain": 98, "1949": 98, "15658": 98, "19879": 98, "iii": 98, "brian": 98, "shimer": 98, "randi": 98, "jone": 98, "19104": 98}, "objects": {"cleanlab": [[0, 0, 0, "-", "benchmarking"], [2, 0, 0, "-", "classification"], [3, 0, 0, "-", "count"], [9, 0, 0, "-", "datalab"], [33, 0, 0, "-", "dataset"], [36, 0, 0, "-", "experimental"], [40, 0, 0, "-", "filter"], [41, 0, 0, "-", "internal"], [52, 0, 0, "-", "models"], [54, 0, 0, "-", "multiannotator"], [57, 0, 0, "-", "multilabel_classification"], [60, 0, 0, "-", "object_detection"], [63, 0, 0, "-", "outlier"], [64, 0, 0, "-", "rank"], [65, 0, 0, "-", "regression"], [69, 0, 0, "-", "segmentation"], [73, 0, 0, "-", "token_classification"]], "cleanlab.benchmarking": [[1, 0, 0, "-", "noise_generation"]], "cleanlab.benchmarking.noise_generation": [[1, 1, 1, "", "generate_n_rand_probabilities_that_sum_to_m"], [1, 1, 1, "", "generate_noise_matrix_from_trace"], [1, 1, 1, "", "generate_noisy_labels"], [1, 1, 1, "", "noise_matrix_is_valid"], [1, 1, 1, "", "randomly_distribute_N_balls_into_K_bins"]], "cleanlab.classification": [[2, 2, 1, "", "CleanLearning"]], "cleanlab.classification.CleanLearning": [[2, 3, 1, "", "__init_subclass__"], [2, 3, 1, "", "find_label_issues"], [2, 3, 1, "", "fit"], [2, 3, 1, "", "get_label_issues"], [2, 3, 1, "", "get_metadata_routing"], [2, 3, 1, "", "get_params"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "predict_proba"], [2, 3, 1, "", "save_space"], [2, 3, 1, "", "score"], [2, 3, 1, "", "set_fit_request"], [2, 3, 1, "", "set_params"], [2, 3, 1, "", "set_score_request"]], "cleanlab.count": [[3, 1, 1, "", "calibrate_confident_joint"], [3, 1, 1, "", "compute_confident_joint"], [3, 1, 1, "", "estimate_confident_joint_and_cv_pred_proba"], [3, 1, 1, "", "estimate_cv_predicted_probabilities"], [3, 1, 1, "", "estimate_joint"], [3, 1, 1, "", "estimate_latent"], [3, 1, 1, "", "estimate_noise_matrices"], [3, 1, 1, "", "estimate_py_and_noise_matrices_from_probabilities"], [3, 1, 1, "", "estimate_py_noise_matrices_and_cv_pred_proba"], [3, 1, 1, "", "get_confident_thresholds"], [3, 1, 1, "", "num_label_issues"]], "cleanlab.datalab": [[4, 0, 0, "-", "datalab"], [13, 0, 0, "-", "internal"]], "cleanlab.datalab.datalab": [[4, 2, 1, "", "Datalab"]], "cleanlab.datalab.datalab.Datalab": [[4, 4, 1, "", "class_names"], [4, 3, 1, "", "find_issues"], [4, 3, 1, "", "get_info"], [4, 3, 1, "", "get_issue_summary"], [4, 3, 1, "", "get_issues"], [4, 4, 1, "", "has_labels"], [4, 4, 1, "", "info"], [4, 4, 1, "", "issue_summary"], [4, 4, 1, "", "issues"], [4, 4, 1, "", "labels"], [4, 3, 1, "", "list_default_issue_types"], [4, 3, 1, "", "list_possible_issue_types"], [4, 3, 1, "", "load"], [4, 3, 1, "", "report"], [4, 3, 1, "", "save"]], "cleanlab.datalab.internal": [[10, 0, 0, "-", "data"], [11, 0, 0, "-", "data_issues"], [14, 0, 0, "-", "issue_finder"], [12, 0, 0, "-", "issue_manager_factory"], [30, 0, 0, "-", "report"], [31, 0, 0, "-", "task"]], "cleanlab.datalab.internal.data": [[10, 2, 1, "", "Data"], [10, 5, 1, "", "DataFormatError"], [10, 5, 1, "", "DatasetDictError"], [10, 5, 1, "", "DatasetLoadError"], [10, 2, 1, "", "Label"], [10, 2, 1, "", "MultiClass"], [10, 2, 1, "", "MultiLabel"]], "cleanlab.datalab.internal.data.Data": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "has_labels"]], "cleanlab.datalab.internal.data.DataFormatError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.DatasetDictError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.DatasetLoadError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.Label": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data.MultiClass": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data.MultiLabel": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data_issues": [[11, 2, 1, "", "DataIssues"], [11, 1, 1, "", "get_data_statistics"]], "cleanlab.datalab.internal.data_issues.DataIssues": [[11, 3, 1, "", "collect_issues_from_imagelab"], [11, 3, 1, "", "collect_issues_from_issue_manager"], [11, 3, 1, "", "collect_statistics"], [11, 3, 1, "", "get_info"], [11, 3, 1, "", "get_issue_summary"], [11, 3, 1, "", "get_issues"], [11, 6, 1, "", "info"], [11, 6, 1, "", "issue_summary"], [11, 6, 1, "", "issues"], [11, 3, 1, "", "set_health_score"], [11, 4, 1, "", "statistics"]], "cleanlab.datalab.internal.issue_finder": [[14, 2, 1, "", "IssueFinder"]], "cleanlab.datalab.internal.issue_finder.IssueFinder": [[14, 3, 1, "", "find_issues"], [14, 3, 1, "", "get_available_issue_types"]], "cleanlab.datalab.internal.issue_manager": [[16, 0, 0, "-", "data_valuation"], [17, 0, 0, "-", "duplicate"], [18, 0, 0, "-", "imbalance"], [20, 0, 0, "-", "issue_manager"], [21, 0, 0, "-", "label"], [24, 0, 0, "-", "noniid"], [25, 0, 0, "-", "null"], [26, 0, 0, "-", "outlier"], [29, 0, 0, "-", "underperforming_group"]], "cleanlab.datalab.internal.issue_manager.data_valuation": [[16, 2, 1, "", "DataValuationIssueManager"]], "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager": [[16, 6, 1, "", "DEFAULT_THRESHOLD"], [16, 3, 1, "", "collect_info"], [16, 6, 1, "", "description"], [16, 3, 1, "", "find_issues"], [16, 6, 1, "", "info"], [16, 6, 1, "", "issue_name"], [16, 6, 1, "", "issue_score_key"], [16, 6, 1, "", "issues"], [16, 3, 1, "", "make_summary"], [16, 3, 1, "", "report"], [16, 6, 1, "", "summary"], [16, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.duplicate": [[17, 2, 1, "", "NearDuplicateIssueManager"]], "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager": [[17, 3, 1, "", "collect_info"], [17, 6, 1, "", "description"], [17, 3, 1, "", "find_issues"], [17, 6, 1, "", "info"], [17, 6, 1, "", "issue_name"], [17, 6, 1, "", "issue_score_key"], [17, 6, 1, "", "issues"], [17, 3, 1, "", "make_summary"], [17, 6, 1, "", "near_duplicate_sets"], [17, 3, 1, "", "report"], [17, 6, 1, "", "summary"], [17, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.imbalance": [[18, 2, 1, "", "ClassImbalanceIssueManager"]], "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager": [[18, 3, 1, "", "collect_info"], [18, 6, 1, "", "description"], [18, 3, 1, "", "find_issues"], [18, 6, 1, "", "info"], [18, 6, 1, "", "issue_name"], [18, 6, 1, "", "issue_score_key"], [18, 6, 1, "", "issues"], [18, 3, 1, "", "make_summary"], [18, 3, 1, "", "report"], [18, 6, 1, "", "summary"], [18, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.issue_manager": [[20, 2, 1, "", "IssueManager"]], "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager": [[20, 3, 1, "", "collect_info"], [20, 6, 1, "", "description"], [20, 3, 1, "", "find_issues"], [20, 6, 1, "", "info"], [20, 6, 1, "", "issue_name"], [20, 6, 1, "", "issue_score_key"], [20, 6, 1, "", "issues"], [20, 3, 1, "", "make_summary"], [20, 3, 1, "", "report"], [20, 6, 1, "", "summary"], [20, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.label": [[21, 2, 1, "", "LabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager": [[21, 3, 1, "", "collect_info"], [21, 6, 1, "", "description"], [21, 3, 1, "", "find_issues"], [21, 3, 1, "", "get_health_summary"], [21, 6, 1, "", "health_summary_parameters"], [21, 6, 1, "", "info"], [21, 6, 1, "", "issue_name"], [21, 6, 1, "", "issue_score_key"], [21, 6, 1, "", "issues"], [21, 3, 1, "", "make_summary"], [21, 3, 1, "", "report"], [21, 6, 1, "", "summary"], [21, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.multilabel": [[23, 0, 0, "-", "label"]], "cleanlab.datalab.internal.issue_manager.multilabel.label": [[23, 2, 1, "", "MultilabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager": [[23, 3, 1, "", "collect_info"], [23, 6, 1, "", "description"], [23, 3, 1, "", "find_issues"], [23, 6, 1, "", "info"], [23, 6, 1, "", "issue_name"], [23, 6, 1, "", "issue_score_key"], [23, 6, 1, "", "issues"], [23, 3, 1, "", "make_summary"], [23, 3, 1, "", "report"], [23, 6, 1, "", "summary"], [23, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.noniid": [[24, 2, 1, "", "NonIIDIssueManager"], [24, 1, 1, "", "simplified_kolmogorov_smirnov_test"]], "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager": [[24, 3, 1, "", "collect_info"], [24, 6, 1, "", "description"], [24, 3, 1, "", "find_issues"], [24, 6, 1, "", "info"], [24, 6, 1, "", "issue_name"], [24, 6, 1, "", "issue_score_key"], [24, 6, 1, "", "issues"], [24, 3, 1, "", "make_summary"], [24, 3, 1, "", "report"], [24, 6, 1, "", "summary"], [24, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.null": [[25, 2, 1, "", "NullIssueManager"]], "cleanlab.datalab.internal.issue_manager.null.NullIssueManager": [[25, 3, 1, "", "collect_info"], [25, 6, 1, "", "description"], [25, 3, 1, "", "find_issues"], [25, 6, 1, "", "info"], [25, 6, 1, "", "issue_name"], [25, 6, 1, "", "issue_score_key"], [25, 6, 1, "", "issues"], [25, 3, 1, "", "make_summary"], [25, 3, 1, "", "report"], [25, 6, 1, "", "summary"], [25, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.outlier": [[26, 2, 1, "", "OutlierIssueManager"]], "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager": [[26, 6, 1, "", "DEFAULT_THRESHOLDS"], [26, 3, 1, "", "collect_info"], [26, 6, 1, "", "description"], [26, 3, 1, "", "find_issues"], [26, 6, 1, "", "info"], [26, 6, 1, "", "issue_name"], [26, 6, 1, "", "issue_score_key"], [26, 6, 1, "", "issues"], [26, 3, 1, "", "make_summary"], [26, 6, 1, "", "ood"], [26, 3, 1, "", "report"], [26, 6, 1, "", "summary"], [26, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.regression": [[28, 0, 0, "-", "label"]], "cleanlab.datalab.internal.issue_manager.regression.label": [[28, 2, 1, "", "RegressionLabelIssueManager"], [28, 1, 1, "", "find_issues_with_features"], [28, 1, 1, "", "find_issues_with_predictions"]], "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager": [[28, 3, 1, "", "collect_info"], [28, 6, 1, "", "description"], [28, 3, 1, "", "find_issues"], [28, 6, 1, "", "info"], [28, 6, 1, "", "issue_name"], [28, 6, 1, "", "issue_score_key"], [28, 6, 1, "", "issues"], [28, 3, 1, "", "make_summary"], [28, 3, 1, "", "report"], [28, 6, 1, "", "summary"], [28, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.underperforming_group": [[29, 2, 1, "", "UnderperformingGroupIssueManager"]], "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager": [[29, 6, 1, "", "NO_UNDERPERFORMING_CLUSTER_ID"], [29, 6, 1, "", "OUTLIER_CLUSTER_LABELS"], [29, 3, 1, "", "collect_info"], [29, 6, 1, "", "description"], [29, 3, 1, "", "filter_cluster_ids"], [29, 3, 1, "", "find_issues"], [29, 3, 1, "", "get_worst_cluster"], [29, 6, 1, "", "info"], [29, 6, 1, "", "issue_name"], [29, 6, 1, "", "issue_score_key"], [29, 6, 1, "", "issues"], [29, 3, 1, "", "make_summary"], [29, 3, 1, "", "perform_clustering"], [29, 3, 1, "", "report"], [29, 3, 1, "", "set_knn_graph"], [29, 6, 1, "", "summary"], [29, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager_factory": [[12, 7, 1, "", "REGISTRY"], [12, 1, 1, "", "list_default_issue_types"], [12, 1, 1, "", "list_possible_issue_types"], [12, 1, 1, "", "register"]], "cleanlab.datalab.internal.report": [[30, 2, 1, "", "Reporter"]], "cleanlab.datalab.internal.report.Reporter": [[30, 3, 1, "", "get_report"], [30, 3, 1, "", "report"]], "cleanlab.datalab.internal.task": [[31, 2, 1, "", "Task"]], "cleanlab.datalab.internal.task.Task": [[31, 6, 1, "", "CLASSIFICATION"], [31, 6, 1, "", "MULTILABEL"], [31, 6, 1, "", "REGRESSION"], [31, 3, 1, "", "__contains__"], [31, 3, 1, "", "__getitem__"], [31, 3, 1, "", "__iter__"], [31, 3, 1, "", "__len__"], [31, 3, 1, "", "from_str"], [31, 4, 1, "", "is_classification"], [31, 4, 1, "", "is_multilabel"], [31, 4, 1, "", "is_regression"]], "cleanlab.dataset": [[33, 1, 1, "", "find_overlapping_classes"], [33, 1, 1, "", "health_summary"], [33, 1, 1, "", "overall_label_health_score"], [33, 1, 1, "", "rank_classes_by_label_quality"]], "cleanlab.experimental": [[34, 0, 0, "-", "cifar_cnn"], [35, 0, 0, "-", "coteaching"], [37, 0, 0, "-", "label_issues_batched"], [38, 0, 0, "-", "mnist_pytorch"], [39, 0, 0, "-", "span_classification"]], "cleanlab.experimental.cifar_cnn": [[34, 2, 1, "", "CNN"], [34, 1, 1, "", "call_bn"]], "cleanlab.experimental.cifar_cnn.CNN": [[34, 6, 1, "", "T_destination"], [34, 3, 1, "", "__call__"], [34, 3, 1, "", "add_module"], [34, 3, 1, "", "apply"], [34, 3, 1, "", "bfloat16"], [34, 3, 1, "", "buffers"], [34, 6, 1, "", "call_super_init"], [34, 3, 1, "", "children"], [34, 3, 1, "", "compile"], [34, 3, 1, "", "cpu"], [34, 3, 1, "", "cuda"], [34, 3, 1, "", "double"], [34, 6, 1, "", "dump_patches"], [34, 3, 1, "", "eval"], [34, 3, 1, "", "extra_repr"], [34, 3, 1, "", "float"], [34, 3, 1, "id0", "forward"], [34, 3, 1, "", "get_buffer"], [34, 3, 1, "", "get_extra_state"], [34, 3, 1, "", "get_parameter"], [34, 3, 1, "", "get_submodule"], [34, 3, 1, "", "half"], [34, 3, 1, "", "ipu"], [34, 3, 1, "", "load_state_dict"], [34, 3, 1, "", "modules"], [34, 3, 1, "", "named_buffers"], [34, 3, 1, "", "named_children"], [34, 3, 1, "", "named_modules"], [34, 3, 1, "", "named_parameters"], [34, 3, 1, "", "parameters"], [34, 3, 1, "", "register_backward_hook"], [34, 3, 1, "", "register_buffer"], [34, 3, 1, "", "register_forward_hook"], [34, 3, 1, "", "register_forward_pre_hook"], [34, 3, 1, "", "register_full_backward_hook"], [34, 3, 1, "", "register_full_backward_pre_hook"], [34, 3, 1, "", "register_load_state_dict_post_hook"], [34, 3, 1, "", "register_module"], [34, 3, 1, "", "register_parameter"], [34, 3, 1, "", "register_state_dict_pre_hook"], [34, 3, 1, "", "requires_grad_"], [34, 3, 1, "", "set_extra_state"], [34, 3, 1, "", "share_memory"], [34, 3, 1, "", "state_dict"], [34, 3, 1, "", "to"], [34, 3, 1, "", "to_empty"], [34, 3, 1, "", "train"], [34, 6, 1, "", "training"], [34, 3, 1, "", "type"], [34, 3, 1, "", "xpu"], [34, 3, 1, "", "zero_grad"]], "cleanlab.experimental.coteaching": [[35, 1, 1, "", "adjust_learning_rate"], [35, 1, 1, "", "evaluate"], [35, 1, 1, "", "forget_rate_scheduler"], [35, 1, 1, "", "initialize_lr_scheduler"], [35, 1, 1, "", "loss_coteaching"], [35, 1, 1, "", "train"]], "cleanlab.experimental.label_issues_batched": [[37, 2, 1, "", "LabelInspector"], [37, 7, 1, "", "adj_confident_thresholds_shared"], [37, 1, 1, "", "find_label_issues_batched"], [37, 7, 1, "", "labels_shared"], [37, 7, 1, "", "pred_probs_shared"], [37, 1, 1, "", "split_arr"]], "cleanlab.experimental.label_issues_batched.LabelInspector": [[37, 3, 1, "", "get_confident_thresholds"], [37, 3, 1, "", "get_label_issues"], [37, 3, 1, "", "get_num_issues"], [37, 3, 1, "", "get_quality_scores"], [37, 3, 1, "", "score_label_quality"], [37, 3, 1, "", "update_confident_thresholds"]], "cleanlab.experimental.mnist_pytorch": [[38, 2, 1, "", "CNN"], [38, 2, 1, "", "SimpleNet"], [38, 1, 1, "", "get_mnist_dataset"], [38, 1, 1, "", "get_sklearn_digits_dataset"]], "cleanlab.experimental.mnist_pytorch.CNN": [[38, 3, 1, "", "__init_subclass__"], [38, 6, 1, "", "batch_size"], [38, 6, 1, "", "dataset"], [38, 6, 1, "", "epochs"], [38, 3, 1, "id0", "fit"], [38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 6, 1, "", "loader"], [38, 6, 1, "", "log_interval"], [38, 6, 1, "", "lr"], [38, 6, 1, "", "momentum"], [38, 6, 1, "", "no_cuda"], [38, 3, 1, "id1", "predict"], [38, 3, 1, "id4", "predict_proba"], [38, 6, 1, "", "seed"], [38, 3, 1, "", "set_fit_request"], [38, 3, 1, "", "set_params"], [38, 3, 1, "", "set_predict_proba_request"], [38, 3, 1, "", "set_predict_request"], [38, 6, 1, "", "test_batch_size"]], "cleanlab.experimental.mnist_pytorch.SimpleNet": [[38, 6, 1, "", "T_destination"], [38, 3, 1, "", "__call__"], [38, 3, 1, "", "add_module"], [38, 3, 1, "", "apply"], [38, 3, 1, "", "bfloat16"], [38, 3, 1, "", "buffers"], [38, 6, 1, "", "call_super_init"], [38, 3, 1, "", "children"], [38, 3, 1, "", "compile"], [38, 3, 1, "", "cpu"], [38, 3, 1, "", "cuda"], [38, 3, 1, "", "double"], [38, 6, 1, "", "dump_patches"], [38, 3, 1, "", "eval"], [38, 3, 1, "", "extra_repr"], [38, 3, 1, "", "float"], [38, 3, 1, "", "forward"], [38, 3, 1, "", "get_buffer"], [38, 3, 1, "", "get_extra_state"], [38, 3, 1, "", "get_parameter"], [38, 3, 1, "", "get_submodule"], [38, 3, 1, "", "half"], [38, 3, 1, "", "ipu"], [38, 3, 1, "", "load_state_dict"], [38, 3, 1, "", "modules"], [38, 3, 1, "", "named_buffers"], [38, 3, 1, "", "named_children"], [38, 3, 1, "", "named_modules"], [38, 3, 1, "", "named_parameters"], [38, 3, 1, "", "parameters"], [38, 3, 1, "", "register_backward_hook"], [38, 3, 1, "", "register_buffer"], [38, 3, 1, "", "register_forward_hook"], [38, 3, 1, "", "register_forward_pre_hook"], [38, 3, 1, "", "register_full_backward_hook"], [38, 3, 1, "", "register_full_backward_pre_hook"], [38, 3, 1, "", "register_load_state_dict_post_hook"], [38, 3, 1, "", "register_module"], [38, 3, 1, "", "register_parameter"], [38, 3, 1, "", "register_state_dict_pre_hook"], [38, 3, 1, "", "requires_grad_"], [38, 3, 1, "", "set_extra_state"], [38, 3, 1, "", "share_memory"], [38, 3, 1, "", "state_dict"], [38, 3, 1, "", "to"], [38, 3, 1, "", "to_empty"], [38, 3, 1, "", "train"], [38, 6, 1, "", "training"], [38, 3, 1, "", "type"], [38, 3, 1, "", "xpu"], [38, 3, 1, "", "zero_grad"]], "cleanlab.experimental.span_classification": [[39, 1, 1, "", "display_issues"], [39, 1, 1, "", "find_label_issues"], [39, 1, 1, "", "get_label_quality_scores"]], "cleanlab.filter": [[40, 1, 1, "", "find_label_issues"], [40, 1, 1, "", "find_label_issues_using_argmax_confusion_matrix"], [40, 1, 1, "", "find_predicted_neq_given"], [40, 7, 1, "", "pred_probs_by_class"], [40, 7, 1, "", "prune_count_matrix_cols"]], "cleanlab.internal": [[42, 0, 0, "-", "label_quality_utils"], [43, 0, 0, "-", "latent_algebra"], [44, 0, 0, "-", "multiannotator_utils"], [45, 0, 0, "-", "multilabel_scorer"], [46, 0, 0, "-", "multilabel_utils"], [47, 0, 0, "-", "outlier"], [48, 0, 0, "-", "token_classification_utils"], [49, 0, 0, "-", "util"], [50, 0, 0, "-", "validation"]], "cleanlab.internal.label_quality_utils": [[42, 1, 1, "", "get_normalized_entropy"]], "cleanlab.internal.latent_algebra": [[43, 1, 1, "", "compute_inv_noise_matrix"], [43, 1, 1, "", "compute_noise_matrix_from_inverse"], [43, 1, 1, "", "compute_ps_py_inv_noise_matrix"], [43, 1, 1, "", "compute_py"], [43, 1, 1, "", "compute_py_inv_noise_matrix"], [43, 1, 1, "", "compute_pyx"]], "cleanlab.internal.multiannotator_utils": [[44, 1, 1, "", "assert_valid_inputs_multiannotator"], [44, 1, 1, "", "assert_valid_pred_probs"], [44, 1, 1, "", "check_consensus_label_classes"], [44, 1, 1, "", "compute_soft_cross_entropy"], [44, 1, 1, "", "find_best_temp_scaler"], [44, 1, 1, "", "format_multiannotator_labels"], [44, 1, 1, "", "temp_scale_pred_probs"]], "cleanlab.internal.multilabel_scorer": [[45, 2, 1, "", "Aggregator"], [45, 2, 1, "", "ClassLabelScorer"], [45, 2, 1, "", "MultilabelScorer"], [45, 1, 1, "", "exponential_moving_average"], [45, 1, 1, "", "get_cross_validated_multilabel_pred_probs"], [45, 1, 1, "", "get_label_quality_scores"], [45, 1, 1, "", "multilabel_py"], [45, 1, 1, "", "softmin"]], "cleanlab.internal.multilabel_scorer.Aggregator": [[45, 3, 1, "", "__call__"], [45, 6, 1, "", "possible_methods"]], "cleanlab.internal.multilabel_scorer.ClassLabelScorer": [[45, 6, 1, "", "CONFIDENCE_WEIGHTED_ENTROPY"], [45, 6, 1, "", "NORMALIZED_MARGIN"], [45, 6, 1, "", "SELF_CONFIDENCE"], [45, 3, 1, "", "__call__"], [45, 3, 1, "", "__contains__"], [45, 3, 1, "", "__getitem__"], [45, 3, 1, "", "__iter__"], [45, 3, 1, "", "__len__"], [45, 3, 1, "", "from_str"]], "cleanlab.internal.multilabel_scorer.MultilabelScorer": [[45, 3, 1, "", "__call__"], [45, 3, 1, "", "aggregate"], [45, 3, 1, "", "get_class_label_quality_scores"]], "cleanlab.internal.multilabel_utils": [[46, 1, 1, "", "get_onehot_num_classes"], [46, 1, 1, "", "int2onehot"], [46, 1, 1, "", "onehot2int"], [46, 1, 1, "", "stack_complement"]], "cleanlab.internal.outlier": [[47, 1, 1, "", "transform_distances_to_scores"]], "cleanlab.internal.token_classification_utils": [[48, 1, 1, "", "color_sentence"], [48, 1, 1, "", "filter_sentence"], [48, 1, 1, "", "get_sentence"], [48, 1, 1, "", "mapping"], [48, 1, 1, "", "merge_probs"], [48, 1, 1, "", "process_token"]], "cleanlab.internal.util": [[49, 1, 1, "", "append_extra_datapoint"], [49, 1, 1, "", "clip_noise_rates"], [49, 1, 1, "", "clip_values"], [49, 1, 1, "", "compress_int_array"], [49, 1, 1, "", "confusion_matrix"], [49, 1, 1, "", "csr_vstack"], [49, 1, 1, "", "estimate_pu_f1"], [49, 1, 1, "", "extract_indices_tf"], [49, 1, 1, "", "force_two_dimensions"], [49, 1, 1, "", "format_labels"], [49, 1, 1, "", "get_missing_classes"], [49, 1, 1, "", "get_num_classes"], [49, 1, 1, "", "get_unique_classes"], [49, 1, 1, "", "is_tensorflow_dataset"], [49, 1, 1, "", "is_torch_dataset"], [49, 1, 1, "", "num_unique_classes"], [49, 1, 1, "", "print_inverse_noise_matrix"], [49, 1, 1, "", "print_joint_matrix"], [49, 1, 1, "", "print_noise_matrix"], [49, 1, 1, "", "print_square_matrix"], [49, 1, 1, "", "remove_noise_from_class"], [49, 1, 1, "", "round_preserving_row_totals"], [49, 1, 1, "", "round_preserving_sum"], [49, 1, 1, "", "smart_display_dataframe"], [49, 1, 1, "", "subset_X_y"], [49, 1, 1, "", "subset_data"], [49, 1, 1, "", "subset_labels"], [49, 1, 1, "", "train_val_split"], [49, 1, 1, "", "unshuffle_tensorflow_dataset"], [49, 1, 1, "", "value_counts"], [49, 1, 1, "", "value_counts_fill_missing_classes"]], "cleanlab.internal.validation": [[50, 1, 1, "", "assert_indexing_works"], [50, 1, 1, "", "assert_nonempty_input"], [50, 1, 1, "", "assert_valid_class_labels"], [50, 1, 1, "", "assert_valid_inputs"], [50, 1, 1, "", "labels_to_array"], [50, 1, 1, "", "labels_to_list_multilabel"]], "cleanlab.models": [[53, 0, 0, "-", "keras"]], "cleanlab.models.keras": [[53, 2, 1, "", "KerasWrapperModel"], [53, 2, 1, "", "KerasWrapperSequential"]], "cleanlab.models.keras.KerasWrapperModel": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "set_params"], [53, 3, 1, "", "summary"]], "cleanlab.models.keras.KerasWrapperSequential": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "set_params"], [53, 3, 1, "", "summary"]], "cleanlab.multiannotator": [[54, 1, 1, "", "convert_long_to_wide_dataset"], [54, 1, 1, "", "get_active_learning_scores"], [54, 1, 1, "", "get_active_learning_scores_ensemble"], [54, 1, 1, "", "get_label_quality_multiannotator"], [54, 1, 1, "", "get_label_quality_multiannotator_ensemble"], [54, 1, 1, "", "get_majority_vote_label"]], "cleanlab.multilabel_classification": [[55, 0, 0, "-", "dataset"], [56, 0, 0, "-", "filter"], [58, 0, 0, "-", "rank"]], "cleanlab.multilabel_classification.dataset": [[55, 1, 1, "", "common_multilabel_issues"], [55, 1, 1, "", "multilabel_health_summary"], [55, 1, 1, "", "overall_multilabel_health_score"], [55, 1, 1, "", "rank_classes_by_multilabel_quality"]], "cleanlab.multilabel_classification.filter": [[56, 1, 1, "", "find_label_issues"], [56, 1, 1, "", "find_multilabel_issues_per_class"]], "cleanlab.multilabel_classification.rank": [[58, 1, 1, "", "get_label_quality_scores"], [58, 1, 1, "", "get_label_quality_scores_per_class"]], "cleanlab.object_detection": [[59, 0, 0, "-", "filter"], [61, 0, 0, "-", "rank"], [62, 0, 0, "-", "summary"]], "cleanlab.object_detection.filter": [[59, 1, 1, "", "find_label_issues"]], "cleanlab.object_detection.rank": [[61, 1, 1, "", "compute_badloc_box_scores"], [61, 1, 1, "", "compute_overlooked_box_scores"], [61, 1, 1, "", "compute_swap_box_scores"], [61, 1, 1, "", "get_label_quality_scores"], [61, 1, 1, "", "issues_from_scores"], [61, 1, 1, "", "pool_box_scores_per_image"]], "cleanlab.object_detection.summary": [[62, 1, 1, "", "bounding_box_size_distribution"], [62, 1, 1, "", "calculate_per_class_metrics"], [62, 1, 1, "", "class_label_distribution"], [62, 1, 1, "", "get_average_per_class_confusion_matrix"], [62, 1, 1, "", "get_sorted_bbox_count_idxs"], [62, 1, 1, "", "object_counts_per_image"], [62, 1, 1, "", "plot_class_distribution"], [62, 1, 1, "", "plot_class_size_distributions"], [62, 1, 1, "", "visualize"]], "cleanlab.outlier": [[63, 2, 1, "", "OutOfDistribution"]], "cleanlab.outlier.OutOfDistribution": [[63, 3, 1, "", "fit"], [63, 3, 1, "", "fit_score"], [63, 3, 1, "", "score"]], "cleanlab.rank": [[64, 1, 1, "", "find_top_issues"], [64, 1, 1, "", "get_confidence_weighted_entropy_for_each_label"], [64, 1, 1, "", "get_label_quality_ensemble_scores"], [64, 1, 1, "", "get_label_quality_scores"], [64, 1, 1, "", "get_normalized_margin_for_each_label"], [64, 1, 1, "", "get_self_confidence_for_each_label"], [64, 1, 1, "", "order_label_issues"]], "cleanlab.regression": [[66, 0, 0, "-", "learn"], [67, 0, 0, "-", "rank"]], "cleanlab.regression.learn": [[66, 2, 1, "", "CleanLearning"]], "cleanlab.regression.learn.CleanLearning": [[66, 3, 1, "", "__init_subclass__"], [66, 3, 1, "", "find_label_issues"], [66, 3, 1, "", "fit"], [66, 3, 1, "", "get_aleatoric_uncertainty"], [66, 3, 1, "", "get_epistemic_uncertainty"], [66, 3, 1, "", "get_label_issues"], [66, 3, 1, "", "get_metadata_routing"], [66, 3, 1, "", "get_params"], [66, 3, 1, "", "predict"], [66, 3, 1, "", "save_space"], [66, 3, 1, "", "score"], [66, 3, 1, "", "set_fit_request"], [66, 3, 1, "", "set_params"], [66, 3, 1, "", "set_score_request"]], "cleanlab.regression.rank": [[67, 1, 1, "", "get_label_quality_scores"]], "cleanlab.segmentation": [[68, 0, 0, "-", "filter"], [70, 0, 0, "-", "rank"], [71, 0, 0, "-", "summary"]], "cleanlab.segmentation.filter": [[68, 1, 1, "", "find_label_issues"]], "cleanlab.segmentation.rank": [[70, 1, 1, "", "get_label_quality_scores"], [70, 1, 1, "", "issues_from_scores"]], "cleanlab.segmentation.summary": [[71, 1, 1, "", "common_label_issues"], [71, 1, 1, "", "display_issues"], [71, 1, 1, "", "filter_by_class"]], "cleanlab.token_classification": [[72, 0, 0, "-", "filter"], [74, 0, 0, "-", "rank"], [75, 0, 0, "-", "summary"]], "cleanlab.token_classification.filter": [[72, 1, 1, "", "find_label_issues"]], "cleanlab.token_classification.rank": [[74, 1, 1, "", "get_label_quality_scores"], [74, 1, 1, "", "issues_from_scores"]], "cleanlab.token_classification.summary": [[75, 1, 1, "", "common_label_issues"], [75, 1, 1, "", "display_issues"], [75, 1, 1, "", "filter_by_token"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:attribute", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "data", "Python data"]}, "titleterms": {"benchmark": 0, "noise_gener": 1, "classif": [2, 78, 82, 83, 85, 86, 87, 90, 96, 97, 98], "count": [3, 87], "datalab": [4, 5, 7, 8, 9, 79, 80, 81, 82, 83, 87, 90], "creat": [5, 79, 80, 87, 89], "your": [5, 76, 79, 80, 83, 85, 87], "own": 5, "issu": [5, 7, 8, 19, 28, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 90, 91, 95, 96, 98], "manag": [5, 19], "prerequisit": 5, "implement": 5, "issuemanag": [5, 79], "basic": 5, "check": 5, "intermedi": 5, "advanc": [5, 79], "us": [5, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "gener": 6, "cluster": [6, 85], "id": 6, "guid": [7, 9], "type": [7, 8, 87], "custom": [7, 79], "can": [8, 80, 84, 85, 87, 89], "detect": [8, 80, 82, 83, 85, 87, 91, 92], "estim": [8, 87, 89, 90], "each": 8, "label": [8, 21, 23, 28, 76, 78, 80, 82, 83, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 98], "outlier": [8, 26, 47, 63, 82, 83, 86, 90, 92], "Near": [8, 80, 82, 83, 86], "duplic": [8, 17, 80, 82, 83, 85, 86, 90], "non": [8, 83], "iid": [8, 83], "class": [8, 77, 87, 95], "imbal": [8, 18], "imag": [8, 86, 92], "specif": [8, 19, 95], "underperform": [8, 85], "group": [8, 85], "null": [8, 25], "data": [8, 10, 76, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 98], "valuat": 8, "option": 8, "paramet": [8, 87], "get": [9, 79, 80, 89, 90, 91, 95, 98], "start": [9, 84], "api": 9, "refer": 9, "data_issu": 11, "factori": 12, "intern": [13, 41], "issue_find": 14, "data_valu": 16, "issue_manag": [19, 20], "regist": 19, "unregist": 19, "ml": [19, 85, 87], "task": [19, 31], "multilabel": 22, "noniid": 24, "regress": [27, 65, 66, 67, 85, 94], "prioriti": 28, "order": 28, "find": [28, 76, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "underperforming_group": 29, "report": [30, 86], "dataset": [33, 55, 76, 80, 83, 84, 85, 86, 87, 90, 91, 92, 94, 95, 97, 98], "cifar_cnn": 34, "coteach": 35, "experiment": 36, "label_issues_batch": 37, "mnist_pytorch": 38, "filter": [40, 56, 59, 68, 72, 87], "label_quality_util": 42, "latent_algebra": 43, "multiannotator_util": 44, "multilabel_scor": 45, "multilabel_util": 46, "token_classification_util": 48, "util": 49, "valid": [50, 86, 93], "fasttext": 51, "model": [52, 76, 78, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "kera": 53, "multiannot": [54, 89], "multilabel_classif": 57, "rank": [58, 61, 64, 67, 70, 74, 87], "object_detect": 60, "summari": [62, 71, 75], "learn": [66, 80, 85, 87, 96], "segment": [69, 95], "token_classif": [73, 98], "cleanlab": [76, 78, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "open": [76, 85], "sourc": [76, 85], "document": 76, "quickstart": 76, "1": [76, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "instal": [76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "2": [76, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "common": [76, 77, 98], "3": [76, 78, 79, 80, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "handl": [76, 85], "error": [76, 85, 86, 87, 89, 90, 91, 94, 95, 97, 98], "train": [76, 78, 85, 92, 94, 96, 97], "robust": [76, 87, 94, 96, 97], "noisi": [76, 87, 94, 96, 97], "4": [76, 78, 79, 80, 82, 83, 86, 87, 89, 91, 92, 94, 96, 97], "curat": [76, 84], "fix": [76, 85], "level": [76, 84, 87, 98], "5": [76, 78, 80, 82, 86, 87, 89, 94, 96], "improv": [76, 89], "via": [76, 87, 89], "mani": [76, 87], "other": [76, 89, 91, 94], "techniqu": 76, "contribut": 76, "easi": [76, 82, 83, 86], "mode": [76, 82, 83, 86], "how": [77, 85, 87, 89, 90, 98], "migrat": 77, "version": 77, "0": 77, "from": [77, 79, 80, 87, 94, 96, 97], "pre": [77, 78, 85, 92], "function": [77, 79], "name": 77, "chang": 77, "modul": [77, 87], "new": 77, "remov": 77, "argument": [77, 79], "variabl": 77, "audio": 78, "speechbrain": 78, "depend": [78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98], "import": [78, 79, 80, 84, 86, 87, 89], "them": [78, 84, 87], "load": [78, 79, 80, 82, 83, 94, 96, 97], "featur": [78, 86, 92], "fit": 78, "linear": 78, "comput": [78, 82, 83, 85, 86, 89, 93, 96], "out": [78, 79, 80, 82, 83, 86, 89, 93, 96], "sampl": [78, 79, 80, 82, 83, 86, 89, 93, 96], "predict": [78, 79, 80, 82, 83, 86, 89, 90, 91, 93, 96], "probabl": [78, 79, 80, 82, 83, 86, 89, 93, 96], "workflow": [79, 87], "audit": [79, 80], "requir": [79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98], "classifi": [79, 80], "instanti": 79, "object": [79, 91], "increment": 79, "search": 79, "specifi": [79, 85], "nondefault": 79, "save": 79, "ad": 79, "A": 80, "unifi": 80, "all": [80, 87], "kind": [80, 91], "skip": [80, 84, 87, 89], "detail": [80, 84, 87, 89], "more": [80, 87, 94, 96, 97], "about": 80, "addit": 80, "inform": [80, 86], "tutori": [81, 84, 88], "tabular": [82, 96], "numer": 82, "categor": 82, "column": 82, "process": [82, 92, 94, 96], "select": [82, 96], "construct": 82, "k": [82, 86, 93], "nearest": 82, "neighbour": 82, "graph": 82, "text": [83, 97, 98], "format": [83, 85, 90, 91, 97], "defin": [83, 86, 94, 97], "drift": [83, 90], "fetch": [84, 86], "evalu": 84, "health": [84, 87], "8": [84, 87], "popular": 84, "faq": 85, "what": [85, 87, 93], "do": [85, 87], "i": [85, 87, 93], "infer": 85, "correct": 85, "exampl": [85, 86, 87, 92], "ha": 85, "flag": 85, "should": 85, "v": 85, "test": [85, 87, 92], "big": 85, "limit": 85, "memori": 85, "why": 85, "isn": 85, "t": 85, "cleanlearn": [85, 87], "work": [85, 87, 89, 98], "me": 85, "differ": [85, 91], "clean": [85, 87], "final": 85, "hyperparamet": 85, "tune": 85, "onli": 85, "one": [85, 87, 90, 95], "doe": [85, 89, 98], "take": 85, "so": 85, "long": 85, "slice": 85, "when": [85, 87], "identifi": [85, 91], "run": 85, "licens": 85, "under": 85, "an": 85, "answer": 85, "question": 85, "pytorch": [86, 92], "normal": 86, "fashion": 86, "mnist": 86, "prepar": 86, "fold": [86, 93], "cross": [86, 93], "embed": [86, 92], "7": [86, 87], "view": 86, "most": [86, 98], "like": 86, "sever": 86, "set": [86, 87], "dark": 86, "top": [86, 95], "low": 86, "The": 87, "centric": 87, "ai": 87, "machin": 87, "find_label_issu": 87, "line": 87, "code": 87, "visual": [87, 91, 92, 95], "twenti": 87, "lowest": 87, "qualiti": [87, 89, 90, 91, 95, 98], "see": 87, "now": 87, "let": 87, "": 87, "happen": 87, "we": 87, "merg": 87, "seafoam": 87, "green": 87, "yellow": 87, "too": 87, "you": 87, "re": 87, "6": 87, "One": 87, "score": [87, 89, 90, 91, 95, 98], "rule": 87, "overal": [87, 95], "accur": 87, "thi": 87, "directli": 87, "fulli": 87, "character": 87, "nois": 87, "matrix": [87, 90], "joint": 87, "prior": 87, "true": 87, "distribut": 87, "flip": 87, "rate": 87, "ani": 87, "again": 87, "support": 87, "lot": 87, "method": 87, "filter_bi": 87, "automat": 87, "everi": 87, "uniqu": 87, "num_label_issu": 87, "threshold": 87, "found": 87, "Not": 87, "sure": 87, "ensembl": 87, "multipl": [87, 89], "predictor": 87, "consensu": 89, "annot": 89, "initi": 89, "major": 89, "vote": 89, "better": 89, "statist": 89, "compar": 89, "inspect": 89, "potenti": [89, 94, 97], "retrain": 89, "further": 89, "multi": 90, "beyond": 90, "mislabel": [90, 95, 98], "given": 90, "hot": 90, "binari": 90, "without": 90, "applic": 90, "real": 90, "download": [91, 95, 98], "objectlab": 91, "exploratori": 91, "analysi": 91, "timm": 92, "cifar10": 92, "some": 92, "pred_prob": [92, 95, 98], "wai": 94, "semant": 95, "which": 95, "ar": 95, "commonli": 95, "focus": 95, "scikit": 96, "token": 98, "word": 98, "sentenc": 98, "contain": 98, "particular": 98}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"benchmarking": [[0, "module-cleanlab.benchmarking"]], "noise_generation": [[1, "module-cleanlab.benchmarking.noise_generation"]], "classification": [[2, "module-cleanlab.classification"]], "count": [[3, "module-cleanlab.count"]], "datalab": [[4, "module-cleanlab.datalab.datalab"], [9, "module-cleanlab.datalab"]], "Creating Your Own Issues Manager": [[5, "creating-your-own-issues-manager"]], "Prerequisites": [[5, "prerequisites"]], "Implementing IssueManagers": [[5, "implementing-issuemanagers"]], "Basic Issue Check": [[5, "basic-issue-check"]], "Intermediate Issue Check": [[5, "intermediate-issue-check"]], "Advanced Issue Check": [[5, "advanced-issue-check"]], "Use with Datalab": [[5, "use-with-datalab"]], "Generating Cluster IDs": [[6, "generating-cluster-ids"]], "Datalab guides": [[7, "datalab-guides"]], "Types of issues": [[7, "types-of-issues"]], "Customizing issue types": [[7, "customizing-issue-types"]], "Datalab Issue Types": [[8, "datalab-issue-types"]], "Types of issues Datalab can detect": [[8, "types-of-issues-datalab-can-detect"]], "Estimates for Each Issue Type": [[8, "estimates-for-each-issue-type"]], "Label Issue": [[8, "label-issue"]], "Outlier Issue": [[8, "outlier-issue"]], "(Near) Duplicate Issue": [[8, "near-duplicate-issue"]], "Non-IID Issue": [[8, "non-iid-issue"]], "Class Imbalance Issue": [[8, "class-imbalance-issue"]], "Image-specific Issues": [[8, "image-specific-issues"]], "Underperforming Group Issue": [[8, "underperforming-group-issue"]], "Null Issue": [[8, "null-issue"]], "Data Valuation Issue": [[8, "data-valuation-issue"]], "Optional Issue Parameters": [[8, "optional-issue-parameters"]], "Label Issue Parameters": [[8, "label-issue-parameters"]], "Outlier Issue Parameters": [[8, "outlier-issue-parameters"]], "Duplicate Issue Parameters": [[8, "duplicate-issue-parameters"]], "Non-IID Issue Parameters": [[8, "non-iid-issue-parameters"]], "Imbalance Issue Parameters": [[8, "imbalance-issue-parameters"]], "Underperforming Group Issue Parameters": [[8, "underperforming-group-issue-parameters"]], "Null Issue Parameters": [[8, "null-issue-parameters"]], "Data Valuation Issue Parameters": [[8, "data-valuation-issue-parameters"]], "Image Issue Parameters": [[8, "image-issue-parameters"]], "Getting Started": [[9, "getting-started"]], "Guides": [[9, "guides"]], "API Reference": [[9, "api-reference"]], "data": [[10, "module-cleanlab.datalab.internal.data"]], "data_issues": [[11, "module-cleanlab.datalab.internal.data_issues"]], "factory": [[12, "module-cleanlab.datalab.internal.issue_manager_factory"]], "internal": [[13, "internal"], [41, "internal"]], "issue_finder": [[14, "issue-finder"]], "data_valuation": [[16, "data-valuation"]], "duplicate": [[17, "module-cleanlab.datalab.internal.issue_manager.duplicate"]], "imbalance": [[18, "module-cleanlab.datalab.internal.issue_manager.imbalance"]], "issue_manager": [[19, "issue-manager"], [20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"]], "Registered issue managers": [[19, "registered-issue-managers"]], "Unregistered issue managers": [[19, "unregistered-issue-managers"]], "ML task-specific issue managers": [[19, "ml-task-specific-issue-managers"]], "label": [[21, "module-cleanlab.datalab.internal.issue_manager.label"], [23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"], [28, "module-cleanlab.datalab.internal.issue_manager.regression.label"]], "multilabel": [[22, "multilabel"]], "noniid": [[24, "module-cleanlab.datalab.internal.issue_manager.noniid"]], "null": [[25, "null"]], "outlier": [[26, "module-cleanlab.datalab.internal.issue_manager.outlier"], [47, "module-cleanlab.internal.outlier"], [63, "module-cleanlab.outlier"]], "regression": [[27, "regression"], [65, "regression"]], "Priority Order for finding issues:": [[28, null]], "underperforming_group": [[29, "underperforming-group"]], "report": [[30, "report"]], "task": [[31, "task"]], "dataset": [[33, "module-cleanlab.dataset"], [55, "module-cleanlab.multilabel_classification.dataset"]], "cifar_cnn": [[34, "module-cleanlab.experimental.cifar_cnn"]], "coteaching": [[35, "module-cleanlab.experimental.coteaching"]], "experimental": [[36, "experimental"]], "label_issues_batched": [[37, "module-cleanlab.experimental.label_issues_batched"]], "mnist_pytorch": [[38, "module-cleanlab.experimental.mnist_pytorch"]], "filter": [[40, "module-cleanlab.filter"], [56, "module-cleanlab.multilabel_classification.filter"], [59, "filter"], [68, "filter"], [72, "module-cleanlab.token_classification.filter"]], "label_quality_utils": [[42, "module-cleanlab.internal.label_quality_utils"]], "latent_algebra": [[43, "module-cleanlab.internal.latent_algebra"]], "multiannotator_utils": [[44, "module-cleanlab.internal.multiannotator_utils"]], "multilabel_scorer": [[45, "module-cleanlab.internal.multilabel_scorer"]], "multilabel_utils": [[46, "module-cleanlab.internal.multilabel_utils"]], "token_classification_utils": [[48, "module-cleanlab.internal.token_classification_utils"]], "util": [[49, "module-cleanlab.internal.util"]], "validation": [[50, "module-cleanlab.internal.validation"]], "fasttext": [[51, "fasttext"]], "models": [[52, "models"]], "keras": [[53, "module-cleanlab.models.keras"]], "multiannotator": [[54, "module-cleanlab.multiannotator"]], "multilabel_classification": [[57, "multilabel-classification"]], "rank": [[58, "module-cleanlab.multilabel_classification.rank"], [61, "module-cleanlab.object_detection.rank"], [64, "module-cleanlab.rank"], [70, "module-cleanlab.segmentation.rank"], [74, "module-cleanlab.token_classification.rank"]], "object_detection": [[60, "object-detection"]], "summary": [[62, "summary"], [71, "module-cleanlab.segmentation.summary"], [75, "module-cleanlab.token_classification.summary"]], "regression.learn": [[66, "module-cleanlab.regression.learn"]], "regression.rank": [[67, "module-cleanlab.regression.rank"]], "segmentation": [[69, "segmentation"]], "token_classification": [[73, "token-classification"]], "cleanlab open-source documentation": [[76, "cleanlab-open-source-documentation"]], "Quickstart": [[76, "quickstart"]], "1. Install cleanlab": [[76, "install-cleanlab"]], "2. Find common issues in your data": [[76, "find-common-issues-in-your-data"]], "3. Handle label errors and train robust models with noisy labels": [[76, "handle-label-errors-and-train-robust-models-with-noisy-labels"]], "4. Dataset curation: fix dataset-level issues": [[76, "dataset-curation-fix-dataset-level-issues"]], "5. Improve your data via many other techniques": [[76, "improve-your-data-via-many-other-techniques"]], "Contributing": [[76, "contributing"]], "Easy Mode": [[76, "easy-mode"], [82, "Easy-Mode"], [83, "Easy-Mode"], [86, "Easy-Mode"]], "How to migrate to versions >= 2.0.0 from pre 1.0.1": [[77, "how-to-migrate-to-versions-2-0-0-from-pre-1-0-1"]], "Function and class name changes": [[77, "function-and-class-name-changes"]], "Module name changes": [[77, "module-name-changes"]], "New modules": [[77, "new-modules"]], "Removed modules": [[77, "removed-modules"]], "Common argument and variable name changes": [[77, "common-argument-and-variable-name-changes"]], "Audio Classification with SpeechBrain and Cleanlab": [[78, "Audio-Classification-with-SpeechBrain-and-Cleanlab"]], "1. Install dependencies and import them": [[78, "1.-Install-dependencies-and-import-them"]], "2. Load the data": [[78, "2.-Load-the-data"]], "3. Use pre-trained SpeechBrain model to featurize audio": [[78, "3.-Use-pre-trained-SpeechBrain-model-to-featurize-audio"]], "4. Fit linear model and compute out-of-sample predicted probabilities": [[78, "4.-Fit-linear-model-and-compute-out-of-sample-predicted-probabilities"]], "5. Use cleanlab to find label issues": [[78, "5.-Use-cleanlab-to-find-label-issues"], [82, "5.-Use-cleanlab-to-find-label-issues"]], "Datalab: Advanced workflows to audit your data": [[79, "Datalab:-Advanced-workflows-to-audit-your-data"]], "Install and import required dependencies": [[79, "Install-and-import-required-dependencies"]], "Create and load the data": [[79, "Create-and-load-the-data"]], "Get out-of-sample predicted probabilities from a classifier": [[79, "Get-out-of-sample-predicted-probabilities-from-a-classifier"]], "Instantiate Datalab object": [[79, "Instantiate-Datalab-object"]], "Functionality 1: Incremental issue search": [[79, "Functionality-1:-Incremental-issue-search"]], "Functionality 2: Specifying nondefault arguments": [[79, "Functionality-2:-Specifying-nondefault-arguments"]], "Functionality 3: Save and load Datalab objects": [[79, "Functionality-3:-Save-and-load-Datalab-objects"]], "Functionality 4: Adding a custom IssueManager": [[79, "Functionality-4:-Adding-a-custom-IssueManager"]], "Datalab: A unified audit to detect all kinds of issues in data and labels": [[80, "Datalab:-A-unified-audit-to-detect-all-kinds-of-issues-in-data-and-labels"]], "1. Install and import required dependencies": [[80, "1.-Install-and-import-required-dependencies"], [86, "1.-Install-and-import-required-dependencies"], [89, "1.-Install-and-import-required-dependencies"]], "2. Create and load the data (can skip these details)": [[80, "2.-Create-and-load-the-data-(can-skip-these-details)"]], "3. Get out-of-sample predicted probabilities from a classifier": [[80, "3.-Get-out-of-sample-predicted-probabilities-from-a-classifier"]], "4. Use Datalab to find issues in the dataset": [[80, "4.-Use-Datalab-to-find-issues-in-the-dataset"]], "5. Learn more about the issues in your dataset": [[80, "5.-Learn-more-about-the-issues-in-your-dataset"]], "Get additional information": [[80, "Get-additional-information"]], "Near duplicate issues": [[80, "Near-duplicate-issues"], [86, "Near-duplicate-issues"]], "Datalab Tutorials": [[81, "datalab-tutorials"]], "Detecting Issues in Tabular Data\u00a0(Numeric/Categorical columns) with Datalab": [[82, "Detecting-Issues-in-Tabular-Data\u00a0(Numeric/Categorical-columns)-with-Datalab"]], "1. Install required dependencies": [[82, "1.-Install-required-dependencies"], [83, "1.-Install-required-dependencies"], [94, "1.-Install-required-dependencies"], [96, "1.-Install-required-dependencies"], [97, "1.-Install-required-dependencies"]], "2. Load and process the data": [[82, "2.-Load-and-process-the-data"], [94, "2.-Load-and-process-the-data"], [96, "2.-Load-and-process-the-data"]], "3. Select a classification model and compute out-of-sample predicted probabilities": [[82, "3.-Select-a-classification-model-and-compute-out-of-sample-predicted-probabilities"], [96, "3.-Select-a-classification-model-and-compute-out-of-sample-predicted-probabilities"]], "4. Construct K nearest neighbours graph": [[82, "4.-Construct-K-nearest-neighbours-graph"]], "Label issues": [[82, "Label-issues"], [83, "Label-issues"], [86, "Label-issues"]], "Outlier issues": [[82, "Outlier-issues"], [83, "Outlier-issues"], [86, "Outlier-issues"]], "Near-duplicate issues": [[82, "Near-duplicate-issues"], [83, "Near-duplicate-issues"]], "Detecting Issues in a Text Dataset with Datalab": [[83, "Detecting-Issues-in-a-Text-Dataset-with-Datalab"]], "2. Load and format the text dataset": [[83, "2.-Load-and-format-the-text-dataset"], [97, "2.-Load-and-format-the-text-dataset"]], "3. Define a classification model and compute out-of-sample predicted probabilities": [[83, "3.-Define-a-classification-model-and-compute-out-of-sample-predicted-probabilities"]], "4. Use cleanlab to find issues in your dataset": [[83, "4.-Use-cleanlab-to-find-issues-in-your-dataset"]], "Non-IID issues (data drift)": [[83, "Non-IID-issues-(data-drift)"]], "Find Dataset-level Issues for Dataset Curation": [[84, "Find-Dataset-level-Issues-for-Dataset-Curation"]], "Install dependencies and import them": [[84, "Install-dependencies-and-import-them"], [87, "Install-dependencies-and-import-them"]], "Fetch the data (can skip these details)": [[84, "Fetch-the-data-(can-skip-these-details)"]], "Start of tutorial: Evaluate the health of 8 popular datasets": [[84, "Start-of-tutorial:-Evaluate-the-health-of-8-popular-datasets"]], "FAQ": [[85, "FAQ"]], "What data can cleanlab detect issues in?": [[85, "What-data-can-cleanlab-detect-issues-in?"]], "How do I format classification labels for cleanlab?": [[85, "How-do-I-format-classification-labels-for-cleanlab?"]], "How do I infer the correct labels for examples cleanlab has flagged?": [[85, "How-do-I-infer-the-correct-labels-for-examples-cleanlab-has-flagged?"]], "How should I handle label errors in train vs. test data?": [[85, "How-should-I-handle-label-errors-in-train-vs.-test-data?"]], "How can I find label issues in big datasets with limited memory?": [[85, "How-can-I-find-label-issues-in-big-datasets-with-limited-memory?"]], "Why isn\u2019t CleanLearning working for me?": [[85, "Why-isn\u2019t-CleanLearning-working-for-me?"]], "How can I use different models for data cleaning vs. final training in CleanLearning?": [[85, "How-can-I-use-different-models-for-data-cleaning-vs.-final-training-in-CleanLearning?"]], "How do I hyperparameter tune only the final model trained (and not the one finding label issues) in CleanLearning?": [[85, "How-do-I-hyperparameter-tune-only-the-final-model-trained-(and-not-the-one-finding-label-issues)-in-CleanLearning?"]], "Why does regression.learn.CleanLearning take so long?": [[85, "Why-does-regression.learn.CleanLearning-take-so-long?"]], "How do I specify pre-computed data slices/clusters when detecting the Underperforming Group Issue?": [[85, "How-do-I-specify-pre-computed-data-slices/clusters-when-detecting-the-Underperforming-Group-Issue?"]], "How to handle near-duplicate data identified by cleanlab?": [[85, "How-to-handle-near-duplicate-data-identified-by-cleanlab?"]], "What ML models should I run cleanlab with? How do I fix the issues cleanlab has identified?": [[85, "What-ML-models-should-I-run-cleanlab-with?-How-do-I-fix-the-issues-cleanlab-has-identified?"]], "What license is cleanlab open-sourced under?": [[85, "What-license-is-cleanlab-open-sourced-under?"]], "Can\u2019t find an answer to your question?": [[85, "Can't-find-an-answer-to-your-question?"]], "Image Classification with PyTorch and Cleanlab": [[86, "Image-Classification-with-PyTorch-and-Cleanlab"]], "2. Fetch and normalize the Fashion-MNIST dataset": [[86, "2.-Fetch-and-normalize-the-Fashion-MNIST-dataset"]], "3. Define a classification model": [[86, "3.-Define-a-classification-model"]], "4. Prepare the dataset for K-fold cross-validation": [[86, "4.-Prepare-the-dataset-for-K-fold-cross-validation"]], "5. Compute out-of-sample predicted probabilities and feature embeddings": [[86, "5.-Compute-out-of-sample-predicted-probabilities-and-feature-embeddings"]], "7. Use cleanlab to find issues": [[86, "7.-Use-cleanlab-to-find-issues"]], "View report": [[86, "View-report"]], "View most likely examples with label errors": [[86, "View-most-likely-examples-with-label-errors"]], "View most severe outliers": [[86, "View-most-severe-outliers"]], "View sets of near duplicate images": [[86, "View-sets-of-near-duplicate-images"]], "Dark images": [[86, "Dark-images"]], "View top examples of dark images": [[86, "View-top-examples-of-dark-images"]], "Low information images": [[86, "Low-information-images"]], "The Workflows of Data-centric AI for Classification with Noisy Labels": [[87, "The-Workflows-of-Data-centric-AI-for-Classification-with-Noisy-Labels"]], "Create the data (can skip these details)": [[87, "Create-the-data-(can-skip-these-details)"]], "Workflow 1: Use Datalab to detect many types of issues": [[87, "Workflow-1:-Use-Datalab-to-detect-many-types-of-issues"]], "Workflow 2: Use CleanLearning for more robust Machine Learning": [[87, "Workflow-2:-Use-CleanLearning-for-more-robust-Machine-Learning"]], "Clean Learning = Machine Learning with cleaned data": [[87, "Clean-Learning-=-Machine-Learning-with-cleaned-data"]], "Workflow 3: Use CleanLearning to find_label_issues in one line of code": [[87, "Workflow-3:-Use-CleanLearning-to-find_label_issues-in-one-line-of-code"]], "Visualize the twenty examples with lowest label quality to see if Cleanlab works.": [[87, "Visualize-the-twenty-examples-with-lowest-label-quality-to-see-if-Cleanlab-works."]], "Workflow 4: Use cleanlab to find dataset-level and class-level issues": [[87, "Workflow-4:-Use-cleanlab-to-find-dataset-level-and-class-level-issues"]], "Now, let\u2019s see what happens if we merge classes \u201cseafoam green\u201d and \u201cyellow\u201d": [[87, "Now,-let's-see-what-happens-if-we-merge-classes-%22seafoam-green%22-and-%22yellow%22"]], "Workflow 5: Clean your test set too if you\u2019re doing ML with noisy labels!": [[87, "Workflow-5:-Clean-your-test-set-too-if-you're-doing-ML-with-noisy-labels!"]], "Workflow 6: One score to rule them all \u2013 use cleanlab\u2019s overall dataset health score": [[87, "Workflow-6:-One-score-to-rule-them-all----use-cleanlab's-overall-dataset-health-score"]], "How accurate is this dataset health score?": [[87, "How-accurate-is-this-dataset-health-score?"]], "Workflow(s) 7: Use count, rank, filter modules directly": [[87, "Workflow(s)-7:-Use-count,-rank,-filter-modules-directly"]], "Workflow 7.1 (count): Fully characterize label noise (noise matrix, joint, prior of true labels, \u2026)": [[87, "Workflow-7.1-(count):-Fully-characterize-label-noise-(noise-matrix,-joint,-prior-of-true-labels,-...)"]], "Use cleanlab to estimate and visualize the joint distribution of label noise and noise matrix of label flipping rates:": [[87, "Use-cleanlab-to-estimate-and-visualize-the-joint-distribution-of-label-noise-and-noise-matrix-of-label-flipping-rates:"]], "Workflow 7.2 (filter): Find label issues for any dataset and any model in one line of code": [[87, "Workflow-7.2-(filter):-Find-label-issues-for-any-dataset-and-any-model-in-one-line-of-code"]], "Again, we can visualize the twenty examples with lowest label quality to see if Cleanlab works.": [[87, "Again,-we-can-visualize-the-twenty-examples-with-lowest-label-quality-to-see-if-Cleanlab-works."]], "Workflow 7.2 supports lots of methods to find_label_issues() via the filter_by parameter.": [[87, "Workflow-7.2-supports-lots-of-methods-to-find_label_issues()-via-the-filter_by-parameter."]], "Workflow 7.3 (rank): Automatically rank every example by a unique label quality score. Find errors using cleanlab.count.num_label_issues as a threshold.": [[87, "Workflow-7.3-(rank):-Automatically-rank-every-example-by-a-unique-label-quality-score.-Find-errors-using-cleanlab.count.num_label_issues-as-a-threshold."]], "Again, we can visualize the label issues found to see if Cleanlab works.": [[87, "Again,-we-can-visualize-the-label-issues-found-to-see-if-Cleanlab-works."]], "Not sure when to use Workflow 7.2 or 7.3 to find label issues?": [[87, "Not-sure-when-to-use-Workflow-7.2-or-7.3-to-find-label-issues?"]], "Workflow 8: Ensembling label quality scores from multiple predictors": [[87, "Workflow-8:-Ensembling-label-quality-scores-from-multiple-predictors"]], "Tutorials": [[88, "tutorials"]], "Estimate Consensus and Annotator Quality for Data Labeled by Multiple Annotators": [[89, "Estimate-Consensus-and-Annotator-Quality-for-Data-Labeled-by-Multiple-Annotators"]], "2. Create the data (can skip these details)": [[89, "2.-Create-the-data-(can-skip-these-details)"]], "3. Get initial consensus labels via majority vote and compute out-of-sample predicted probabilities": [[89, "3.-Get-initial-consensus-labels-via-majority-vote-and-compute-out-of-sample-predicted-probabilities"]], "4. Use cleanlab to get better consensus labels and other statistics": [[89, "4.-Use-cleanlab-to-get-better-consensus-labels-and-other-statistics"]], "Comparing improved consensus labels": [[89, "Comparing-improved-consensus-labels"]], "Inspecting consensus quality scores to find potential consensus label errors": [[89, "Inspecting-consensus-quality-scores-to-find-potential-consensus-label-errors"]], "5. Retrain model using improved consensus labels": [[89, "5.-Retrain-model-using-improved-consensus-labels"]], "Further improvements": [[89, "Further-improvements"]], "How does cleanlab.multiannotator work?": [[89, "How-does-cleanlab.multiannotator-work?"]], "Find Label Errors in Multi-Label Classification Datasets": [[90, "Find-Label-Errors-in-Multi-Label-Classification-Datasets"]], "1. Install required dependencies and get dataset": [[90, "1.-Install-required-dependencies-and-get-dataset"]], "2. Format data, labels, and model predictions": [[90, "2.-Format-data,-labels,-and-model-predictions"], [91, "2.-Format-data,-labels,-and-model-predictions"]], "3. Use cleanlab to find label issues": [[90, "3.-Use-cleanlab-to-find-label-issues"], [91, "3.-Use-cleanlab-to-find-label-issues"], [95, "3.-Use-cleanlab-to-find-label-issues"], [98, "3.-Use-cleanlab-to-find-label-issues"]], "Label quality scores": [[90, "Label-quality-scores"]], "Data issues beyond mislabeling (outliers, duplicates, drift, \u2026)": [[90, "Data-issues-beyond-mislabeling-(outliers,-duplicates,-drift,-...)"]], "How to format labels given as a one-hot (multi-hot) binary matrix?": [[90, "How-to-format-labels-given-as-a-one-hot-(multi-hot)-binary-matrix?"]], "Estimate label issues without Datalab": [[90, "Estimate-label-issues-without-Datalab"]], "Application to Real Data": [[90, "Application-to-Real-Data"]], "Finding Label Errors in Object Detection Datasets": [[91, "Finding-Label-Errors-in-Object-Detection-Datasets"]], "1. Install required dependencies and download data": [[91, "1.-Install-required-dependencies-and-download-data"], [95, "1.-Install-required-dependencies-and-download-data"], [98, "1.-Install-required-dependencies-and-download-data"]], "Get label quality scores": [[91, "Get-label-quality-scores"], [95, "Get-label-quality-scores"]], "4. Use ObjectLab to visualize label issues": [[91, "4.-Use-ObjectLab-to-visualize-label-issues"]], "Different kinds of label issues identified by ObjectLab": [[91, "Different-kinds-of-label-issues-identified-by-ObjectLab"]], "Other uses of visualize": [[91, "Other-uses-of-visualize"]], "Exploratory data analysis": [[91, "Exploratory-data-analysis"]], "Detect Outliers with Cleanlab and PyTorch Image Models (timm)": [[92, "Detect-Outliers-with-Cleanlab-and-PyTorch-Image-Models-(timm)"]], "1. Install the required dependencies": [[92, "1.-Install-the-required-dependencies"]], "2. Pre-process the Cifar10 dataset": [[92, "2.-Pre-process-the-Cifar10-dataset"]], "Visualize some of the training and test examples": [[92, "Visualize-some-of-the-training-and-test-examples"]], "3. Use cleanlab and feature embeddings to find outliers in the data": [[92, "3.-Use-cleanlab-and-feature-embeddings-to-find-outliers-in-the-data"]], "4. Use cleanlab and pred_probs to find outliers in the data": [[92, "4.-Use-cleanlab-and-pred_probs-to-find-outliers-in-the-data"]], "Computing Out-of-Sample Predicted Probabilities with Cross-Validation": [[93, "computing-out-of-sample-predicted-probabilities-with-cross-validation"]], "Out-of-sample predicted probabilities?": [[93, "out-of-sample-predicted-probabilities"]], "What is K-fold cross-validation?": [[93, "what-is-k-fold-cross-validation"]], "Find Noisy Labels in Regression Datasets": [[94, "Find-Noisy-Labels-in-Regression-Datasets"]], "3. Define a regression model and use cleanlab to find potential label errors": [[94, "3.-Define-a-regression-model-and-use-cleanlab-to-find-potential-label-errors"]], "4. Train a more robust model from noisy labels": [[94, "4.-Train-a-more-robust-model-from-noisy-labels"], [97, "4.-Train-a-more-robust-model-from-noisy-labels"]], "5. Other ways to find noisy labels in regression datasets": [[94, "5.-Other-ways-to-find-noisy-labels-in-regression-datasets"]], "Find Label Errors in Semantic Segmentation Datasets": [[95, "Find-Label-Errors-in-Semantic-Segmentation-Datasets"]], "2. Get data, labels, and pred_probs": [[95, "2.-Get-data,-labels,-and-pred_probs"], [98, "2.-Get-data,-labels,-and-pred_probs"]], "Visualize top label issues": [[95, "Visualize-top-label-issues"]], "Classes which are commonly mislabeled overall": [[95, "Classes-which-are-commonly-mislabeled-overall"]], "Focusing on one specific class": [[95, "Focusing-on-one-specific-class"]], "Classification with Tabular Data using Scikit-Learn and Cleanlab": [[96, "Classification-with-Tabular-Data-using-Scikit-Learn-and-Cleanlab"]], "4. Use cleanlab to find label issues": [[96, "4.-Use-cleanlab-to-find-label-issues"]], "5. Train a more robust model from noisy labels": [[96, "5.-Train-a-more-robust-model-from-noisy-labels"]], "Text Classification with Noisy Labels": [[97, "Text-Classification-with-Noisy-Labels"]], "3. Define a classification model and use cleanlab to find potential label errors": [[97, "3.-Define-a-classification-model-and-use-cleanlab-to-find-potential-label-errors"]], "Find Label Errors in Token Classification (Text) Datasets": [[98, "Find-Label-Errors-in-Token-Classification-(Text)-Datasets"]], "Most common word-level token mislabels": [[98, "Most-common-word-level-token-mislabels"]], "Find sentences containing a particular mislabeled word": [[98, "Find-sentences-containing-a-particular-mislabeled-word"]], "Sentence label quality score": [[98, "Sentence-label-quality-score"]], "How does cleanlab.token_classification work?": [[98, "How-does-cleanlab.token_classification-work?"]]}, "indexentries": {"cleanlab.benchmarking": [[0, "module-cleanlab.benchmarking"]], "module": [[0, "module-cleanlab.benchmarking"], [1, "module-cleanlab.benchmarking.noise_generation"], [2, "module-cleanlab.classification"], [3, "module-cleanlab.count"], [4, "module-cleanlab.datalab.datalab"], [9, "module-cleanlab.datalab"], [10, "module-cleanlab.datalab.internal.data"], [11, "module-cleanlab.datalab.internal.data_issues"], [12, "module-cleanlab.datalab.internal.issue_manager_factory"], [13, "module-cleanlab.datalab.internal"], [14, "module-cleanlab.datalab.internal.issue_finder"], [16, "module-cleanlab.datalab.internal.issue_manager.data_valuation"], [17, "module-cleanlab.datalab.internal.issue_manager.duplicate"], [18, "module-cleanlab.datalab.internal.issue_manager.imbalance"], [20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"], [21, "module-cleanlab.datalab.internal.issue_manager.label"], [23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"], [24, "module-cleanlab.datalab.internal.issue_manager.noniid"], [25, "module-cleanlab.datalab.internal.issue_manager.null"], [26, "module-cleanlab.datalab.internal.issue_manager.outlier"], [28, "module-cleanlab.datalab.internal.issue_manager.regression.label"], [29, "module-cleanlab.datalab.internal.issue_manager.underperforming_group"], [30, "module-cleanlab.datalab.internal.report"], [31, "module-cleanlab.datalab.internal.task"], [33, "module-cleanlab.dataset"], [34, "module-cleanlab.experimental.cifar_cnn"], [35, "module-cleanlab.experimental.coteaching"], [36, "module-cleanlab.experimental"], [37, "module-cleanlab.experimental.label_issues_batched"], [38, "module-cleanlab.experimental.mnist_pytorch"], [39, "module-cleanlab.experimental.span_classification"], [40, "module-cleanlab.filter"], [41, "module-cleanlab.internal"], [42, "module-cleanlab.internal.label_quality_utils"], [43, "module-cleanlab.internal.latent_algebra"], [44, "module-cleanlab.internal.multiannotator_utils"], [45, "module-cleanlab.internal.multilabel_scorer"], [46, "module-cleanlab.internal.multilabel_utils"], [47, "module-cleanlab.internal.outlier"], [48, "module-cleanlab.internal.token_classification_utils"], [49, "module-cleanlab.internal.util"], [50, "module-cleanlab.internal.validation"], [52, "module-cleanlab.models"], [53, "module-cleanlab.models.keras"], [54, "module-cleanlab.multiannotator"], [55, "module-cleanlab.multilabel_classification.dataset"], [56, "module-cleanlab.multilabel_classification.filter"], [57, "module-cleanlab.multilabel_classification"], [58, "module-cleanlab.multilabel_classification.rank"], [59, "module-cleanlab.object_detection.filter"], [60, "module-cleanlab.object_detection"], [61, "module-cleanlab.object_detection.rank"], [62, "module-cleanlab.object_detection.summary"], [63, "module-cleanlab.outlier"], [64, "module-cleanlab.rank"], [65, "module-cleanlab.regression"], [66, "module-cleanlab.regression.learn"], [67, "module-cleanlab.regression.rank"], [68, "module-cleanlab.segmentation.filter"], [69, "module-cleanlab.segmentation"], [70, "module-cleanlab.segmentation.rank"], [71, "module-cleanlab.segmentation.summary"], [72, "module-cleanlab.token_classification.filter"], [73, "module-cleanlab.token_classification"], [74, "module-cleanlab.token_classification.rank"], [75, "module-cleanlab.token_classification.summary"]], "cleanlab.benchmarking.noise_generation": [[1, "module-cleanlab.benchmarking.noise_generation"]], "generate_n_rand_probabilities_that_sum_to_m() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_n_rand_probabilities_that_sum_to_m"]], "generate_noise_matrix_from_trace() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_noise_matrix_from_trace"]], "generate_noisy_labels() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_noisy_labels"]], "noise_matrix_is_valid() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.noise_matrix_is_valid"]], "randomly_distribute_n_balls_into_k_bins() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.randomly_distribute_N_balls_into_K_bins"]], "cleanlearning (class in cleanlab.classification)": [[2, "cleanlab.classification.CleanLearning"]], "__init_subclass__() (cleanlab.classification.cleanlearning class method)": [[2, "cleanlab.classification.CleanLearning.__init_subclass__"]], "cleanlab.classification": [[2, "module-cleanlab.classification"]], "find_label_issues() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.find_label_issues"]], "fit() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.fit"]], "get_label_issues() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_label_issues"]], "get_metadata_routing() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_metadata_routing"]], "get_params() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_params"]], "predict() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.predict"]], "predict_proba() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.predict_proba"]], "save_space() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.save_space"]], "score() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.score"]], "set_fit_request() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_fit_request"]], "set_params() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_params"]], "set_score_request() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_score_request"]], "calibrate_confident_joint() (in module cleanlab.count)": [[3, "cleanlab.count.calibrate_confident_joint"]], "cleanlab.count": [[3, "module-cleanlab.count"]], "compute_confident_joint() (in module cleanlab.count)": [[3, "cleanlab.count.compute_confident_joint"]], "estimate_confident_joint_and_cv_pred_proba() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_confident_joint_and_cv_pred_proba"]], "estimate_cv_predicted_probabilities() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_cv_predicted_probabilities"]], "estimate_joint() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_joint"]], "estimate_latent() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_latent"]], "estimate_noise_matrices() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_noise_matrices"]], "estimate_py_and_noise_matrices_from_probabilities() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_py_and_noise_matrices_from_probabilities"]], "estimate_py_noise_matrices_and_cv_pred_proba() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_py_noise_matrices_and_cv_pred_proba"]], "get_confident_thresholds() (in module cleanlab.count)": [[3, "cleanlab.count.get_confident_thresholds"]], "num_label_issues() (in module cleanlab.count)": [[3, "cleanlab.count.num_label_issues"]], "datalab (class in cleanlab.datalab.datalab)": [[4, "cleanlab.datalab.datalab.Datalab"]], "class_names (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.class_names"]], "cleanlab.datalab.datalab": [[4, "module-cleanlab.datalab.datalab"]], "find_issues() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.find_issues"]], "get_info() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_info"]], "get_issue_summary() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_issue_summary"]], "get_issues() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_issues"]], "has_labels (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.has_labels"]], "info (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.info"]], "issue_summary (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.issue_summary"]], "issues (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.issues"]], "labels (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.labels"]], "list_default_issue_types() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.list_default_issue_types"]], "list_possible_issue_types() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.list_possible_issue_types"]], "load() (cleanlab.datalab.datalab.datalab static method)": [[4, "cleanlab.datalab.datalab.Datalab.load"]], "report() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.report"]], "save() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.save"]], "cleanlab.datalab": [[9, "module-cleanlab.datalab"]], "data (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.Data"]], "dataformaterror": [[10, "cleanlab.datalab.internal.data.DataFormatError"]], "datasetdicterror": [[10, "cleanlab.datalab.internal.data.DatasetDictError"]], "datasetloaderror": [[10, "cleanlab.datalab.internal.data.DatasetLoadError"]], "label (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.Label"]], "multiclass (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.MultiClass"]], "multilabel (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.MultiLabel"]], "add_note() (cleanlab.datalab.internal.data.dataformaterror method)": [[10, "cleanlab.datalab.internal.data.DataFormatError.add_note"]], "add_note() (cleanlab.datalab.internal.data.datasetdicterror method)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.add_note"]], "add_note() (cleanlab.datalab.internal.data.datasetloaderror method)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.add_note"]], "args (cleanlab.datalab.internal.data.dataformaterror attribute)": [[10, "cleanlab.datalab.internal.data.DataFormatError.args"]], "args (cleanlab.datalab.internal.data.datasetdicterror attribute)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.args"]], "args (cleanlab.datalab.internal.data.datasetloaderror attribute)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.args"]], "class_names (cleanlab.datalab.internal.data.data property)": [[10, "cleanlab.datalab.internal.data.Data.class_names"]], "class_names (cleanlab.datalab.internal.data.label property)": [[10, "cleanlab.datalab.internal.data.Label.class_names"]], "class_names (cleanlab.datalab.internal.data.multiclass property)": [[10, "cleanlab.datalab.internal.data.MultiClass.class_names"]], "class_names (cleanlab.datalab.internal.data.multilabel property)": [[10, "cleanlab.datalab.internal.data.MultiLabel.class_names"]], "cleanlab.datalab.internal.data": [[10, "module-cleanlab.datalab.internal.data"]], "has_labels (cleanlab.datalab.internal.data.data property)": [[10, "cleanlab.datalab.internal.data.Data.has_labels"]], "is_available (cleanlab.datalab.internal.data.label property)": [[10, "cleanlab.datalab.internal.data.Label.is_available"]], "is_available (cleanlab.datalab.internal.data.multiclass property)": [[10, "cleanlab.datalab.internal.data.MultiClass.is_available"]], "is_available (cleanlab.datalab.internal.data.multilabel property)": [[10, "cleanlab.datalab.internal.data.MultiLabel.is_available"]], "with_traceback() (cleanlab.datalab.internal.data.dataformaterror method)": [[10, "cleanlab.datalab.internal.data.DataFormatError.with_traceback"]], "with_traceback() (cleanlab.datalab.internal.data.datasetdicterror method)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.with_traceback"]], "with_traceback() (cleanlab.datalab.internal.data.datasetloaderror method)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.with_traceback"]], "dataissues (class in cleanlab.datalab.internal.data_issues)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues"]], "cleanlab.datalab.internal.data_issues": [[11, "module-cleanlab.datalab.internal.data_issues"]], "collect_issues_from_imagelab() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_issues_from_imagelab"]], "collect_issues_from_issue_manager() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_issues_from_issue_manager"]], "collect_statistics() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_statistics"]], "get_data_statistics() (in module cleanlab.datalab.internal.data_issues)": [[11, "cleanlab.datalab.internal.data_issues.get_data_statistics"]], "get_info() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_info"]], "get_issue_summary() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_issue_summary"]], "get_issues() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_issues"]], "info (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.info"]], "issue_summary (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.issue_summary"]], "issues (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.issues"]], "set_health_score() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.set_health_score"]], "statistics (cleanlab.datalab.internal.data_issues.dataissues property)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.statistics"]], "registry (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.REGISTRY"]], "cleanlab.datalab.internal.issue_manager_factory": [[12, "module-cleanlab.datalab.internal.issue_manager_factory"]], "list_default_issue_types() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.list_default_issue_types"]], "list_possible_issue_types() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.list_possible_issue_types"]], "register() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.register"]], "cleanlab.datalab.internal": [[13, "module-cleanlab.datalab.internal"]], "issuefinder (class in cleanlab.datalab.internal.issue_finder)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder"]], "cleanlab.datalab.internal.issue_finder": [[14, "module-cleanlab.datalab.internal.issue_finder"]], "find_issues() (cleanlab.datalab.internal.issue_finder.issuefinder method)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder.find_issues"]], "get_available_issue_types() (cleanlab.datalab.internal.issue_finder.issuefinder method)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder.get_available_issue_types"]], "default_threshold (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.DEFAULT_THRESHOLD"]], "datavaluationissuemanager (class in cleanlab.datalab.internal.issue_manager.data_valuation)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager"]], "cleanlab.datalab.internal.issue_manager.data_valuation": [[16, "module-cleanlab.datalab.internal.issue_manager.data_valuation"]], "collect_info() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager class method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager class method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.verbosity_levels"]], "nearduplicateissuemanager (class in cleanlab.datalab.internal.issue_manager.duplicate)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager"]], "cleanlab.datalab.internal.issue_manager.duplicate": [[17, "module-cleanlab.datalab.internal.issue_manager.duplicate"]], "collect_info() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager class method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.make_summary"]], "near_duplicate_sets (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.near_duplicate_sets"]], "report() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager class method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.verbosity_levels"]], "classimbalanceissuemanager (class in cleanlab.datalab.internal.issue_manager.imbalance)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager"]], "cleanlab.datalab.internal.issue_manager.imbalance": [[18, "module-cleanlab.datalab.internal.issue_manager.imbalance"]], "collect_info() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager class method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager class method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.verbosity_levels"]], "issuemanager (class in cleanlab.datalab.internal.issue_manager.issue_manager)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager"]], "cleanlab.datalab.internal.issue_manager.issue_manager": [[20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"]], "collect_info() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager class method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager class method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.verbosity_levels"]], "labelissuemanager (class in cleanlab.datalab.internal.issue_manager.label)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.label": [[21, "module-cleanlab.datalab.internal.issue_manager.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.find_issues"]], "get_health_summary() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.get_health_summary"]], "health_summary_parameters (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.health_summary_parameters"]], "info (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager class method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager class method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.verbosity_levels"]], "multilabelissuemanager (class in cleanlab.datalab.internal.issue_manager.multilabel.label)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.multilabel.label": [[23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager class method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager class method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.verbosity_levels"]], "noniidissuemanager (class in cleanlab.datalab.internal.issue_manager.noniid)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager"]], "cleanlab.datalab.internal.issue_manager.noniid": [[24, "module-cleanlab.datalab.internal.issue_manager.noniid"]], "collect_info() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager class method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager class method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.report"]], "simplified_kolmogorov_smirnov_test() (in module cleanlab.datalab.internal.issue_manager.noniid)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.simplified_kolmogorov_smirnov_test"]], "summary (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.verbosity_levels"]], "nullissuemanager (class in cleanlab.datalab.internal.issue_manager.null)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager"]], "cleanlab.datalab.internal.issue_manager.null": [[25, "module-cleanlab.datalab.internal.issue_manager.null"]], "collect_info() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager class method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager class method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.verbosity_levels"]], "default_thresholds (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.DEFAULT_THRESHOLDS"]], "outlierissuemanager (class in cleanlab.datalab.internal.issue_manager.outlier)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager"]], "cleanlab.datalab.internal.issue_manager.outlier": [[26, "module-cleanlab.datalab.internal.issue_manager.outlier"]], "collect_info() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager class method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.make_summary"]], "ood (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.ood"]], "report() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager class method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.verbosity_levels"]], "regressionlabelissuemanager (class in cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.regression.label": [[28, "module-cleanlab.datalab.internal.issue_manager.regression.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.find_issues"]], "find_issues_with_features() (in module cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.find_issues_with_features"]], "find_issues_with_predictions() (in module cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.find_issues_with_predictions"]], "info (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager class method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager class method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.verbosity_levels"]], "no_underperforming_cluster_id (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.NO_UNDERPERFORMING_CLUSTER_ID"]], "outlier_cluster_labels (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.OUTLIER_CLUSTER_LABELS"]], "underperforminggroupissuemanager (class in cleanlab.datalab.internal.issue_manager.underperforming_group)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager"]], "cleanlab.datalab.internal.issue_manager.underperforming_group": [[29, "module-cleanlab.datalab.internal.issue_manager.underperforming_group"]], "collect_info() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.description"]], "filter_cluster_ids() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.filter_cluster_ids"]], "find_issues() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.find_issues"]], "get_worst_cluster() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.get_worst_cluster"]], "info (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager class method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.make_summary"]], "perform_clustering() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.perform_clustering"]], "report() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager class method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.report"]], "set_knn_graph() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.set_knn_graph"]], "summary (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.verbosity_levels"]], "reporter (class in cleanlab.datalab.internal.report)": [[30, "cleanlab.datalab.internal.report.Reporter"]], "cleanlab.datalab.internal.report": [[30, "module-cleanlab.datalab.internal.report"]], "get_report() (cleanlab.datalab.internal.report.reporter method)": [[30, "cleanlab.datalab.internal.report.Reporter.get_report"]], "report() (cleanlab.datalab.internal.report.reporter method)": [[30, "cleanlab.datalab.internal.report.Reporter.report"]], "classification (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.CLASSIFICATION"]], "multilabel (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.MULTILABEL"]], "regression (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.REGRESSION"]], "task (class in cleanlab.datalab.internal.task)": [[31, "cleanlab.datalab.internal.task.Task"]], "__contains__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__contains__"]], "__getitem__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__getitem__"]], "__iter__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__iter__"]], "__len__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__len__"]], "cleanlab.datalab.internal.task": [[31, "module-cleanlab.datalab.internal.task"]], "from_str() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.from_str"]], "is_classification (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_classification"]], "is_multilabel (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_multilabel"]], "is_regression (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_regression"]], "cleanlab.dataset": [[33, "module-cleanlab.dataset"]], "find_overlapping_classes() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.find_overlapping_classes"]], "health_summary() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.health_summary"]], "overall_label_health_score() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.overall_label_health_score"]], "rank_classes_by_label_quality() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.rank_classes_by_label_quality"]], "cnn (class in cleanlab.experimental.cifar_cnn)": [[34, "cleanlab.experimental.cifar_cnn.CNN"]], "t_destination (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.T_destination"]], "__call__() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.__call__"]], "add_module() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.add_module"]], "apply() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.apply"]], "bfloat16() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.bfloat16"]], "buffers() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.buffers"]], "call_bn() (in module cleanlab.experimental.cifar_cnn)": [[34, "cleanlab.experimental.cifar_cnn.call_bn"]], "call_super_init (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.call_super_init"]], "children() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.children"]], "cleanlab.experimental.cifar_cnn": [[34, "module-cleanlab.experimental.cifar_cnn"]], "compile() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.compile"]], "cpu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.cpu"]], "cuda() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.cuda"]], "double() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.double"]], "dump_patches (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.dump_patches"]], "eval() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.eval"]], "extra_repr() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.extra_repr"]], "float() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.float"]], "forward() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.forward"], [34, "id0"]], "get_buffer() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_buffer"]], "get_extra_state() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_extra_state"]], "get_parameter() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_parameter"]], "get_submodule() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_submodule"]], "half() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.half"]], "ipu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.ipu"]], "load_state_dict() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.load_state_dict"]], "modules() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.modules"]], "named_buffers() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_buffers"]], "named_children() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_children"]], "named_modules() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_modules"]], "named_parameters() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_parameters"]], "parameters() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.parameters"]], "register_backward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_backward_hook"]], "register_buffer() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_buffer"]], "register_forward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_forward_hook"]], "register_forward_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_forward_pre_hook"]], "register_full_backward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_full_backward_hook"]], "register_full_backward_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_load_state_dict_post_hook"]], "register_module() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_module"]], "register_parameter() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_parameter"]], "register_state_dict_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_state_dict_pre_hook"]], "requires_grad_() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.requires_grad_"]], "set_extra_state() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.set_extra_state"]], "share_memory() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.share_memory"]], "state_dict() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.state_dict"]], "to() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.to"]], "to_empty() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.to_empty"]], "train() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.train"]], "training (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.training"]], "type() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.type"]], "xpu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.xpu"]], "zero_grad() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.zero_grad"]], "adjust_learning_rate() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.adjust_learning_rate"]], "cleanlab.experimental.coteaching": [[35, "module-cleanlab.experimental.coteaching"]], "evaluate() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.evaluate"]], "forget_rate_scheduler() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.forget_rate_scheduler"]], "initialize_lr_scheduler() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.initialize_lr_scheduler"]], "loss_coteaching() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.loss_coteaching"]], "train() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.train"]], "cleanlab.experimental": [[36, "module-cleanlab.experimental"]], "labelinspector (class in cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector"]], "adj_confident_thresholds_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.adj_confident_thresholds_shared"]], "cleanlab.experimental.label_issues_batched": [[37, "module-cleanlab.experimental.label_issues_batched"]], "find_label_issues_batched() (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.find_label_issues_batched"]], "get_confident_thresholds() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_confident_thresholds"]], "get_label_issues() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_label_issues"]], "get_num_issues() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_num_issues"]], "get_quality_scores() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_quality_scores"]], "labels_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.labels_shared"]], "pred_probs_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.pred_probs_shared"]], "score_label_quality() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.score_label_quality"]], "split_arr() (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.split_arr"]], "update_confident_thresholds() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.update_confident_thresholds"]], "cnn (class in cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.CNN"]], "simplenet (class in cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet"]], "t_destination (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.T_destination"]], "__call__() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.__call__"]], "__init_subclass__() (cleanlab.experimental.mnist_pytorch.cnn class method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.__init_subclass__"]], "add_module() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.add_module"]], "apply() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.apply"]], "batch_size (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.batch_size"]], "bfloat16() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.bfloat16"]], "buffers() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.buffers"]], "call_super_init (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.call_super_init"]], "children() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.children"]], "cleanlab.experimental.mnist_pytorch": [[38, "module-cleanlab.experimental.mnist_pytorch"]], "compile() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.compile"]], "cpu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.cpu"]], "cuda() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.cuda"]], "dataset (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.dataset"]], "double() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.double"]], "dump_patches (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.dump_patches"]], "epochs (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.epochs"]], "eval() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.eval"]], "extra_repr() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.extra_repr"]], "fit() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.fit"], [38, "id0"]], "float() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.float"]], "forward() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.forward"]], "get_buffer() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_buffer"]], "get_extra_state() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_extra_state"]], "get_metadata_routing() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.get_metadata_routing"]], "get_mnist_dataset() (in module cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.get_mnist_dataset"]], "get_parameter() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_parameter"]], "get_params() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.get_params"]], "get_sklearn_digits_dataset() (in module cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.get_sklearn_digits_dataset"]], "get_submodule() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_submodule"]], "half() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.half"]], "ipu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.ipu"]], "load_state_dict() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.load_state_dict"]], "loader (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.loader"]], "log_interval (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.log_interval"]], "lr (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.lr"]], "modules() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.modules"]], "momentum (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.momentum"]], "named_buffers() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_buffers"]], "named_children() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_children"]], "named_modules() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_modules"]], "named_parameters() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_parameters"]], "no_cuda (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.no_cuda"]], "parameters() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.parameters"]], "predict() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.predict"], [38, "id1"]], "predict_proba() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.predict_proba"], [38, "id4"]], "register_backward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_backward_hook"]], "register_buffer() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_buffer"]], "register_forward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_forward_hook"]], "register_forward_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_forward_pre_hook"]], "register_full_backward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_full_backward_hook"]], "register_full_backward_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_load_state_dict_post_hook"]], "register_module() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_module"]], "register_parameter() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_parameter"]], "register_state_dict_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_state_dict_pre_hook"]], "requires_grad_() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.requires_grad_"]], "seed (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.seed"]], "set_extra_state() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.set_extra_state"]], "set_fit_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_fit_request"]], "set_params() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_params"]], "set_predict_proba_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_predict_proba_request"]], "set_predict_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_predict_request"]], "share_memory() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.share_memory"]], "state_dict() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.state_dict"]], "test_batch_size (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.test_batch_size"]], "to() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.to"]], "to_empty() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.to_empty"]], "train() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.train"]], "training (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.training"]], "type() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.type"]], "xpu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.xpu"]], "zero_grad() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.zero_grad"]], "cleanlab.experimental.span_classification": [[39, "module-cleanlab.experimental.span_classification"]], "display_issues() (in module cleanlab.experimental.span_classification)": [[39, "cleanlab.experimental.span_classification.display_issues"]], "find_label_issues() (in module cleanlab.experimental.span_classification)": [[39, "cleanlab.experimental.span_classification.find_label_issues"]], "get_label_quality_scores() (in module cleanlab.experimental.span_classification)": [[39, "cleanlab.experimental.span_classification.get_label_quality_scores"]], "cleanlab.filter": [[40, "module-cleanlab.filter"]], "find_label_issues() (in module cleanlab.filter)": [[40, "cleanlab.filter.find_label_issues"]], "find_label_issues_using_argmax_confusion_matrix() (in module cleanlab.filter)": [[40, "cleanlab.filter.find_label_issues_using_argmax_confusion_matrix"]], "find_predicted_neq_given() (in module cleanlab.filter)": [[40, "cleanlab.filter.find_predicted_neq_given"]], "pred_probs_by_class (in module cleanlab.filter)": [[40, "cleanlab.filter.pred_probs_by_class"]], "prune_count_matrix_cols (in module cleanlab.filter)": [[40, "cleanlab.filter.prune_count_matrix_cols"]], "cleanlab.internal": [[41, "module-cleanlab.internal"]], "cleanlab.internal.label_quality_utils": [[42, "module-cleanlab.internal.label_quality_utils"]], "get_normalized_entropy() (in module cleanlab.internal.label_quality_utils)": [[42, "cleanlab.internal.label_quality_utils.get_normalized_entropy"]], "cleanlab.internal.latent_algebra": [[43, "module-cleanlab.internal.latent_algebra"]], "compute_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_inv_noise_matrix"]], "compute_noise_matrix_from_inverse() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_noise_matrix_from_inverse"]], "compute_ps_py_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_ps_py_inv_noise_matrix"]], "compute_py() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_py"]], "compute_py_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_py_inv_noise_matrix"]], "compute_pyx() (in module cleanlab.internal.latent_algebra)": [[43, "cleanlab.internal.latent_algebra.compute_pyx"]], "assert_valid_inputs_multiannotator() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.assert_valid_inputs_multiannotator"]], "assert_valid_pred_probs() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.assert_valid_pred_probs"]], "check_consensus_label_classes() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.check_consensus_label_classes"]], "cleanlab.internal.multiannotator_utils": [[44, "module-cleanlab.internal.multiannotator_utils"]], "compute_soft_cross_entropy() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.compute_soft_cross_entropy"]], "find_best_temp_scaler() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.find_best_temp_scaler"]], "format_multiannotator_labels() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.format_multiannotator_labels"]], "temp_scale_pred_probs() (in module cleanlab.internal.multiannotator_utils)": [[44, "cleanlab.internal.multiannotator_utils.temp_scale_pred_probs"]], "aggregator (class in cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.Aggregator"]], "confidence_weighted_entropy (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.CONFIDENCE_WEIGHTED_ENTROPY"]], "classlabelscorer (class in cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer"]], "multilabelscorer (class in cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.MultilabelScorer"]], "normalized_margin (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.NORMALIZED_MARGIN"]], "self_confidence (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.SELF_CONFIDENCE"]], "__call__() (cleanlab.internal.multilabel_scorer.aggregator method)": [[45, "cleanlab.internal.multilabel_scorer.Aggregator.__call__"]], "__call__() (cleanlab.internal.multilabel_scorer.classlabelscorer method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__call__"]], "__call__() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[45, "cleanlab.internal.multilabel_scorer.MultilabelScorer.__call__"]], "__contains__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__contains__"]], "__getitem__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__getitem__"]], "__iter__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__iter__"]], "__len__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__len__"]], "aggregate() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[45, "cleanlab.internal.multilabel_scorer.MultilabelScorer.aggregate"]], "cleanlab.internal.multilabel_scorer": [[45, "module-cleanlab.internal.multilabel_scorer"]], "exponential_moving_average() (in module cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.exponential_moving_average"]], "from_str() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[45, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.from_str"]], "get_class_label_quality_scores() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[45, "cleanlab.internal.multilabel_scorer.MultilabelScorer.get_class_label_quality_scores"]], "get_cross_validated_multilabel_pred_probs() (in module cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.get_cross_validated_multilabel_pred_probs"]], "get_label_quality_scores() (in module cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.get_label_quality_scores"]], "multilabel_py() (in module cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.multilabel_py"]], "possible_methods (cleanlab.internal.multilabel_scorer.aggregator attribute)": [[45, "cleanlab.internal.multilabel_scorer.Aggregator.possible_methods"]], "softmin() (in module cleanlab.internal.multilabel_scorer)": [[45, "cleanlab.internal.multilabel_scorer.softmin"]], "cleanlab.internal.multilabel_utils": [[46, "module-cleanlab.internal.multilabel_utils"]], "get_onehot_num_classes() (in module cleanlab.internal.multilabel_utils)": [[46, "cleanlab.internal.multilabel_utils.get_onehot_num_classes"]], "int2onehot() (in module cleanlab.internal.multilabel_utils)": [[46, "cleanlab.internal.multilabel_utils.int2onehot"]], "onehot2int() (in module cleanlab.internal.multilabel_utils)": [[46, "cleanlab.internal.multilabel_utils.onehot2int"]], "stack_complement() (in module cleanlab.internal.multilabel_utils)": [[46, "cleanlab.internal.multilabel_utils.stack_complement"]], "cleanlab.internal.outlier": [[47, "module-cleanlab.internal.outlier"]], "transform_distances_to_scores() (in module cleanlab.internal.outlier)": [[47, "cleanlab.internal.outlier.transform_distances_to_scores"]], "cleanlab.internal.token_classification_utils": [[48, "module-cleanlab.internal.token_classification_utils"]], "color_sentence() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.color_sentence"]], "filter_sentence() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.filter_sentence"]], "get_sentence() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.get_sentence"]], "mapping() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.mapping"]], "merge_probs() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.merge_probs"]], "process_token() (in module cleanlab.internal.token_classification_utils)": [[48, "cleanlab.internal.token_classification_utils.process_token"]], "append_extra_datapoint() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.append_extra_datapoint"]], "cleanlab.internal.util": [[49, "module-cleanlab.internal.util"]], "clip_noise_rates() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.clip_noise_rates"]], "clip_values() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.clip_values"]], "compress_int_array() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.compress_int_array"]], "confusion_matrix() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.confusion_matrix"]], "csr_vstack() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.csr_vstack"]], "estimate_pu_f1() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.estimate_pu_f1"]], "extract_indices_tf() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.extract_indices_tf"]], "force_two_dimensions() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.force_two_dimensions"]], "format_labels() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.format_labels"]], "get_missing_classes() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.get_missing_classes"]], "get_num_classes() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.get_num_classes"]], "get_unique_classes() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.get_unique_classes"]], "is_tensorflow_dataset() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.is_tensorflow_dataset"]], "is_torch_dataset() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.is_torch_dataset"]], "num_unique_classes() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.num_unique_classes"]], "print_inverse_noise_matrix() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.print_inverse_noise_matrix"]], "print_joint_matrix() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.print_joint_matrix"]], "print_noise_matrix() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.print_noise_matrix"]], "print_square_matrix() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.print_square_matrix"]], "remove_noise_from_class() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.remove_noise_from_class"]], "round_preserving_row_totals() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.round_preserving_row_totals"]], "round_preserving_sum() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.round_preserving_sum"]], "smart_display_dataframe() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.smart_display_dataframe"]], "subset_x_y() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.subset_X_y"]], "subset_data() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.subset_data"]], "subset_labels() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.subset_labels"]], "train_val_split() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.train_val_split"]], "unshuffle_tensorflow_dataset() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.unshuffle_tensorflow_dataset"]], "value_counts() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.value_counts"]], "value_counts_fill_missing_classes() (in module cleanlab.internal.util)": [[49, "cleanlab.internal.util.value_counts_fill_missing_classes"]], "assert_indexing_works() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.assert_indexing_works"]], "assert_nonempty_input() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.assert_nonempty_input"]], "assert_valid_class_labels() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.assert_valid_class_labels"]], "assert_valid_inputs() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.assert_valid_inputs"]], "cleanlab.internal.validation": [[50, "module-cleanlab.internal.validation"]], "labels_to_array() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.labels_to_array"]], "labels_to_list_multilabel() (in module cleanlab.internal.validation)": [[50, "cleanlab.internal.validation.labels_to_list_multilabel"]], "cleanlab.models": [[52, "module-cleanlab.models"]], "keraswrappermodel (class in cleanlab.models.keras)": [[53, "cleanlab.models.keras.KerasWrapperModel"]], "keraswrappersequential (class in cleanlab.models.keras)": [[53, "cleanlab.models.keras.KerasWrapperSequential"]], "cleanlab.models.keras": [[53, "module-cleanlab.models.keras"]], "fit() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.fit"]], "fit() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.fit"]], "get_params() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.get_params"]], "get_params() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.get_params"]], "predict() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.predict"]], "predict() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.predict"]], "predict_proba() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.predict_proba"]], "predict_proba() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.predict_proba"]], "set_params() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.set_params"]], "set_params() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.set_params"]], "summary() (cleanlab.models.keras.keraswrappermodel method)": [[53, "cleanlab.models.keras.KerasWrapperModel.summary"]], "summary() (cleanlab.models.keras.keraswrappersequential method)": [[53, "cleanlab.models.keras.KerasWrapperSequential.summary"]], "cleanlab.multiannotator": [[54, "module-cleanlab.multiannotator"]], "convert_long_to_wide_dataset() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.convert_long_to_wide_dataset"]], "get_active_learning_scores() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.get_active_learning_scores"]], "get_active_learning_scores_ensemble() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.get_active_learning_scores_ensemble"]], "get_label_quality_multiannotator() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.get_label_quality_multiannotator"]], "get_label_quality_multiannotator_ensemble() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.get_label_quality_multiannotator_ensemble"]], "get_majority_vote_label() (in module cleanlab.multiannotator)": [[54, "cleanlab.multiannotator.get_majority_vote_label"]], "cleanlab.multilabel_classification.dataset": [[55, "module-cleanlab.multilabel_classification.dataset"]], "common_multilabel_issues() (in module cleanlab.multilabel_classification.dataset)": [[55, "cleanlab.multilabel_classification.dataset.common_multilabel_issues"]], "multilabel_health_summary() (in module cleanlab.multilabel_classification.dataset)": [[55, "cleanlab.multilabel_classification.dataset.multilabel_health_summary"]], "overall_multilabel_health_score() (in module cleanlab.multilabel_classification.dataset)": [[55, "cleanlab.multilabel_classification.dataset.overall_multilabel_health_score"]], "rank_classes_by_multilabel_quality() (in module cleanlab.multilabel_classification.dataset)": [[55, "cleanlab.multilabel_classification.dataset.rank_classes_by_multilabel_quality"]], "cleanlab.multilabel_classification.filter": [[56, "module-cleanlab.multilabel_classification.filter"]], "find_label_issues() (in module cleanlab.multilabel_classification.filter)": [[56, "cleanlab.multilabel_classification.filter.find_label_issues"]], "find_multilabel_issues_per_class() (in module cleanlab.multilabel_classification.filter)": [[56, "cleanlab.multilabel_classification.filter.find_multilabel_issues_per_class"]], "cleanlab.multilabel_classification": [[57, "module-cleanlab.multilabel_classification"]], "cleanlab.multilabel_classification.rank": [[58, "module-cleanlab.multilabel_classification.rank"]], "get_label_quality_scores() (in module cleanlab.multilabel_classification.rank)": [[58, "cleanlab.multilabel_classification.rank.get_label_quality_scores"]], "get_label_quality_scores_per_class() (in module cleanlab.multilabel_classification.rank)": [[58, "cleanlab.multilabel_classification.rank.get_label_quality_scores_per_class"]], "cleanlab.object_detection.filter": [[59, "module-cleanlab.object_detection.filter"]], "find_label_issues() (in module cleanlab.object_detection.filter)": [[59, "cleanlab.object_detection.filter.find_label_issues"]], "cleanlab.object_detection": [[60, "module-cleanlab.object_detection"]], "cleanlab.object_detection.rank": [[61, "module-cleanlab.object_detection.rank"]], "compute_badloc_box_scores() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.compute_badloc_box_scores"]], "compute_overlooked_box_scores() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.compute_overlooked_box_scores"]], "compute_swap_box_scores() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.compute_swap_box_scores"]], "get_label_quality_scores() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.issues_from_scores"]], "pool_box_scores_per_image() (in module cleanlab.object_detection.rank)": [[61, "cleanlab.object_detection.rank.pool_box_scores_per_image"]], "bounding_box_size_distribution() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.bounding_box_size_distribution"]], "calculate_per_class_metrics() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.calculate_per_class_metrics"]], "class_label_distribution() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.class_label_distribution"]], "cleanlab.object_detection.summary": [[62, "module-cleanlab.object_detection.summary"]], "get_average_per_class_confusion_matrix() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.get_average_per_class_confusion_matrix"]], "get_sorted_bbox_count_idxs() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.get_sorted_bbox_count_idxs"]], "object_counts_per_image() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.object_counts_per_image"]], "plot_class_distribution() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.plot_class_distribution"]], "plot_class_size_distributions() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.plot_class_size_distributions"]], "visualize() (in module cleanlab.object_detection.summary)": [[62, "cleanlab.object_detection.summary.visualize"]], "outofdistribution (class in cleanlab.outlier)": [[63, "cleanlab.outlier.OutOfDistribution"]], "cleanlab.outlier": [[63, "module-cleanlab.outlier"]], "fit() (cleanlab.outlier.outofdistribution method)": [[63, "cleanlab.outlier.OutOfDistribution.fit"]], "fit_score() (cleanlab.outlier.outofdistribution method)": [[63, "cleanlab.outlier.OutOfDistribution.fit_score"]], "score() (cleanlab.outlier.outofdistribution method)": [[63, "cleanlab.outlier.OutOfDistribution.score"]], "cleanlab.rank": [[64, "module-cleanlab.rank"]], "find_top_issues() (in module cleanlab.rank)": [[64, "cleanlab.rank.find_top_issues"]], "get_confidence_weighted_entropy_for_each_label() (in module cleanlab.rank)": [[64, "cleanlab.rank.get_confidence_weighted_entropy_for_each_label"]], "get_label_quality_ensemble_scores() (in module cleanlab.rank)": [[64, "cleanlab.rank.get_label_quality_ensemble_scores"]], "get_label_quality_scores() (in module cleanlab.rank)": [[64, "cleanlab.rank.get_label_quality_scores"]], "get_normalized_margin_for_each_label() (in module cleanlab.rank)": [[64, "cleanlab.rank.get_normalized_margin_for_each_label"]], "get_self_confidence_for_each_label() (in module cleanlab.rank)": [[64, "cleanlab.rank.get_self_confidence_for_each_label"]], "order_label_issues() (in module cleanlab.rank)": [[64, "cleanlab.rank.order_label_issues"]], "cleanlab.regression": [[65, "module-cleanlab.regression"]], "cleanlearning (class in cleanlab.regression.learn)": [[66, "cleanlab.regression.learn.CleanLearning"]], "__init_subclass__() (cleanlab.regression.learn.cleanlearning class method)": [[66, "cleanlab.regression.learn.CleanLearning.__init_subclass__"]], "cleanlab.regression.learn": [[66, "module-cleanlab.regression.learn"]], "find_label_issues() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.find_label_issues"]], "fit() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.fit"]], "get_aleatoric_uncertainty() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.get_aleatoric_uncertainty"]], "get_epistemic_uncertainty() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.get_epistemic_uncertainty"]], "get_label_issues() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.get_label_issues"]], "get_metadata_routing() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.get_metadata_routing"]], "get_params() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.get_params"]], "predict() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.predict"]], "save_space() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.save_space"]], "score() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.score"]], "set_fit_request() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.set_fit_request"]], "set_params() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.set_params"]], "set_score_request() (cleanlab.regression.learn.cleanlearning method)": [[66, "cleanlab.regression.learn.CleanLearning.set_score_request"]], "cleanlab.regression.rank": [[67, "module-cleanlab.regression.rank"]], "get_label_quality_scores() (in module cleanlab.regression.rank)": [[67, "cleanlab.regression.rank.get_label_quality_scores"]], "cleanlab.segmentation.filter": [[68, "module-cleanlab.segmentation.filter"]], "find_label_issues() (in module cleanlab.segmentation.filter)": [[68, "cleanlab.segmentation.filter.find_label_issues"]], "cleanlab.segmentation": [[69, "module-cleanlab.segmentation"]], "cleanlab.segmentation.rank": [[70, "module-cleanlab.segmentation.rank"]], "get_label_quality_scores() (in module cleanlab.segmentation.rank)": [[70, "cleanlab.segmentation.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.segmentation.rank)": [[70, "cleanlab.segmentation.rank.issues_from_scores"]], "cleanlab.segmentation.summary": [[71, "module-cleanlab.segmentation.summary"]], "common_label_issues() (in module cleanlab.segmentation.summary)": [[71, "cleanlab.segmentation.summary.common_label_issues"]], "display_issues() (in module cleanlab.segmentation.summary)": [[71, "cleanlab.segmentation.summary.display_issues"]], "filter_by_class() (in module cleanlab.segmentation.summary)": [[71, "cleanlab.segmentation.summary.filter_by_class"]], "cleanlab.token_classification.filter": [[72, "module-cleanlab.token_classification.filter"]], "find_label_issues() (in module cleanlab.token_classification.filter)": [[72, "cleanlab.token_classification.filter.find_label_issues"]], "cleanlab.token_classification": [[73, "module-cleanlab.token_classification"]], "cleanlab.token_classification.rank": [[74, "module-cleanlab.token_classification.rank"]], "get_label_quality_scores() (in module cleanlab.token_classification.rank)": [[74, "cleanlab.token_classification.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.token_classification.rank)": [[74, "cleanlab.token_classification.rank.issues_from_scores"]], "cleanlab.token_classification.summary": [[75, "module-cleanlab.token_classification.summary"]], "common_label_issues() (in module cleanlab.token_classification.summary)": [[75, "cleanlab.token_classification.summary.common_label_issues"]], "display_issues() (in module cleanlab.token_classification.summary)": [[75, "cleanlab.token_classification.summary.display_issues"]], "filter_by_token() (in module cleanlab.token_classification.summary)": [[75, "cleanlab.token_classification.summary.filter_by_token"]]}})