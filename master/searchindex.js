Search.setIndex({"docnames": ["cleanlab/benchmarking/index", "cleanlab/benchmarking/noise_generation", "cleanlab/classification", "cleanlab/count", "cleanlab/datalab/datalab", "cleanlab/datalab/guide/custom_issue_manager", "cleanlab/datalab/guide/generating_cluster_ids", "cleanlab/datalab/guide/index", "cleanlab/datalab/guide/issue_type_description", "cleanlab/datalab/index", "cleanlab/datalab/internal/data", "cleanlab/datalab/internal/data_issues", "cleanlab/datalab/internal/factory", "cleanlab/datalab/internal/index", "cleanlab/datalab/internal/issue_finder", "cleanlab/datalab/internal/issue_manager/_notices/not_registered", "cleanlab/datalab/internal/issue_manager/data_valuation", "cleanlab/datalab/internal/issue_manager/duplicate", "cleanlab/datalab/internal/issue_manager/imbalance", "cleanlab/datalab/internal/issue_manager/index", "cleanlab/datalab/internal/issue_manager/issue_manager", "cleanlab/datalab/internal/issue_manager/label", "cleanlab/datalab/internal/issue_manager/multilabel/index", "cleanlab/datalab/internal/issue_manager/multilabel/label", "cleanlab/datalab/internal/issue_manager/noniid", "cleanlab/datalab/internal/issue_manager/null", "cleanlab/datalab/internal/issue_manager/outlier", "cleanlab/datalab/internal/issue_manager/regression/index", "cleanlab/datalab/internal/issue_manager/regression/label", "cleanlab/datalab/internal/issue_manager/underperforming_group", "cleanlab/datalab/internal/report", "cleanlab/datalab/internal/task", "cleanlab/datalab/optional_dependencies", "cleanlab/dataset", "cleanlab/experimental/cifar_cnn", "cleanlab/experimental/coteaching", "cleanlab/experimental/index", "cleanlab/experimental/label_issues_batched", "cleanlab/experimental/mnist_pytorch", "cleanlab/filter", "cleanlab/internal/index", "cleanlab/internal/label_quality_utils", "cleanlab/internal/latent_algebra", "cleanlab/internal/multiannotator_utils", "cleanlab/internal/multilabel_scorer", "cleanlab/internal/multilabel_utils", "cleanlab/internal/outlier", "cleanlab/internal/token_classification_utils", "cleanlab/internal/util", "cleanlab/internal/validation", "cleanlab/models/fasttext", "cleanlab/models/index", "cleanlab/models/keras", "cleanlab/multiannotator", "cleanlab/multilabel_classification/dataset", "cleanlab/multilabel_classification/filter", "cleanlab/multilabel_classification/index", "cleanlab/multilabel_classification/rank", "cleanlab/object_detection/filter", "cleanlab/object_detection/index", "cleanlab/object_detection/rank", "cleanlab/object_detection/summary", "cleanlab/outlier", "cleanlab/rank", "cleanlab/regression/index", "cleanlab/regression/learn", "cleanlab/regression/rank", "cleanlab/segmentation/filter", "cleanlab/segmentation/index", "cleanlab/segmentation/rank", "cleanlab/segmentation/summary", "cleanlab/token_classification/filter", "cleanlab/token_classification/index", "cleanlab/token_classification/rank", "cleanlab/token_classification/summary", "index", "migrating/migrate_v2", "tutorials/audio", "tutorials/datalab/datalab_advanced", "tutorials/datalab/datalab_quickstart", "tutorials/datalab/index", "tutorials/datalab/tabular", "tutorials/datalab/text", "tutorials/dataset_health", "tutorials/faq", "tutorials/image", "tutorials/indepth_overview", "tutorials/index", "tutorials/multiannotator", "tutorials/multilabel_classification", "tutorials/object_detection", "tutorials/outliers", "tutorials/pred_probs_cross_val", "tutorials/regression", "tutorials/segmentation", "tutorials/tabular", "tutorials/text", "tutorials/token_classification"], "filenames": ["cleanlab/benchmarking/index.rst", "cleanlab/benchmarking/noise_generation.rst", "cleanlab/classification.rst", "cleanlab/count.rst", "cleanlab/datalab/datalab.rst", "cleanlab/datalab/guide/custom_issue_manager.rst", "cleanlab/datalab/guide/generating_cluster_ids.rst", "cleanlab/datalab/guide/index.rst", "cleanlab/datalab/guide/issue_type_description.rst", "cleanlab/datalab/index.rst", "cleanlab/datalab/internal/data.rst", "cleanlab/datalab/internal/data_issues.rst", "cleanlab/datalab/internal/factory.rst", "cleanlab/datalab/internal/index.rst", "cleanlab/datalab/internal/issue_finder.rst", "cleanlab/datalab/internal/issue_manager/_notices/not_registered.rst", "cleanlab/datalab/internal/issue_manager/data_valuation.rst", "cleanlab/datalab/internal/issue_manager/duplicate.rst", "cleanlab/datalab/internal/issue_manager/imbalance.rst", "cleanlab/datalab/internal/issue_manager/index.rst", "cleanlab/datalab/internal/issue_manager/issue_manager.rst", "cleanlab/datalab/internal/issue_manager/label.rst", "cleanlab/datalab/internal/issue_manager/multilabel/index.rst", "cleanlab/datalab/internal/issue_manager/multilabel/label.rst", "cleanlab/datalab/internal/issue_manager/noniid.rst", "cleanlab/datalab/internal/issue_manager/null.rst", "cleanlab/datalab/internal/issue_manager/outlier.rst", "cleanlab/datalab/internal/issue_manager/regression/index.rst", "cleanlab/datalab/internal/issue_manager/regression/label.rst", "cleanlab/datalab/internal/issue_manager/underperforming_group.rst", "cleanlab/datalab/internal/report.rst", "cleanlab/datalab/internal/task.rst", "cleanlab/datalab/optional_dependencies.rst", "cleanlab/dataset.rst", "cleanlab/experimental/cifar_cnn.rst", "cleanlab/experimental/coteaching.rst", "cleanlab/experimental/index.rst", "cleanlab/experimental/label_issues_batched.rst", "cleanlab/experimental/mnist_pytorch.rst", "cleanlab/filter.rst", "cleanlab/internal/index.rst", "cleanlab/internal/label_quality_utils.rst", "cleanlab/internal/latent_algebra.rst", "cleanlab/internal/multiannotator_utils.rst", "cleanlab/internal/multilabel_scorer.rst", "cleanlab/internal/multilabel_utils.rst", "cleanlab/internal/outlier.rst", "cleanlab/internal/token_classification_utils.rst", "cleanlab/internal/util.rst", "cleanlab/internal/validation.rst", "cleanlab/models/fasttext.rst", "cleanlab/models/index.rst", "cleanlab/models/keras.rst", "cleanlab/multiannotator.rst", "cleanlab/multilabel_classification/dataset.rst", "cleanlab/multilabel_classification/filter.rst", "cleanlab/multilabel_classification/index.rst", "cleanlab/multilabel_classification/rank.rst", "cleanlab/object_detection/filter.rst", "cleanlab/object_detection/index.rst", "cleanlab/object_detection/rank.rst", "cleanlab/object_detection/summary.rst", "cleanlab/outlier.rst", "cleanlab/rank.rst", "cleanlab/regression/index.rst", "cleanlab/regression/learn.rst", "cleanlab/regression/rank.rst", "cleanlab/segmentation/filter.rst", "cleanlab/segmentation/index.rst", "cleanlab/segmentation/rank.rst", "cleanlab/segmentation/summary.rst", "cleanlab/token_classification/filter.rst", "cleanlab/token_classification/index.rst", "cleanlab/token_classification/rank.rst", "cleanlab/token_classification/summary.rst", "index.rst", "migrating/migrate_v2.rst", "tutorials/audio.ipynb", "tutorials/datalab/datalab_advanced.ipynb", "tutorials/datalab/datalab_quickstart.ipynb", "tutorials/datalab/index.rst", "tutorials/datalab/tabular.ipynb", "tutorials/datalab/text.ipynb", "tutorials/dataset_health.ipynb", "tutorials/faq.ipynb", "tutorials/image.ipynb", "tutorials/indepth_overview.ipynb", "tutorials/index.rst", "tutorials/multiannotator.ipynb", "tutorials/multilabel_classification.ipynb", "tutorials/object_detection.ipynb", "tutorials/outliers.ipynb", "tutorials/pred_probs_cross_val.rst", "tutorials/regression.ipynb", "tutorials/segmentation.ipynb", "tutorials/tabular.ipynb", "tutorials/text.ipynb", "tutorials/token_classification.ipynb"], "titles": ["benchmarking", "noise_generation", "classification", "count", "datalab", "Creating Your Own Issues Manager", "Generating Cluster IDs", "Datalab guides", "Datalab Issue Types", "datalab", "data", "data_issues", "factory", "internal", "issue_finder", "&lt;no title&gt;", "data_valuation", "duplicate", "imbalance", "issue_manager", "issue_manager", "label", "multilabel", "label", "noniid", "null", "outlier", "regression", "label", "underperforming_group", "report", "task", "&lt;no title&gt;", "dataset", "cifar_cnn", "coteaching", "experimental", "label_issues_batched", "mnist_pytorch", "filter", "internal", "label_quality_utils", "latent_algebra", "multiannotator_utils", "multilabel_scorer", "multilabel_utils", "outlier", "token_classification_utils", "util", "validation", "fasttext", "models", "keras", "multiannotator", "dataset", "filter", "multilabel_classification", "rank", "filter", "object_detection", "rank", "summary", "outlier", "rank", "regression", "regression.learn", "regression.rank", "filter", "segmentation", "rank", "summary", "filter", "token_classification", "rank", "summary", "cleanlab open-source documentation", "How to migrate to versions &gt;= 2.0.0 from pre 1.0.1", "Audio Classification with SpeechBrain and Cleanlab", "Datalab: Advanced workflows to audit your data", "Datalab: A unified audit to detect all kinds of issues in data and labels", "Datalab Tutorials", "Detecting Issues in Tabular Data\u00a0(Numeric/Categorical columns) with Datalab", "Detecting Issues in a Text Dataset with Datalab", "Find Dataset-level Issues for Dataset Curation", "FAQ", "Image Classification with PyTorch and Cleanlab", "The Workflows of Data-centric AI for Classification with Noisy Labels", "Tutorials", "Estimate Consensus and Annotator Quality for Data Labeled by Multiple Annotators", "Find Label Errors in Multi-Label Classification Datasets", "Finding Label Errors in Object Detection Datasets", "Detect Outliers with Cleanlab and PyTorch Image Models (timm)", "Computing Out-of-Sample Predicted Probabilities with Cross-Validation", "Find Noisy Labels in Regression Datasets", "Find Label Errors in Semantic Segmentation Datasets", "Classification with Tabular Data using Scikit-Learn and Cleanlab", "Text Classification with Noisy Labels", "Find Label Errors in Token Classification (Text) Datasets"], "terms": {"noise_gener": [0, 76, 78, 79, 86, 88, 89], "noise_matrix_is_valid": [0, 1], "generate_noisy_label": [0, 1, 78, 79, 86, 88, 89], "generate_noise_matrix_from_trac": [0, 1, 78, 79, 86, 88, 89], "generate_n_rand_probabilities_that_sum_to_m": [0, 1], "randomly_distribute_n_balls_into_k_bin": [0, 1], "helper": [1, 14, 37, 41, 43, 44, 45, 46, 47, 48, 60, 83, 85, 97], "method": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "ar": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 27, 28, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "us": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 83, 87, 92], "benchmark": [1, 34, 75, 76, 78, 79, 86, 88, 89], "cleanlab": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 79, 83, 87, 92], "": [1, 2, 3, 8, 16, 33, 34, 38, 41, 44, 46, 48, 53, 54, 58, 60, 61, 62, 63, 65, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "core": [1, 4, 37, 39, 67, 69], "algorithm": [1, 2, 6, 8, 29, 35, 48, 53, 62, 71, 73, 75, 84, 86, 88, 97], "These": [1, 2, 3, 6, 8, 19, 34, 36, 38, 39, 40, 51, 53, 54, 57, 61, 62, 66, 70, 71, 73, 74, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "introduc": [1, 77, 84, 86], "synthet": [1, 88, 89, 94], "nois": [1, 2, 3, 33, 39, 42, 48, 54, 78, 79, 83, 88, 93], "label": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 18, 19, 20, 22, 27, 29, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 83, 87, 91, 92], "classif": [1, 3, 4, 5, 8, 10, 12, 14, 31, 33, 37, 39, 42, 44, 45, 48, 53, 54, 55, 56, 57, 62, 63, 71, 72, 73, 74, 75, 76, 78, 79, 87, 88, 91, 92, 93, 94], "dataset": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 28, 29, 36, 37, 38, 39, 42, 44, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 87, 88, 92, 95], "specif": [1, 3, 4, 7, 12, 13, 14, 25, 30, 36, 51, 55, 58, 61, 70, 74, 81, 82, 85, 86, 90, 97], "thi": [1, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "modul": [1, 3, 11, 12, 13, 14, 19, 22, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 44, 46, 48, 51, 53, 58, 61, 62, 63, 75, 84, 85, 89], "provid": [1, 2, 3, 4, 5, 6, 8, 12, 14, 16, 21, 28, 31, 33, 34, 35, 37, 38, 39, 42, 48, 52, 53, 54, 55, 60, 61, 62, 63, 65, 67, 69, 70, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97], "gener": [1, 2, 3, 5, 8, 16, 21, 23, 30, 33, 44, 48, 49, 62, 63, 65, 70, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 91, 92, 94, 96, 97], "valid": [1, 2, 3, 4, 8, 10, 31, 33, 39, 40, 42, 43, 44, 46, 48, 53, 55, 58, 61, 63, 65, 66, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 95, 96, 97], "matric": [1, 3, 42, 84], "which": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 20, 24, 30, 33, 34, 38, 39, 42, 44, 47, 48, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "learn": [1, 2, 3, 4, 8, 12, 14, 20, 28, 30, 35, 36, 37, 38, 39, 41, 43, 48, 51, 53, 55, 62, 64, 66, 69, 73, 75, 77, 78, 81, 82, 83, 85, 87, 88, 89, 93, 96], "i": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "possibl": [1, 2, 3, 5, 8, 33, 34, 38, 39, 41, 42, 44, 55, 56, 57, 58, 60, 61, 62, 63, 65, 71, 73, 74, 79, 84, 86, 88, 89, 90, 93, 94, 97], "noisi": [1, 2, 3, 8, 33, 35, 38, 39, 42, 48, 54, 55, 57, 63, 65, 66, 67, 69, 70, 76, 78, 79, 81, 82, 84, 87, 88], "given": [1, 2, 3, 8, 12, 28, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 47, 48, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97], "matrix": [1, 2, 3, 4, 8, 14, 16, 29, 33, 39, 41, 42, 45, 48, 49, 55, 58, 60, 61, 62, 63, 81, 90, 91], "trace": [1, 78, 79, 86, 88, 89], "valu": [1, 2, 3, 4, 8, 10, 11, 14, 16, 20, 24, 25, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 46, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97], "more": [1, 2, 3, 4, 5, 8, 11, 12, 14, 16, 24, 33, 34, 37, 38, 41, 44, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 69, 70, 71, 73, 75, 77, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 97], "function": [1, 2, 3, 4, 5, 11, 12, 14, 21, 24, 28, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77, 79, 83, 84, 86, 88, 89, 90, 94, 95, 96, 97], "noise_matrix": [1, 2, 3, 8, 42, 48, 78, 79, 86, 88, 89], "py": [1, 3, 30, 34, 35, 39, 42, 44, 77, 78, 79, 82, 84, 86, 88, 89, 96], "verbos": [1, 2, 4, 5, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 37, 39, 53, 54, 55, 60, 62, 63, 65, 67, 69, 70, 74, 78, 86, 88], "fals": [1, 2, 3, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 43, 47, 48, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 77, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91, 93, 94, 96], "sourc": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74], "prior": [1, 2, 3, 33, 39, 42, 44], "repres": [1, 2, 3, 5, 8, 10, 14, 16, 24, 31, 33, 37, 39, 42, 45, 46, 48, 53, 54, 55, 58, 60, 61, 62, 63, 65, 67, 69, 70, 74, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97], "p": [1, 2, 3, 8, 33, 39, 41, 42, 48, 53, 61, 62, 63, 67, 81, 82, 86, 88, 97], "true_label": [1, 2, 3, 33, 42, 48, 86, 88], "k": [1, 2, 3, 4, 6, 8, 10, 14, 16, 17, 21, 24, 26, 29, 33, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 77, 78, 79, 84, 86, 88, 89, 90, 91, 94, 95, 97], "check": [1, 2, 4, 7, 8, 10, 14, 25, 31, 34, 37, 38, 43, 49, 52, 58, 61, 65, 75, 77, 78, 79, 84, 85, 86, 88, 89, 93, 95, 96], "learnabl": 1, "mean": [1, 2, 5, 6, 10, 11, 20, 24, 35, 38, 42, 44, 46, 60, 65, 79, 82, 84, 86, 88, 89, 90, 91, 93, 96], "achiev": [1, 2, 34, 35, 38, 65, 84, 88, 97], "better": [1, 4, 39, 53, 55, 63, 65, 66, 75, 77, 79, 81, 82, 84, 86, 89, 90, 91, 96, 97], "than": [1, 2, 3, 5, 8, 24, 26, 29, 33, 39, 48, 52, 53, 58, 60, 62, 63, 65, 69, 73, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 97], "random": [1, 2, 3, 5, 8, 16, 29, 37, 44, 53, 63, 65, 77, 78, 79, 81, 84, 85, 86, 88, 89, 91, 95], "perform": [1, 2, 5, 8, 24, 26, 29, 34, 38, 44, 61, 65, 75, 78, 84, 86, 88, 89, 92, 93, 95, 96], "averag": [1, 3, 8, 20, 26, 33, 34, 38, 44, 46, 53, 54, 61, 62, 63, 84, 88, 91], "amount": [1, 3, 85], "paramet": [1, 2, 3, 4, 7, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77, 79, 82, 85, 95, 96], "np": [1, 2, 3, 4, 5, 14, 16, 29, 33, 35, 37, 39, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 73, 74, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "ndarrai": [1, 2, 3, 4, 14, 21, 23, 24, 28, 29, 33, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 73, 97], "an": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "arrai": [1, 2, 3, 4, 5, 8, 10, 14, 16, 24, 33, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77, 78, 79, 82, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "shape": [1, 2, 3, 4, 14, 16, 33, 35, 37, 39, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77, 83, 84, 86, 89, 90, 91, 94, 97], "condit": [1, 2, 3, 42, 47, 48, 63, 85, 86, 97], "probabl": [1, 2, 3, 4, 6, 8, 14, 21, 23, 26, 33, 37, 38, 39, 41, 42, 44, 45, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 76, 83, 84, 86, 87, 89, 90, 91, 94, 97], "k_": [1, 2, 3, 42, 48], "k_y": [1, 2, 3, 42, 48], "contain": [1, 2, 3, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96], "fraction": [1, 2, 3, 8, 18, 35, 42, 48, 53, 65, 81, 84], "exampl": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 88, 89, 90, 92, 93, 94, 95, 96, 97], "everi": [1, 2, 3, 4, 14, 34, 38, 39, 42, 47, 48, 55, 63, 65, 66, 77, 78, 79, 81, 82, 84, 85, 88, 90, 92, 94, 95, 97], "class": [1, 2, 3, 4, 5, 7, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97], "other": [1, 2, 3, 4, 8, 14, 20, 25, 33, 34, 36, 37, 38, 39, 42, 45, 48, 49, 51, 53, 54, 57, 61, 62, 63, 65, 70, 77, 78, 79, 81, 82, 84, 85, 86, 89, 91, 94, 97], "assum": [1, 2, 3, 10, 39, 42, 47, 48, 63, 67, 70, 84, 89, 91, 93, 94, 97], "column": [1, 2, 3, 4, 8, 10, 11, 28, 33, 37, 39, 42, 44, 45, 47, 48, 53, 54, 55, 57, 58, 61, 62, 63, 65, 70, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97], "sum": [1, 2, 3, 24, 29, 33, 42, 44, 48, 54, 55, 57, 60, 65, 78, 79, 84, 85, 86, 88, 89, 94, 97], "1": [1, 2, 3, 4, 5, 8, 10, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 83, 84, 92], "each": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 14, 18, 20, 21, 23, 24, 29, 30, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "true": [1, 2, 3, 4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 42, 44, 47, 48, 49, 52, 53, 54, 55, 58, 60, 61, 62, 63, 65, 67, 69, 70, 74, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "return": [1, 2, 3, 4, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97], "type": [1, 2, 3, 4, 5, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 93, 94, 95, 97], "bool": [1, 2, 3, 4, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 44, 47, 48, 53, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 74], "is_valid": 1, "whether": [1, 3, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 34, 37, 38, 39, 48, 53, 54, 55, 57, 58, 74, 77, 79, 81, 82, 83, 84, 85, 86, 93, 96, 97], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 20, 21, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 42, 44, 45, 46, 47, 48, 53, 55, 57, 60, 61, 62, 63, 65, 66, 71, 73, 74, 75, 77, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 97], "perfect": [1, 2, 33, 65, 86, 90], "exactli": [1, 3, 8, 33, 34, 38, 39, 56, 62, 78, 79, 81, 82, 85, 86], "yield": [1, 34, 38], "between": [1, 4, 8, 13, 14, 19, 20, 22, 24, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 51, 53, 54, 57, 60, 62, 63, 65, 66, 69, 73, 74, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97], "below": [1, 3, 4, 8, 33, 34, 37, 38, 39, 41, 44, 53, 54, 55, 60, 61, 69, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "we": [1, 2, 3, 4, 5, 8, 11, 20, 34, 37, 38, 39, 44, 48, 49, 53, 60, 61, 63, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "loop": [1, 3, 42, 48, 85, 90], "implement": [1, 2, 3, 4, 7, 12, 20, 34, 35, 37, 38, 42, 48, 65, 75, 77, 78, 81, 91, 92, 95], "what": [1, 4, 7, 8, 14, 30, 33, 35, 37, 39, 53, 54, 58, 60, 77, 78, 79, 81, 82, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "doe": [1, 2, 3, 5, 8, 37, 38, 39, 44, 49, 60, 61, 65, 67, 69, 73, 77, 78, 79, 81, 82, 85, 89, 93, 94, 96], "do": [1, 2, 4, 8, 33, 37, 38, 48, 49, 62, 63, 67, 77, 78, 79, 81, 82, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "fast": 1, "explain": [1, 8], "python": [1, 2, 38, 52, 65, 77, 78, 79, 82, 83, 91, 96], "pseudocod": [1, 92], "happen": [1, 8, 39, 55, 82, 88, 94], "n": [1, 2, 3, 4, 5, 33, 34, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 73, 77, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97], "without": [1, 2, 4, 8, 10, 12, 18, 34, 38, 57, 65, 75, 77, 82, 86, 90, 91, 96], "ani": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 39, 41, 43, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 63, 65, 67, 69, 70, 75, 77, 78, 79, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "distinct": [1, 16, 48, 97], "natur": [1, 8, 88, 91], "number": [1, 2, 3, 4, 5, 6, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 94, 97], "0": [1, 2, 3, 4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "count_joint": 1, "len": [1, 2, 3, 5, 33, 37, 42, 47, 48, 49, 62, 63, 65, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97], "y": [1, 2, 3, 4, 6, 16, 28, 29, 38, 42, 44, 48, 49, 52, 61, 65, 66, 77, 78, 79, 81, 84, 86, 88, 89, 91, 93, 96], "round": [1, 37, 39, 48, 65, 84, 93], "astyp": [1, 88], "int": [1, 2, 3, 4, 5, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 37, 38, 39, 44, 45, 46, 47, 48, 49, 54, 55, 57, 61, 62, 63, 65, 67, 69, 70, 71, 74, 77, 78, 85, 90, 91], "rang": [1, 3, 4, 5, 10, 42, 44, 46, 48, 61, 65, 66, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 97], "idx_flip": 1, "where": [1, 2, 3, 4, 5, 8, 10, 11, 14, 20, 33, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97], "pragma": 1, "cover": [1, 3, 76, 83], "choic": [1, 6, 39, 46, 84, 85, 89, 91], "replac": [1, 47, 52, 63, 78, 79, 82, 83, 84, 85, 88, 91, 95, 96], "max_trace_prob": 1, "min_trace_prob": 1, "1e": [1, 3, 63, 77, 78, 79], "05": [1, 8, 24, 28, 47, 61, 65, 71, 73, 81, 83, 84, 86, 90, 94], "max_noise_r": 1, "99999": 1, "min_noise_r": 1, "valid_noise_matrix": [1, 78, 79, 86, 88, 89], "none": [1, 2, 3, 4, 5, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 73, 74, 78, 79, 84, 85, 86, 88, 89, 94], "frac_zero_noise_r": 1, "seed": [1, 2, 3, 8, 24, 36, 38, 44, 65, 77, 78, 79, 81, 83, 86, 88, 89, 95], "max_it": [1, 77, 82, 91, 96], "10000": [1, 37, 83, 84], "x": [1, 2, 3, 4, 8, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 34, 35, 38, 39, 41, 42, 44, 47, 48, 49, 52, 53, 55, 61, 62, 63, 65, 67, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89, 91, 93, 95, 96], "diagon": [1, 3, 4, 39, 42, 48], "equal": [1, 3, 8, 10, 55, 60, 70, 92], "creat": [1, 2, 7, 14, 16, 34, 37, 38, 39, 48, 65, 75, 77, 81, 82, 84, 85, 94, 96, 97], "impli": [1, 8, 33, 54, 61], "float": [1, 2, 8, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 53, 54, 55, 57, 60, 61, 65, 69, 73, 77, 78, 79, 86, 88, 89], "entri": [1, 3, 4, 33, 34, 38, 39, 41, 45, 46, 48, 53, 54, 55, 58, 81, 82, 86, 89, 90, 93, 95, 96], "maximum": [1, 8, 62, 70, 74, 94], "minimum": [1, 6, 8, 18, 39, 41, 55, 60, 73], "noise_r": 1, "non": [1, 2, 3, 4, 5, 7, 14, 24, 34, 38, 39, 60, 65, 78, 84, 86, 88, 90, 91], "default": [1, 2, 3, 4, 5, 8, 12, 14, 26, 28, 30, 33, 34, 35, 37, 38, 39, 41, 42, 44, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 78, 84, 85, 93, 94], "If": [1, 2, 3, 4, 8, 10, 11, 14, 24, 26, 31, 33, 34, 37, 38, 39, 41, 42, 44, 47, 48, 52, 53, 54, 55, 58, 60, 61, 62, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "have": [1, 2, 3, 4, 5, 8, 14, 19, 22, 24, 27, 33, 34, 36, 37, 38, 39, 42, 44, 48, 52, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 70, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "all": [1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 20, 30, 33, 34, 37, 38, 39, 42, 44, 45, 47, 48, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "necessari": [1, 2, 3, 5, 8, 10, 47, 78], "In": [1, 2, 3, 8, 33, 34, 37, 38, 53, 54, 56, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97], "particular": [1, 4, 8, 11, 12, 14, 17, 18, 20, 24, 25, 26, 29, 34, 38, 48, 53, 57, 61, 65, 70, 74, 75, 77, 79, 82, 84, 88, 89, 91, 93, 95, 96], "satisfi": [1, 3, 33], "requir": [1, 2, 4, 5, 6, 7, 8, 9, 10, 28, 32, 34, 35, 36, 37, 38, 39, 42, 48, 51, 52, 55, 62, 63, 65, 67, 75, 76, 77, 83, 84, 86, 92], "argument": [1, 2, 3, 4, 8, 14, 21, 25, 28, 29, 34, 37, 38, 39, 44, 49, 52, 53, 54, 55, 57, 60, 61, 62, 63, 65, 69, 70, 71, 73, 79, 82, 83, 84, 85, 89, 90, 93, 96, 97], "when": [1, 2, 3, 4, 8, 10, 12, 21, 24, 34, 38, 39, 42, 44, 48, 52, 55, 57, 58, 60, 62, 63, 65, 66, 78, 79, 81, 82, 85, 88, 92, 93, 94, 95, 96, 97], "The": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "rate": [1, 2, 3, 8, 35, 48, 77, 97], "set": [1, 2, 3, 4, 7, 8, 10, 11, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 38, 39, 43, 44, 46, 48, 52, 53, 55, 58, 60, 61, 62, 63, 65, 67, 69, 70, 78, 79, 81, 82, 84, 88, 89, 91, 92, 93, 94, 95, 96, 97], "note": [1, 2, 3, 5, 6, 8, 10, 25, 29, 31, 34, 37, 38, 39, 44, 48, 53, 58, 60, 61, 62, 63, 65, 66, 70, 76, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "you": [1, 2, 3, 4, 5, 8, 12, 14, 33, 34, 36, 37, 38, 39, 44, 51, 52, 53, 55, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "high": [1, 2, 14, 37, 39, 48, 60, 63, 65, 78, 79, 83, 85, 86, 90, 93, 94, 95, 96, 97], "mai": [1, 2, 3, 4, 8, 11, 19, 20, 22, 27, 33, 34, 36, 37, 38, 39, 42, 44, 48, 53, 54, 58, 60, 61, 62, 63, 65, 67, 70, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97], "imposs": [1, 8, 86], "also": [1, 2, 3, 4, 5, 8, 20, 31, 33, 34, 37, 38, 39, 44, 47, 52, 53, 62, 65, 70, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97], "low": [1, 8, 48, 53, 75, 78, 79, 82, 86, 90, 94], "zero": [1, 3, 4, 34, 38, 41, 48, 49, 78, 85, 89, 90, 91], "forc": [1, 2, 3, 4, 38, 78, 97], "instead": [1, 2, 3, 8, 11, 14, 30, 33, 34, 37, 38, 39, 42, 48, 52, 53, 55, 57, 61, 62, 63, 65, 66, 69, 71, 73, 76, 77, 81, 82, 84, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97], "onli": [1, 2, 3, 4, 5, 8, 14, 21, 24, 28, 33, 34, 37, 38, 39, 41, 42, 47, 48, 49, 52, 53, 62, 63, 65, 67, 69, 73, 74, 75, 77, 78, 79, 82, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97], "guarante": [1, 3, 4, 13, 19, 22, 27, 34, 36, 38, 40, 42, 51, 76], "produc": [1, 2, 4, 8, 14, 44, 53, 63, 65, 67, 69, 75, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97], "higher": [1, 4, 8, 33, 39, 41, 42, 44, 46, 53, 54, 65, 79, 82, 84, 90], "opposit": [1, 97], "occur": [1, 3, 8, 33, 47, 60, 78, 79, 84, 85, 91], "small": [1, 3, 8, 33, 37, 44, 48, 54, 61, 82, 83, 85, 89, 91, 96], "numpi": [1, 3, 4, 5, 8, 10, 16, 29, 37, 38, 44, 46, 47, 49, 52, 57, 60, 65, 66, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "max": [1, 39, 62, 63, 79, 85, 91], "tri": [1, 34, 38, 92], "befor": [1, 2, 3, 34, 38, 46, 48, 62, 65, 70, 82, 84, 86, 88, 91, 93, 95, 96], "option": [1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 21, 24, 28, 33, 34, 37, 38, 39, 42, 44, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 70, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 89, 93, 94, 95], "left": [1, 2, 39, 41, 46, 48, 55, 58, 61, 78, 79, 89, 90, 91, 94], "stochast": 1, "exceed": 1, "m": [1, 4, 34, 38, 43, 44, 53, 58, 60, 61, 62, 78, 79, 83, 88, 89, 90, 97], "max_prob": 1, "min_prob": 1, "dirichlet": 1, "ones": [1, 34, 38, 52, 84, 86, 94], "length": [1, 4, 10, 24, 25, 33, 35, 39, 48, 55, 58, 62, 63, 65, 67, 70, 74, 77, 89, 91, 94, 95, 97], "must": [1, 2, 3, 4, 5, 14, 33, 34, 35, 36, 38, 39, 42, 44, 45, 48, 51, 52, 53, 54, 55, 62, 63, 65, 67, 69, 70, 71, 73, 74, 77, 88, 92, 94, 97], "max_balls_per_bin": 1, "min_balls_per_bin": 1, "uniformli": 1, "integ": [1, 2, 3, 8, 10, 33, 37, 39, 45, 48, 49, 53, 55, 61, 67, 69, 70, 71, 73, 74, 77, 84, 88, 89, 90, 94, 95, 96, 97], "ball": [1, 83], "bin": [1, 3, 55, 78, 79, 91], "ensur": [1, 2, 8, 34, 38, 48, 49, 60, 63, 65, 77, 78, 79, 82, 84, 85, 86, 91, 92, 93, 95, 96], "most": [1, 3, 4, 5, 8, 14, 33, 37, 39, 44, 52, 53, 54, 55, 58, 60, 61, 62, 63, 66, 69, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96], "least": [1, 8, 16, 29, 33, 37, 53, 54, 60, 63, 73, 79, 84, 85, 88, 91, 94], "int_arrai": [1, 48], "can": [2, 3, 4, 5, 6, 7, 11, 12, 14, 30, 33, 34, 35, 36, 37, 38, 39, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 81, 82, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97], "model": [2, 3, 4, 8, 14, 16, 28, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 47, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 79, 83, 87, 92, 94, 97], "For": [2, 3, 4, 5, 7, 8, 9, 14, 20, 32, 33, 34, 37, 38, 39, 42, 44, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 69, 71, 73, 74, 75, 77, 79, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97], "regular": [2, 3, 37, 52], "multi": [2, 3, 8, 33, 34, 37, 38, 39, 43, 44, 45, 48, 49, 54, 55, 56, 57, 62, 63, 75, 84, 86, 87], "task": [2, 4, 5, 8, 9, 10, 12, 13, 14, 23, 28, 30, 33, 37, 42, 44, 45, 46, 48, 53, 55, 63, 65, 75, 77, 82, 83, 84, 86, 89, 91, 93, 94, 96, 97], "cleanlearn": [2, 3, 8, 21, 28, 34, 48, 52, 64, 65, 66, 75, 76, 93, 95, 96], "wrap": [2, 34, 38, 52, 62, 65, 75, 78, 79, 81, 82, 86, 93, 95, 96], "instanc": [2, 3, 4, 5, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 38, 44, 52, 61, 62, 65, 70, 77, 78, 79, 81, 82, 85, 86, 90, 95, 96], "sklearn": [2, 3, 4, 6, 8, 16, 29, 33, 38, 44, 48, 52, 62, 65, 66, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 91, 92, 93, 95, 96], "classifi": [2, 3, 38, 44, 48, 53, 56, 62, 63, 75, 76, 77, 81, 82, 84, 88, 89, 91, 92, 94, 95, 96, 97], "adher": [2, 38, 65], "estim": [2, 3, 4, 7, 11, 20, 33, 37, 38, 39, 42, 48, 53, 54, 55, 60, 62, 65, 67, 69, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 87, 90, 91, 92, 93, 94, 97], "api": [2, 3, 12, 52, 58, 61, 62, 65, 76, 84, 93], "defin": [2, 3, 4, 5, 8, 12, 20, 33, 34, 35, 37, 38, 39, 63, 65, 67, 77, 78, 79, 81, 84, 88, 91, 97], "four": [2, 8, 83, 86, 97], "clf": [2, 3, 4, 44, 65, 75, 81, 84, 86, 89, 95], "fit": [2, 3, 4, 6, 8, 16, 36, 38, 51, 52, 62, 64, 65, 75, 78, 79, 81, 82, 84, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97], "sample_weight": [2, 38, 65, 86], "predict_proba": [2, 4, 33, 36, 38, 44, 51, 52, 77, 78, 79, 81, 82, 84, 86, 88, 89, 91, 95], "predict": [2, 3, 4, 6, 8, 14, 20, 21, 23, 26, 28, 31, 33, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 83, 84, 86, 87, 91, 93, 94, 96, 97], "score": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 37, 39, 41, 44, 46, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 91, 93, 95, 96], "data": [2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 35, 36, 37, 38, 39, 44, 45, 48, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 70, 71, 72, 73, 74, 76, 80, 85, 87, 92, 96], "e": [2, 3, 4, 8, 10, 20, 33, 34, 37, 38, 39, 42, 44, 45, 48, 49, 53, 54, 55, 56, 58, 61, 62, 63, 65, 67, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96], "featur": [2, 3, 4, 6, 8, 14, 17, 21, 24, 25, 26, 28, 29, 44, 48, 62, 65, 75, 78, 79, 81, 82, 84, 86, 88, 89, 93, 95], "element": [2, 3, 4, 33, 39, 41, 48, 53, 55, 63, 70, 71, 73, 77, 82, 84, 96, 97], "first": [2, 4, 8, 15, 24, 25, 33, 37, 44, 48, 53, 54, 58, 61, 63, 65, 77, 78, 81, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "index": [2, 8, 24, 33, 39, 47, 48, 49, 54, 63, 65, 70, 73, 74, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97], "should": [2, 3, 4, 5, 8, 12, 20, 24, 29, 33, 34, 37, 38, 39, 41, 42, 44, 46, 47, 48, 52, 53, 54, 57, 58, 60, 61, 62, 63, 65, 66, 70, 71, 73, 74, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "correspond": [2, 3, 4, 8, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 33, 34, 37, 38, 39, 41, 42, 44, 47, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 70, 71, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "differ": [2, 4, 5, 8, 11, 13, 19, 22, 24, 25, 27, 33, 34, 36, 37, 38, 39, 40, 44, 48, 49, 51, 53, 58, 60, 62, 65, 77, 78, 79, 81, 82, 85, 86, 88, 89, 91, 92, 93, 95], "sampl": [2, 3, 4, 6, 8, 14, 18, 39, 41, 44, 55, 58, 61, 63, 65, 66, 75, 76, 83, 84, 86, 87, 89, 90, 93, 94, 96, 97], "size": [2, 8, 29, 34, 37, 38, 39, 44, 55, 60, 61, 65, 67, 69, 81, 84, 85, 86, 88, 89, 90, 92, 94, 96], "here": [2, 4, 5, 8, 12, 37, 39, 42, 52, 53, 54, 55, 57, 58, 61, 62, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "re": [2, 4, 34, 38, 47, 53, 65, 75, 77, 78, 81, 82, 84, 93, 94, 95, 96, 97], "weight": [2, 8, 34, 35, 38, 44, 53, 60, 63, 65, 77, 78, 79, 82, 96], "loss": [2, 35, 52, 63, 65, 85], "while": [2, 3, 8, 34, 37, 38, 43, 44, 48, 65, 75, 84, 85, 86, 88, 89, 93], "train": [2, 3, 4, 8, 14, 16, 34, 35, 36, 38, 44, 48, 52, 53, 58, 61, 62, 65, 66, 76, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 92, 94, 97], "support": [2, 3, 4, 10, 12, 30, 31, 37, 44, 48, 49, 62, 63, 73, 75, 76, 77, 78, 79, 84, 85], "your": [2, 3, 4, 7, 8, 14, 33, 34, 36, 37, 38, 39, 44, 48, 51, 52, 53, 54, 55, 57, 62, 63, 65, 66, 67, 69, 70, 76, 77, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "recommend": [2, 4, 5, 8, 11, 14, 37, 39, 53, 78, 79, 84, 85, 92, 93], "furthermor": 2, "correctli": [2, 3, 8, 33, 34, 38, 39, 42, 49, 54, 55, 60, 61, 65, 67, 82, 84, 89, 90, 93, 94, 96], "clonabl": [2, 65], "via": [2, 4, 5, 8, 11, 14, 16, 20, 33, 35, 37, 38, 44, 48, 53, 58, 61, 62, 63, 65, 66, 69, 73, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97], "base": [2, 3, 4, 5, 8, 10, 11, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 60, 62, 63, 65, 66, 69, 71, 73, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97], "clone": [2, 65, 89], "intern": [2, 3, 5, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 61, 65, 71, 76, 77, 78, 84, 86, 88, 89, 90, 91, 93, 97], "multipl": [2, 3, 4, 10, 11, 31, 33, 39, 47, 53, 54, 55, 57, 60, 61, 65, 75, 78, 79, 84, 85, 87, 89, 90, 93], "g": [2, 3, 4, 8, 10, 20, 33, 34, 38, 39, 45, 48, 55, 56, 58, 61, 62, 63, 65, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96], "manual": [2, 65, 77, 84, 91, 92, 93, 95, 96, 97], "pytorch": [2, 34, 35, 38, 65, 75, 77, 84, 87, 89, 94], "call": [2, 3, 4, 8, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 44, 48, 52, 62, 65, 77, 78, 79, 82, 84, 86, 89, 91, 92, 93, 94, 96, 97], "__init__": [2, 35, 65, 85], "independ": [2, 3, 8, 54, 65, 82, 92, 93, 97], "compat": [2, 34, 37, 38, 52, 65, 66, 69, 73, 75, 84, 92, 93, 95, 96], "neural": [2, 35, 52, 62, 65, 77, 84, 85, 89, 91, 93], "network": [2, 34, 35, 38, 52, 62, 65, 77, 82, 84, 85, 89, 91, 93, 96], "typic": [2, 34, 38, 62, 65, 77, 79, 81, 82, 85, 91, 92, 95, 96], "initi": [2, 3, 11, 16, 34, 38, 53, 65, 82, 84, 95], "insid": [2, 38, 65, 84, 86], "There": [2, 3, 5, 75, 86, 88], "two": [2, 3, 8, 16, 24, 33, 34, 37, 38, 45, 48, 58, 60, 61, 76, 78, 79, 81, 82, 84, 85, 86, 89, 93, 94, 96, 97], "new": [2, 5, 12, 20, 34, 37, 38, 43, 47, 48, 53, 65, 77, 78, 82, 83, 84, 91, 92, 96, 97], "notion": 2, "confid": [2, 3, 8, 20, 33, 37, 39, 42, 44, 48, 53, 54, 55, 58, 60, 61, 62, 63, 65, 69, 73, 75, 81, 82, 85, 86, 88, 89, 90, 92, 94, 95, 97], "packag": [2, 4, 5, 7, 8, 9, 13, 32, 36, 39, 40, 48, 51, 58, 61, 65, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "prune": [2, 3, 39, 55, 65, 76, 90], "everyth": [2, 61, 86], "els": [2, 61, 78, 83, 84, 85, 88, 89, 90], "mathemat": [2, 3, 8, 42, 89], "keep": [2, 11, 12, 48, 75, 78, 83, 84, 94], "belong": [2, 3, 8, 33, 39, 41, 42, 54, 55, 56, 57, 62, 63, 67, 71, 73, 74, 79, 85, 86, 89, 91, 94, 97], "2": [2, 3, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 54, 55, 57, 58, 61, 62, 63, 65, 66, 70, 71, 73, 74, 83, 84, 92], "error": [2, 3, 4, 8, 34, 38, 39, 41, 42, 48, 54, 55, 57, 58, 60, 61, 63, 65, 67, 69, 70, 73, 76, 77, 78, 79, 81, 82, 83, 87, 95], "erron": [2, 3, 33, 39, 42, 48, 54, 55, 63, 65, 66, 67, 91, 93], "import": [2, 3, 4, 5, 6, 8, 10, 11, 12, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 37, 44, 46, 47, 53, 57, 60, 65, 66, 71, 73, 74, 75, 81, 82, 84, 89, 90, 91, 93, 94, 95, 96, 97], "linear_model": [2, 4, 33, 48, 65, 75, 77, 78, 79, 82, 84, 86, 88, 91, 96], "logisticregress": [2, 3, 4, 33, 48, 75, 77, 78, 79, 82, 84, 86, 88, 91, 96], "logreg": 2, "cl": [2, 12, 28, 65, 75, 84, 86, 93, 95, 96], "pass": [2, 3, 4, 6, 8, 10, 11, 12, 14, 21, 28, 30, 34, 37, 38, 39, 43, 44, 48, 52, 53, 55, 62, 63, 65, 71, 75, 77, 78, 79, 82, 83, 84, 86, 88, 90, 91, 93, 96], "x_train": [2, 78, 79, 86, 88, 89, 93, 95], "labels_maybe_with_error": 2, "had": [2, 3, 65, 90], "issu": [2, 3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 51, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 80, 87, 88, 92, 93, 96], "pred": [2, 39, 48, 92, 93, 95, 96], "x_test": [2, 78, 79, 86, 89, 93, 95], "might": [2, 53, 65, 70, 78, 79, 84, 85, 90, 95, 96], "case": [2, 3, 11, 33, 44, 53, 65, 77, 78, 79, 81, 83, 84, 85, 86, 91, 93, 95, 96, 97], "standard": [2, 3, 4, 28, 33, 39, 52, 54, 55, 57, 63, 65, 75, 78, 79, 81, 83, 86, 90, 95], "adapt": [2, 34, 36, 48, 51, 65, 91], "skorch": [2, 65, 75, 84], "kera": [2, 51, 58, 61, 65, 75, 84, 90], "scikera": [2, 52, 65, 84], "open": [2, 37, 83, 90, 97], "doesn": [2, 65, 75], "t": [2, 3, 5, 8, 15, 25, 34, 35, 37, 38, 39, 44, 46, 47, 57, 62, 63, 65, 71, 73, 74, 75, 78, 79, 81, 82, 83, 85, 86, 89, 90, 93, 97], "alreadi": [2, 4, 8, 14, 34, 37, 38, 42, 52, 53, 65, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 95, 96], "exist": [2, 4, 8, 10, 16, 34, 37, 38, 47, 52, 58, 60, 62, 65, 75, 76, 78, 79, 82, 88, 96, 97], "made": [2, 4, 14, 34, 38, 65, 82, 84, 85, 88, 90, 92, 93, 95, 96], "easi": [2, 42, 65, 78, 79, 83, 84, 86, 89], "inherit": [2, 5, 35, 65], "baseestim": [2, 38, 65], "yourmodel": [2, 65], "def": [2, 5, 12, 34, 38, 52, 65, 77, 78, 79, 83, 84, 85, 86, 88, 89, 91, 93, 96, 97], "self": [2, 3, 4, 5, 8, 10, 11, 12, 14, 29, 34, 35, 37, 38, 39, 44, 62, 63, 65, 78, 82, 83, 85, 89, 94, 95, 96, 97], "refer": [2, 8, 14, 34, 38, 54, 55, 57, 58, 60, 61, 65, 69, 70, 78, 79, 81, 82, 84, 85, 86, 89, 92, 93], "origin": [2, 4, 8, 38, 39, 47, 48, 52, 54, 55, 58, 61, 62, 65, 66, 69, 71, 73, 78, 81, 82, 84, 85, 86, 90, 91, 93, 95, 96, 97], "total": [2, 3, 33, 37, 48, 54, 74, 84, 85, 94], "state": [2, 3, 4, 34, 35, 38, 43, 65, 86, 89, 90, 97], "art": [2, 35, 86, 89], "northcutt": [2, 3, 33, 62, 63], "et": [2, 3, 33, 35, 62, 63], "al": [2, 3, 33, 35, 62, 63], "2021": [2, 3, 33, 62, 63], "weak": [2, 61], "supervis": [2, 8, 78, 79, 84, 88], "find": [2, 4, 8, 11, 12, 14, 17, 18, 20, 21, 23, 24, 25, 26, 29, 33, 34, 36, 37, 38, 39, 43, 47, 48, 51, 58, 61, 62, 63, 65, 67, 71, 73, 76, 78, 87, 92], "uncertainti": [2, 8, 41, 62, 65, 84, 91, 93], "It": [2, 3, 4, 5, 8, 10, 11, 14, 20, 25, 28, 30, 31, 34, 38, 39, 42, 44, 53, 60, 61, 65, 75, 78, 79, 82, 84, 85, 86, 89, 92, 96], "work": [2, 3, 5, 8, 10, 28, 33, 34, 37, 38, 39, 42, 47, 48, 49, 52, 53, 63, 65, 75, 76, 78, 79, 83, 91, 93, 96], "includ": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 34, 36, 37, 38, 47, 48, 51, 53, 54, 57, 58, 62, 63, 65, 69, 70, 71, 73, 75, 76, 78, 79, 81, 82, 84, 85, 86, 89, 90, 91, 97], "deep": [2, 36, 38, 51, 52, 65, 82], "see": [2, 3, 4, 5, 11, 12, 30, 33, 34, 37, 38, 39, 44, 48, 52, 54, 55, 57, 58, 61, 62, 63, 65, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "subfield": 2, "theori": [2, 86], "machin": [2, 4, 12, 14, 30, 36, 51, 65, 78, 79, 83, 88], "across": [2, 3, 4, 5, 8, 11, 20, 33, 37, 44, 54, 61, 62, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93], "varieti": [2, 84, 95, 96], "like": [2, 3, 4, 5, 8, 12, 33, 34, 37, 38, 39, 42, 48, 52, 53, 54, 57, 58, 60, 63, 65, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "pu": [2, 48], "input": [2, 3, 4, 8, 14, 24, 33, 34, 37, 38, 42, 44, 47, 48, 49, 52, 61, 65, 75, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 96, 97], "discret": [2, 31, 39, 42, 48, 62, 63, 67, 69, 70], "vector": [2, 3, 4, 8, 14, 39, 42, 44, 45, 48, 62, 63, 75, 77, 78, 79, 81, 82, 85, 86, 89, 90, 91, 94, 96, 97], "would": [2, 3, 4, 34, 37, 38, 39, 48, 55, 65, 75, 78, 84, 85, 86, 91, 93, 96, 97], "obtain": [2, 4, 6, 8, 14, 39, 53, 55, 58, 61, 63, 66, 77, 79, 82, 84, 88, 90, 92, 94, 97], "been": [2, 33, 39, 42, 47, 48, 53, 54, 58, 60, 62, 63, 65, 77, 78, 81, 84, 86, 88, 89, 90, 91, 94, 97], "dure": [2, 8, 14, 62, 65, 77, 81, 82, 84, 86, 89, 92, 93, 95, 96, 97], "denot": [2, 3, 42, 44, 48, 55, 62, 63, 73], "tild": 2, "paper": [2, 8, 53, 62, 71, 73, 83, 86, 88, 91, 93, 97], "cv_n_fold": [2, 3, 65, 96], "5": [2, 3, 4, 6, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 38, 39, 41, 43, 44, 48, 53, 54, 57, 58, 61, 65, 66, 73, 78, 82, 83, 84, 89, 90, 91, 92, 94, 96, 97], "converge_latent_estim": [2, 3], "pulearn": [2, 48], "find_label_issues_kwarg": [2, 8, 65, 76, 84, 86], "label_quality_scores_kwarg": [2, 8], "low_memori": [2, 55, 71, 84], "clean": [2, 60, 63, 65, 66, 75, 78, 79, 83, 93, 95, 96], "even": [2, 3, 5, 33, 37, 41, 42, 48, 65, 77, 84, 86, 88, 89, 90], "messi": [2, 65, 86], "ridden": [2, 65], "autom": [2, 65, 75, 79, 83, 84], "robust": [2, 42, 65, 79, 84], "prone": [2, 65], "out": [2, 3, 4, 8, 14, 26, 34, 38, 39, 44, 52, 55, 56, 58, 61, 62, 63, 65, 66, 74, 75, 76, 83, 84, 86, 87, 89, 90, 91, 93, 94, 96, 97], "current": [2, 3, 5, 8, 11, 12, 20, 34, 38, 39, 44, 53, 60, 65, 78, 79, 84, 88, 90], "intend": [2, 11, 12, 13, 14, 30, 31, 40, 53, 69, 73, 77, 78, 79, 82, 86], "A": [2, 3, 4, 5, 8, 10, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 57, 60, 61, 62, 63, 65, 67, 69, 70, 74, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 90, 92, 95, 96, 97], "follow": [2, 3, 8, 12, 28, 31, 33, 34, 37, 38, 44, 46, 53, 54, 58, 60, 61, 62, 65, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "experiment": [2, 34, 35, 37, 38, 55, 76, 84], "wrapper": [2, 4, 52, 77, 93, 95, 96], "around": [2, 4, 60, 78, 79, 90, 91, 97], "fasttext": [2, 51], "store": [2, 4, 8, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 62, 65, 81, 82, 83, 84, 94, 95, 96, 97], "along": [2, 44, 55, 73, 78, 79, 84, 85, 91], "dimens": [2, 48, 67, 70, 84, 85, 91, 94], "select": [2, 7, 8, 24, 53, 63, 84, 85, 88, 91], "split": [2, 3, 4, 8, 10, 37, 44, 47, 48, 65, 77, 78, 79, 81, 82, 83, 85, 86, 89, 92, 95, 97], "cross": [2, 3, 8, 33, 39, 42, 43, 44, 55, 58, 61, 63, 65, 66, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 93, 94, 95, 96, 97], "fold": [2, 3, 33, 39, 42, 65, 77, 81, 83, 84, 90, 94, 95], "By": [2, 33, 54, 55, 65, 78, 84, 94], "need": [2, 3, 8, 33, 34, 37, 38, 39, 54, 55, 57, 62, 65, 75, 77, 78, 79, 82, 84, 86, 88, 89, 90, 94, 96], "holdout": [2, 3, 65], "comput": [2, 3, 4, 5, 6, 8, 17, 18, 20, 21, 24, 25, 26, 29, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 48, 53, 54, 55, 57, 60, 61, 62, 63, 65, 66, 67, 69, 75, 76, 78, 79, 83, 86, 87, 90, 91, 93, 94, 96], "them": [2, 3, 4, 5, 7, 8, 9, 10, 25, 32, 34, 36, 37, 38, 39, 51, 53, 62, 65, 76, 78, 79, 81, 82, 84, 85, 88, 89, 91, 93, 94, 95, 96, 97], "numer": [2, 3, 4, 8, 11, 20, 28, 31, 44, 60, 62, 65, 70, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89, 91, 93, 95, 96], "consist": [2, 3, 34, 38, 48, 53, 94, 97], "latent": [2, 3, 42], "thei": [2, 3, 4, 13, 19, 22, 24, 27, 34, 35, 36, 38, 39, 40, 46, 48, 52, 55, 60, 63, 65, 66, 69, 73, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 91, 93, 96, 97], "relat": [2, 3, 11, 17, 18, 24, 25, 26, 29, 42, 48, 54, 65, 79, 82], "close": [2, 3, 8, 37, 42, 62, 77, 78, 79, 81, 82, 84, 85, 86, 90], "form": [2, 3, 8, 34, 35, 38, 42, 47, 48, 63, 65, 84], "equival": [2, 3, 34, 38, 42, 62, 91, 93], "iter": [2, 3, 33, 34, 38, 39, 48, 54, 55, 65, 84, 88, 94], "enforc": [2, 34, 38, 48], "perfectli": [2, 33, 54, 86], "certain": [2, 3, 4, 34, 38, 52, 61, 65, 78, 79, 83, 90, 91], "dict": [2, 3, 4, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 37, 38, 39, 43, 44, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 73, 78, 79, 84, 85, 97], "keyword": [2, 3, 4, 8, 14, 21, 25, 28, 34, 37, 38, 39, 41, 44, 47, 52, 53, 55, 62, 63, 65, 71, 73, 78], "filter": [2, 3, 8, 37, 47, 54, 56, 57, 59, 61, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 97], "find_label_issu": [2, 3, 8, 28, 37, 39, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 89, 90, 93, 94, 95, 96, 97], "particularli": [2, 75, 88, 91], "filter_bi": [2, 3, 37, 39, 55, 76, 84], "frac_nois": [2, 39, 55, 71, 84], "min_examples_per_class": [2, 39, 55, 79, 84, 86], "impact": [2, 8, 78, 79, 85], "ml": [2, 4, 8, 13, 65, 75, 78, 79, 81, 82, 85, 88, 89, 93, 95, 96], "accuraci": [2, 35, 63, 77, 84, 85, 86, 88, 91, 93, 94, 95, 96], "n_job": [2, 37, 39, 55, 67, 69, 71, 84, 91, 94], "disabl": [2, 34, 38, 39, 91], "process": [2, 3, 5, 11, 14, 34, 37, 38, 39, 47, 53, 55, 61, 67, 69, 71, 77, 78, 84, 88, 92, 96], "caus": [2, 39, 44, 78, 79, 84], "rank": [2, 3, 8, 33, 37, 39, 44, 54, 55, 56, 58, 59, 61, 62, 64, 68, 70, 71, 72, 74, 75, 76, 78, 79, 83, 84, 89, 90, 91, 94, 95, 96, 97], "get_label_quality_scor": [2, 37, 39, 40, 44, 53, 55, 56, 57, 58, 59, 60, 63, 64, 66, 68, 69, 71, 72, 73, 76, 86, 89, 90, 94, 97], "adjust_pred_prob": [2, 8, 57, 62, 63, 86], "control": [2, 4, 7, 8, 14, 37, 39, 53, 61, 62, 65, 71, 73, 78, 79, 83, 84], "how": [2, 3, 4, 8, 10, 11, 12, 14, 20, 33, 34, 35, 37, 38, 42, 48, 53, 54, 57, 58, 60, 62, 63, 65, 69, 73, 75, 78, 79, 81, 82, 83, 85, 90, 91, 92, 93, 94, 95, 96], "much": [2, 8, 33, 37, 39, 65, 84, 86, 88, 91], "output": [2, 3, 4, 8, 14, 34, 35, 38, 42, 48, 52, 53, 54, 58, 60, 61, 62, 65, 69, 70, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 90, 91, 92, 93, 96], "print": [2, 4, 5, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 48, 53, 54, 55, 60, 62, 63, 65, 67, 69, 70, 74, 76, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "suppress": [2, 37, 53, 60, 62, 63, 65, 67, 69, 70, 94, 97], "statement": [2, 37, 53, 60, 62, 63, 65, 67, 69, 70], "big": [2, 37, 55, 61, 65, 86], "limit": [2, 4, 14, 37, 55, 90, 94, 97], "memori": [2, 34, 37, 38, 55, 61, 67, 69, 78, 94], "label_issues_batch": [2, 36, 55, 84], "find_label_issues_batch": [2, 36, 37, 55, 84], "pred_prob": [2, 3, 4, 6, 8, 14, 21, 23, 24, 26, 29, 33, 37, 39, 41, 42, 43, 44, 45, 48, 49, 53, 54, 55, 57, 58, 61, 62, 63, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 95, 96], "threshold": [2, 3, 5, 8, 16, 17, 18, 20, 26, 28, 29, 37, 60, 61, 62, 63, 69, 73, 78, 90, 91, 94, 97], "inverse_noise_matrix": [2, 3, 8, 42, 48, 76, 86], "label_issu": [2, 37, 39, 55, 58, 65, 67, 76, 77, 82, 84, 85, 86, 89, 93, 95, 96], "clf_kwarg": [2, 3, 8, 65], "clf_final_kwarg": [2, 65], "validation_func": [2, 3, 8], "correct": [2, 4, 8, 33, 37, 39, 41, 53, 54, 55, 57, 58, 60, 61, 63, 65, 66, 69, 73, 75, 77, 81, 82, 85, 86, 88, 90, 92, 93], "result": [2, 3, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 37, 38, 39, 41, 46, 48, 55, 57, 58, 61, 63, 65, 66, 67, 69, 73, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 93, 94, 95, 96, 97], "identifi": [2, 3, 4, 5, 8, 10, 14, 25, 30, 33, 37, 39, 55, 58, 61, 63, 65, 66, 67, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 89, 91, 93, 94, 95, 96, 97], "final": [2, 8, 65, 81, 90, 92, 93, 95], "remain": [2, 65, 76, 85, 89, 93, 95, 96, 97], "datasetlik": [2, 48, 65], "beyond": [2, 4, 5, 7, 9, 32, 75, 93, 94], "pd": [2, 3, 4, 5, 11, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 43, 52, 53, 54, 65, 73, 77, 78, 79, 81, 82, 84, 86, 88, 93, 95, 96, 97], "datafram": [2, 3, 4, 5, 10, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 37, 43, 48, 49, 52, 53, 54, 65, 70, 74, 76, 77, 78, 79, 81, 82, 84, 85, 86, 88, 93, 94, 96, 97], "scipi": [2, 4, 11, 48], "spars": [2, 4, 8, 11, 14, 16, 29, 48, 49, 81], "csr_matrix": [2, 4, 11, 14, 16, 29], "torch": [2, 34, 35, 38, 77, 82, 83, 85, 91, 96], "util": [2, 4, 8, 14, 30, 34, 35, 38, 40, 53, 58, 61, 65, 75, 76, 77, 78, 79, 84, 85, 86, 91], "tensorflow": [2, 48, 52, 75, 77, 84], "object": [2, 4, 8, 10, 11, 14, 30, 34, 35, 37, 38, 44, 48, 49, 52, 55, 58, 59, 60, 61, 62, 65, 73, 75, 77, 79, 81, 85, 86, 87, 89, 93, 96], "list": [2, 3, 4, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 45, 47, 48, 49, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90, 93, 96, 97], "index_list": 2, "subset": [2, 3, 4, 14, 33, 37, 39, 48, 63, 70, 74, 77, 81, 82, 84, 85, 89, 90, 91, 92, 93, 95, 96, 97], "wa": [2, 3, 10, 12, 37, 48, 53, 54, 60, 62, 74, 77, 78, 79, 81, 82, 84, 86, 89, 90, 92, 94, 95, 96, 97], "abl": [2, 3, 8, 65, 77, 84, 86, 88, 89], "format": [2, 3, 4, 8, 10, 34, 37, 38, 39, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 58, 61, 62, 63, 65, 67, 69, 70, 73, 74, 77, 78, 79, 81, 83, 85, 88, 93, 94, 95, 97], "make": [2, 3, 4, 16, 34, 37, 38, 44, 52, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96], "sure": [2, 4, 37, 39, 44, 77, 78, 79, 81, 82, 83, 85, 88, 89, 90, 91, 93, 95, 96], "shuffl": [2, 8, 48, 77, 82, 85, 89, 91], "ha": [2, 3, 4, 8, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 42, 44, 47, 48, 53, 58, 60, 65, 71, 73, 74, 75, 77, 78, 79, 81, 82, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "batch": [2, 37, 48, 52, 53, 67, 69, 84, 85, 91], "order": [2, 4, 8, 31, 33, 34, 38, 39, 42, 43, 44, 48, 53, 54, 55, 58, 61, 62, 63, 67, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 96, 97], "destroi": [2, 48], "oper": [2, 34, 37, 38, 48, 52, 63, 75, 82, 84, 91, 95, 96], "eg": [2, 8, 48, 58, 61, 78, 79, 84], "repeat": [2, 48, 53, 88, 91], "appli": [2, 34, 36, 38, 39, 44, 45, 47, 48, 57, 62, 71, 77, 78, 79, 81, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96], "array_lik": [2, 3, 33, 39, 48, 55, 62, 66], "some": [2, 3, 4, 8, 12, 20, 33, 34, 36, 38, 39, 42, 47, 48, 51, 53, 54, 55, 57, 58, 61, 62, 63, 65, 67, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97], "seri": [2, 3, 37, 48, 49, 65, 73, 84], "row": [2, 3, 4, 8, 11, 25, 33, 37, 39, 41, 42, 48, 53, 54, 55, 57, 62, 63, 65, 70, 71, 73, 74, 77, 78, 81, 82, 83, 84, 85, 88, 89, 91, 95, 97], "rather": [2, 3, 24, 33, 48, 52, 53, 60, 69, 73, 88, 92, 93, 94, 96, 97], "leav": [2, 39], "per": [2, 3, 5, 11, 33, 37, 39, 44, 47, 53, 54, 55, 57, 60, 61, 63, 66, 67, 69, 73, 79, 84, 90, 97], "determin": [2, 3, 8, 10, 14, 20, 24, 28, 33, 37, 39, 44, 48, 53, 55, 58, 60, 63, 69, 73, 78, 84, 88, 90, 91, 93], "cutoff": [2, 3, 91], "consid": [2, 3, 4, 8, 11, 14, 21, 24, 26, 29, 33, 34, 38, 39, 48, 53, 60, 62, 63, 66, 69, 73, 77, 81, 82, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96], "section": [2, 3, 5, 8, 76, 81, 85, 90], "3": [2, 3, 4, 5, 8, 31, 33, 34, 38, 39, 42, 43, 44, 45, 46, 47, 48, 52, 55, 62, 63, 65, 66, 71, 73, 83, 84, 92], "equat": [2, 3, 42], "advanc": [2, 3, 4, 7, 8, 14, 60, 62, 73, 76, 79, 80, 86], "user": [2, 3, 4, 8, 12, 14, 25, 30, 31, 34, 38, 39, 60, 62, 63, 65, 69, 73, 86], "specifi": [2, 3, 4, 6, 8, 11, 12, 14, 16, 29, 30, 34, 37, 38, 39, 44, 47, 53, 54, 55, 58, 60, 62, 63, 65, 66, 74, 76, 77, 79, 82, 85, 88, 90, 93, 96], "automat": [2, 3, 4, 24, 33, 75, 81, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97], "greater": [2, 3, 4, 5, 7, 8, 26, 37, 48, 60, 79, 83, 84, 97], "count": [2, 20, 24, 33, 37, 39, 42, 48, 54, 55, 61, 76, 84, 85, 90], "observ": [2, 3, 42, 77, 78, 79, 88, 91, 93], "mislabel": [2, 8, 33, 37, 39, 42, 53, 54, 55, 58, 60, 63, 69, 71, 73, 75, 77, 81, 82, 84, 85, 86, 90, 93, 95, 96], "one": [2, 3, 4, 5, 8, 24, 33, 34, 37, 38, 39, 44, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 85, 88, 91, 92, 93, 95, 96, 97], "get_label_issu": [2, 36, 37, 64, 65, 86, 93, 95, 96], "either": [2, 3, 5, 8, 34, 37, 38, 39, 53, 55, 60, 62, 63, 67, 69, 79, 84, 89, 90], "boolean": [2, 5, 8, 20, 37, 39, 47, 53, 55, 58, 63, 65, 67, 69, 70, 75, 77, 79, 82, 84, 85, 90, 93, 94, 96], "label_issues_mask": [2, 39, 63, 65, 76], "indic": [2, 3, 4, 5, 8, 11, 20, 33, 37, 38, 39, 41, 44, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 66, 69, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "its": [2, 4, 5, 7, 8, 14, 34, 37, 38, 39, 46, 47, 55, 58, 61, 62, 63, 65, 67, 71, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97], "return_indices_ranked_bi": [2, 37, 39, 55, 71, 76, 84, 86, 95, 96], "significantli": [2, 85, 86, 88, 92], "reduc": [2, 37, 39, 48, 77, 84], "time": [2, 8, 34, 37, 38, 48, 53, 76, 78, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 97], "take": [2, 4, 8, 33, 34, 38, 43, 44, 48, 52, 63, 81, 85, 88, 89, 90, 95, 97], "run": [2, 4, 5, 7, 9, 12, 14, 24, 25, 32, 34, 37, 38, 65, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97], "skip": [2, 8, 34, 38, 65, 77, 84, 89, 97], "slow": [2, 3], "step": [2, 5, 24, 44, 61, 84, 85, 86, 88, 92], "caution": [2, 4, 84], "previous": [2, 4, 11, 48, 62, 65, 76, 77, 78, 81, 82, 88, 92, 95], "assign": [2, 5, 8, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 43, 44, 48, 65, 78, 81, 84, 85, 93, 94, 95, 97], "individu": [2, 5, 8, 11, 24, 34, 38, 53, 57, 60, 63, 65, 71, 73, 76, 79, 81, 84, 88, 89, 90, 95, 97], "still": [2, 37, 38, 48, 62, 77, 84, 85, 91, 95], "extra": [2, 34, 38, 48, 52, 53, 54, 65, 82, 84, 85, 88, 91], "receiv": [2, 8, 34, 38, 54, 57, 58, 65, 67, 71, 79, 90], "overwritten": [2, 65], "callabl": [2, 3, 34, 38, 44, 47, 52, 57, 84], "x_val": 2, "y_val": 2, "map": [2, 3, 10, 37, 38, 40, 43, 47, 48, 61, 63, 65, 70, 77, 78, 79, 84, 85, 86, 89, 97], "appropri": [2, 8, 14, 55, 63, 78, 81, 89, 90], "earli": [2, 85], "stop": [2, 85], "x_valid": 2, "y_valid": 2, "could": [2, 5, 8, 20, 33, 48, 62, 78, 81, 85, 89, 93, 95, 97], "f": [2, 5, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96], "ignor": [2, 34, 38, 47, 52, 65, 70, 74, 77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "allow": [2, 33, 34, 37, 38, 41, 48, 53, 61, 62, 65, 67, 69, 77, 84, 85, 92, 94, 96], "access": [2, 8, 11, 34, 38, 65, 79, 82, 85, 89, 96], "hyperparamet": [2, 57, 62, 85], "purpos": [2, 78, 79, 84, 89, 93], "want": [2, 4, 8, 33, 37, 49, 53, 55, 65, 78, 82, 83, 85, 88, 90, 91, 92, 94, 96, 97], "explicitli": [2, 6, 8, 38, 65, 84], "yourself": [2, 4, 37, 79], "altern": [2, 5, 8, 44, 48, 52, 53, 63, 76, 77, 81, 82, 84, 85, 86, 88, 89, 91, 93, 96], "same": [2, 3, 4, 5, 8, 10, 12, 14, 24, 28, 34, 37, 38, 39, 48, 52, 53, 55, 62, 63, 65, 69, 70, 73, 74, 75, 78, 79, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96], "effect": [2, 8, 25, 34, 38, 53, 62, 65, 81, 82, 84, 85, 91], "offer": [2, 4, 77, 78, 79, 82, 84, 86, 89, 96], "after": [2, 3, 4, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 48, 53, 65, 78, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96], "attribut": [2, 4, 5, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 34, 37, 38, 44, 62, 65, 78, 95], "label_issues_df": [2, 65, 85], "similar": [2, 8, 33, 34, 38, 48, 53, 57, 58, 60, 62, 65, 69, 73, 78, 79, 81, 82, 84, 85, 86, 90, 91, 94], "document": [2, 3, 4, 8, 12, 14, 33, 34, 37, 38, 39, 44, 47, 52, 54, 55, 57, 60, 61, 62, 65, 69, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97], "descript": [2, 4, 5, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 48, 58, 65, 78, 79], "were": [2, 3, 4, 33, 38, 54, 60, 73, 77, 81, 84, 86, 88, 90, 92, 94, 95], "present": [2, 3, 4, 8, 10, 11, 18, 33, 48, 62, 70, 75, 81, 84, 85, 91], "actual": [2, 3, 4, 33, 53, 54, 63, 79, 84, 86, 97], "num_class": [2, 33, 37, 48, 52, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 91, 95, 96], "uniqu": [2, 29, 48, 70, 78, 84, 89, 91], "given_label": [2, 4, 23, 28, 33, 42, 65, 70, 74, 77, 78, 79, 81, 82, 85, 86, 93, 94, 96, 97], "normal": [2, 3, 16, 24, 29, 39, 41, 44, 46, 47, 48, 63, 84, 86, 91], "trick": [2, 84], "distribut": [2, 3, 4, 8, 24, 26, 33, 38, 39, 43, 46, 53, 61, 62, 63, 75, 78, 79, 81, 82, 85, 90, 91], "account": [2, 33, 53, 57, 62, 63, 82, 84, 86, 88, 89, 91, 93, 96], "word": [2, 3, 47, 73, 74, 84], "remov": [2, 8, 29, 33, 34, 38, 39, 65, 75, 82, 83, 84, 85, 89, 91, 93, 95, 96], "so": [2, 3, 4, 5, 8, 12, 24, 33, 34, 37, 38, 39, 48, 53, 54, 60, 63, 65, 69, 73, 77, 78, 79, 82, 85, 86, 89, 91, 94], "proportion": [2, 8, 39], "just": [2, 3, 4, 8, 11, 33, 35, 37, 48, 52, 63, 65, 67, 75, 76, 77, 79, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96], "procedur": 2, "get": [2, 3, 4, 6, 11, 29, 34, 35, 38, 39, 44, 47, 48, 53, 55, 57, 62, 63, 65, 66, 67, 75, 77, 82, 83, 84, 85, 86, 91, 92, 93, 95, 96], "detect": [2, 4, 5, 7, 11, 12, 14, 16, 20, 26, 46, 56, 58, 59, 60, 61, 62, 63, 64, 65, 68, 72, 75, 78, 80, 85, 87, 89, 93, 94, 95, 96, 97], "arg": [2, 10, 20, 25, 29, 34, 35, 38, 44, 48, 63, 65], "kwarg": [2, 5, 8, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 44, 52, 65, 67, 69, 71, 84], "test": [2, 8, 24, 38, 44, 52, 65, 75, 78, 79, 81, 82, 85, 92, 93, 95, 96, 97], "expect": [2, 3, 34, 38, 39, 44, 53, 62, 63, 65, 84, 86, 88, 89, 90, 93, 95, 96, 97], "class_predict": 2, "evalu": [2, 8, 34, 35, 36, 37, 38, 61, 65, 77, 78, 79, 84, 85, 86, 88, 92, 93, 94, 95, 96], "simpli": [2, 33, 63, 78, 79, 81, 82, 84, 86, 89, 93, 94, 96, 97], "quantifi": [2, 4, 5, 8, 11, 39, 57, 62, 65, 75, 79, 81, 82, 85, 86, 90], "save_spac": [2, 8, 64, 65], "potenti": [2, 8, 33, 39, 47, 55, 58, 61, 63, 65, 67, 69, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 94, 95, 97], "cach": [2, 82, 96], "panda": [2, 4, 5, 10, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 48, 49, 52, 53, 54, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 93, 94, 95, 96], "unlik": [2, 8, 39, 41, 44, 52, 54, 55, 57, 73, 78, 88, 89, 91, 93], "both": [2, 4, 8, 14, 24, 33, 34, 38, 39, 48, 53, 55, 63, 67, 69, 74, 75, 78, 84, 85, 86, 88, 97], "mask": [2, 37, 39, 47, 48, 55, 58, 63, 65, 67, 69, 70, 75, 83, 84, 88, 90, 94, 97], "prefer": [2, 63, 71, 89], "plan": 2, "subsequ": [2, 3, 34, 38, 82, 84, 86, 90, 96], "invok": [2, 34, 38, 86, 92], "scratch": [2, 65], "To": [2, 4, 5, 7, 8, 9, 11, 14, 24, 32, 34, 37, 38, 39, 52, 53, 55, 57, 61, 62, 63, 65, 66, 67, 69, 75, 77, 78, 79, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "share": [2, 63, 65], "mostli": [2, 48, 60, 65, 89, 93], "longer": [2, 31, 43, 44, 47, 65, 76, 82, 84, 90, 96], "info": [2, 4, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 54, 65, 73, 78, 79, 83, 84, 97], "about": [2, 3, 4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 35, 37, 41, 53, 54, 57, 61, 65, 70, 73, 77, 78, 81, 82, 83, 84, 85, 86, 88, 91], "docstr": [2, 33, 34, 38, 48, 65, 83, 86], "unless": [2, 34, 38, 65, 84], "our": [2, 3, 8, 52, 53, 63, 65, 75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "is_label_issu": [2, 28, 65, 77, 78, 79, 81, 82, 85, 86, 89, 93, 96], "entir": [2, 8, 24, 37, 39, 42, 54, 55, 60, 63, 65, 67, 69, 70, 75, 78, 79, 84, 90, 91, 92, 94, 97], "accur": [2, 3, 4, 8, 14, 33, 37, 39, 53, 54, 55, 58, 61, 63, 65, 66, 67, 69, 70, 76, 79, 81, 82, 84, 85, 88, 93], "label_qu": [2, 53, 65, 86, 88, 93, 96], "measur": [2, 33, 53, 54, 65, 75, 83, 84, 86, 88, 89, 93, 94, 95, 97], "qualiti": [2, 3, 4, 5, 8, 11, 28, 29, 33, 37, 39, 41, 44, 53, 54, 55, 57, 58, 60, 63, 65, 66, 69, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 93, 95, 96], "lower": [2, 4, 5, 8, 11, 26, 37, 44, 46, 53, 54, 57, 60, 61, 63, 65, 66, 69, 73, 77, 79, 81, 82, 85, 88, 89, 90, 91, 93, 94, 96, 97], "eas": 2, "comparison": [2, 34, 38, 61, 86, 88], "against": [2, 34, 38, 78, 81, 84, 88, 89], "predicted_label": [2, 4, 23, 28, 65, 70, 74, 77, 78, 79, 81, 82, 85, 86, 93, 94, 96], "ad": [2, 34, 38, 79, 88, 93], "precis": [2, 55, 58, 61, 84, 86, 94, 97], "definit": [2, 5, 31, 44, 65, 81, 95], "accessor": [2, 65], "describ": [2, 8, 16, 53, 62, 63, 65, 71, 73, 86, 88, 89, 90, 92, 97], "precomput": [2, 4, 42, 65, 83], "clear": [2, 34, 38, 65, 82, 93, 96], "save": [2, 4, 14, 34, 37, 38, 61, 65, 84, 90, 94, 97], "space": [2, 8, 62, 65, 81, 83, 85], "place": [2, 34, 38, 48, 65, 88, 95], "larg": [2, 37, 65, 81, 82, 84, 85, 90, 91, 94, 97], "deploi": [2, 65, 81, 82, 84, 85], "care": [2, 8, 34, 38, 65, 82, 84, 86], "avail": [2, 4, 5, 10, 12, 30, 38, 65, 84, 86, 88, 90, 93], "cannot": [2, 4, 10, 12, 48, 92, 97], "anymor": 2, "classmethod": [2, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 38, 44, 65], "__init_subclass__": [2, 36, 38, 64, 65], "set_": [2, 38, 65], "_request": [2, 38, 65], "pep": [2, 38, 65], "487": [2, 38, 65], "look": [2, 4, 5, 14, 34, 38, 48, 65, 70, 78, 79, 81, 82, 84, 86, 88, 89, 90, 91, 94, 95, 97], "inform": [2, 4, 5, 8, 11, 14, 30, 34, 38, 48, 53, 54, 58, 61, 65, 70, 73, 74, 75, 77, 78, 81, 82, 86, 88, 91, 94, 97], "__metadata_request__": [2, 38, 65], "infer": [2, 38, 48, 65, 70, 74, 85, 88, 89, 95, 96], "signatur": [2, 34, 38, 65], "accept": [2, 34, 38, 63, 65, 78, 79], "metadata": [2, 38, 65, 81, 82, 85, 97], "through": [2, 4, 5, 38, 65, 77, 79, 82, 83, 84, 88, 90, 91, 96], "develop": [2, 7, 38, 65, 84, 86, 97], "request": [2, 38, 65, 79, 82, 83, 89, 95, 96, 97], "those": [2, 3, 8, 37, 38, 39, 52, 53, 55, 61, 65, 69, 73, 74, 75, 77, 84, 85, 90, 94], "http": [2, 4, 5, 7, 8, 9, 16, 32, 34, 35, 37, 38, 41, 48, 58, 61, 62, 65, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "www": [2, 38, 65, 91], "org": [2, 16, 34, 35, 38, 48, 62, 65, 84, 86, 97], "dev": [2, 38, 65], "0487": [2, 38, 65], "get_metadata_rout": [2, 36, 38, 64, 65], "rout": [2, 38, 65], "pleas": [2, 34, 38, 52, 65, 75, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 91, 93, 96, 97], "guid": [2, 5, 38, 65, 76, 80, 85], "mechan": [2, 34, 38, 65], "metadatarequest": [2, 38, 65], "encapsul": [2, 14, 38, 60, 65], "get_param": [2, 36, 38, 51, 52, 64, 65], "subobject": [2, 38, 65], "param": [2, 8, 34, 38, 52, 62, 65, 84], "name": [2, 4, 5, 8, 10, 11, 31, 33, 34, 38, 43, 44, 48, 52, 53, 54, 61, 65, 70, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 93, 94, 96, 97], "set_fit_request": [2, 36, 38, 64, 65], "str": [2, 3, 4, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 48, 52, 53, 54, 58, 60, 61, 63, 65, 70, 74, 77, 78, 84, 88, 89, 90, 97], "unchang": [2, 34, 38, 65, 97], "relev": [2, 14, 24, 38, 65, 85], "enable_metadata_rout": [2, 38, 65], "set_config": [2, 38, 65], "meta": [2, 38, 65], "rais": [2, 4, 10, 11, 31, 34, 38, 41, 44, 65, 77, 84], "alia": [2, 34, 38, 65], "metadata_rout": [2, 38, 65], "retain": [2, 38, 48, 65], "chang": [2, 34, 37, 38, 41, 65, 73, 77, 78, 82, 84, 90, 91, 96, 97], "version": [2, 4, 5, 7, 8, 9, 13, 19, 22, 27, 32, 34, 36, 38, 40, 41, 48, 51, 52, 63, 65, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97], "sub": [2, 38, 60, 65], "pipelin": [2, 38, 65, 93], "otherwis": [2, 5, 8, 31, 33, 34, 37, 38, 39, 45, 47, 48, 55, 62, 65, 67, 69, 70, 74, 82, 84, 96], "updat": [2, 11, 34, 37, 38, 65, 76, 78, 85], "set_param": [2, 36, 38, 51, 52, 64, 65], "simpl": [2, 34, 38, 39, 53, 63, 65, 78, 79, 81, 82, 85, 88, 91, 93, 95, 96], "well": [2, 3, 8, 34, 38, 41, 42, 53, 55, 61, 63, 65, 70, 73, 74, 76, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91], "nest": [2, 34, 38, 49, 65, 71, 73, 74, 97], "latter": [2, 34, 38, 65, 91], "compon": [2, 38, 65], "__": [2, 38, 65], "set_score_request": [2, 64, 65], "structur": [3, 62, 81, 95], "unobserv": 3, "less": [3, 4, 8, 29, 37, 44, 53, 62, 63, 67, 69, 73, 79, 81, 83, 84, 85, 86, 90, 97], "channel": [3, 77, 86], "character": 3, "flip": 3, "nm": 3, "invers": [3, 8, 33, 42, 48, 54, 79, 83, 96], "inv": 3, "confident_joint": [3, 20, 33, 39, 48, 54, 55, 76, 84, 86], "un": 3, "under": [3, 8, 34, 38, 54, 61, 62, 79, 91], "joint": [3, 33, 39, 42, 48, 54, 55, 83], "num_label_issu": [3, 37, 39, 55, 70, 74, 76], "estimation_method": [3, 37], "off_diagon": 3, "multi_label": [3, 33, 39, 48, 49, 55, 89], "don": [3, 75, 79, 81, 82, 85, 86, 90, 93], "statis": 3, "compute_confident_joint": [3, 33, 39, 48, 55, 86], "off": [3, 39, 48, 60, 85, 86, 90, 91], "j": [3, 4, 33, 34, 38, 39, 55, 58, 61, 62, 71, 73, 74, 78, 79, 86, 94, 97], "confident_learn": [3, 39, 55, 86], "off_diagonal_calibr": 3, "calibr": [3, 39, 48, 53, 88], "cj": [3, 42, 48], "axi": [3, 29, 42, 44, 46, 67, 70, 77, 78, 79, 84, 85, 86, 88, 89, 91, 93, 94], "bincount": [3, 78, 79, 86, 88, 89], "alwai": [3, 8, 34, 38, 48, 77, 86, 93, 95, 96], "estimate_issu": 3, "over": [3, 8, 34, 37, 38, 60, 61, 67, 69, 79, 81, 83, 84, 85, 86, 91, 93, 95], "As": [3, 5, 75, 78, 79, 82, 86, 93, 97], "add": [3, 4, 5, 10, 11, 34, 38, 52, 61, 77, 78, 79, 82, 84, 85, 86, 89, 96], "approach": [3, 33, 37, 39, 81, 86, 89, 91, 93, 95], "custom": [3, 5, 8, 9, 28, 34, 37, 38, 44, 47, 63, 79, 82, 86, 93, 96], "know": [3, 78, 79, 81, 82, 84, 85, 86, 88, 93], "cut": [3, 60, 75, 86], "off_diagonal_custom": 3, "tl": 3, "dr": 3, "sometim": [3, 90, 91, 97], "underestim": 3, "few": [3, 61, 75, 79, 84, 88, 89, 90, 91, 97], "4": [3, 4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 43, 44, 47, 57, 58, 60, 61, 63, 66, 73, 83, 84, 89, 94, 97], "detail": [3, 4, 8, 12, 14, 30, 33, 34, 38, 44, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 69, 70, 71, 75, 76, 77, 89, 91, 97], "num_issu": [3, 5, 37, 77, 78, 79, 81, 82, 85, 86], "calibrate_confident_joint": 3, "up": [3, 5, 8, 15, 24, 25, 28, 39, 44, 53, 83, 84, 90, 93, 96, 97], "p_": [3, 33, 39], "pair": [3, 4, 8, 33, 39, 86], "v": [3, 8, 37, 54, 55, 57, 63, 78, 79, 89, 90, 91, 92], "rest": [3, 4, 5, 7, 8, 9, 32, 54, 55, 57, 65, 78, 79, 81, 82, 84, 85, 86, 88, 93, 95, 96], "fashion": [3, 4, 67, 95], "2x2": 3, "incorrectli": [3, 33, 54, 55, 58, 81, 97], "calibrated_cj": 3, "c": [3, 8, 47, 55, 63, 75, 77, 78, 79, 81, 82, 84, 86, 89, 90, 91, 92, 93, 95], "whose": [3, 4, 8, 26, 34, 38, 42, 47, 53, 57, 60, 66, 69, 73, 74, 77, 78, 79, 81, 82, 84, 85, 86, 89, 90, 91, 94, 97], "truli": [3, 91, 94], "estimate_joint": [3, 33, 86], "joint_estim": 3, "confident_joint_distribut": 3, "recal": [3, 55, 61, 86, 90, 92, 94, 97], "return_indices_of_off_diagon": 3, "frequenc": [3, 24, 53, 54, 61, 70, 90, 91], "done": [3, 8, 65, 78, 84, 86, 89, 91, 92], "overfit": [3, 8, 58, 61, 77, 78, 79, 81, 82, 85, 92, 95], "classifict": 3, "singl": [3, 4, 10, 24, 33, 34, 38, 44, 45, 48, 53, 54, 60, 61, 62, 63, 73, 77, 78, 84, 86, 89, 90, 95], "baselin": [3, 34, 39, 91, 93, 96], "proxi": 3, "union": [3, 4, 10, 44, 48, 49, 55, 61, 65, 69, 73, 84], "tupl": [3, 29, 34, 38, 42, 43, 45, 47, 48, 53, 55, 61, 69, 71, 73, 74, 77, 97], "confident_joint_count": 3, "indices_off_diagon": 3, "simplif": 3, "effici": [3, 4, 8, 37, 42, 53, 67, 69, 75, 84, 85, 94, 96], "practic": [3, 79, 85, 86, 91, 93, 95, 96], "complet": [3, 77, 78, 79, 81, 82, 84, 85, 86, 89, 90, 93], "gist": 3, "cj_ish": 3, "guess": [3, 42, 86, 88], "8": [3, 4, 5, 6, 43, 44, 45, 47, 57, 71, 73, 77, 78, 79, 81, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "parallel": [3, 39, 61, 71, 83], "again": [3, 52, 84, 91, 95], "simplifi": [3, 12], "understand": [3, 7, 33, 54, 61, 79, 86, 93, 94, 97], "100": [3, 34, 38, 63, 78, 79, 81, 83, 84, 85, 86, 89, 90, 91, 94, 95, 96, 97], "optim": [3, 34, 35, 38, 52, 85, 88], "speed": [3, 39, 83, 84, 93, 96], "dtype": [3, 21, 23, 24, 29, 34, 38, 47, 48, 57, 73, 77, 90], "enumer": [3, 34, 38, 77, 78, 79, 85, 97], "s_label": 3, "confident_bin": 3, "6": [3, 4, 38, 44, 48, 73, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "num_confident_bin": 3, "argmax": [3, 39, 63, 67, 70, 77, 84, 86, 90, 91, 94], "elif": 3, "estimate_lat": 3, "py_method": [3, 42], "cnt": [3, 42], "1d": [3, 4, 10, 14, 37, 39, 44, 45, 48, 49, 57, 66, 77, 95], "eqn": [3, 42], "margin": [3, 39, 42, 44, 63], "marginal_p": [3, 42], "shorthand": [3, 11], "proport": [3, 8, 33, 54, 86, 92], "poorli": [3, 42, 95], "inv_noise_matrix": 3, "estimate_py_and_noise_matrices_from_prob": [3, 86], "variabl": [3, 5, 12, 25, 48, 65, 66, 77, 78, 81, 86, 89, 93], "exact": [3, 42, 78, 79, 81, 85, 95], "within": [3, 4, 8, 13, 34, 35, 38, 40, 55, 60, 69, 71, 73, 78, 79, 84, 85, 90, 94], "percent": 3, "often": [3, 33, 42, 54, 84, 86, 92, 94], "estimate_confident_joint_and_cv_pred_proba": 3, "mani": [3, 8, 48, 49, 61, 77, 78, 81, 82, 84, 85, 89, 90, 91, 93, 96], "wai": [3, 4, 52, 75, 76, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 92, 95, 96], "pro": 3, "con": 3, "pred_proba": [3, 92], "combin": [3, 33, 78, 83, 84, 85, 86, 92, 93], "becaus": [3, 42, 48, 60, 82, 84, 86, 88, 90], "littl": [3, 37, 83, 90, 97], "uniform": [3, 63, 83, 84, 86], "20": [3, 5, 74, 77, 82, 83, 84, 85, 86, 90, 93, 94, 97], "Such": [3, 85, 91], "bound": [3, 21, 23, 34, 38, 47, 57, 58, 60, 61, 90], "reason": [3, 20, 34, 38], "comment": [3, 47, 97], "end": [3, 4, 34, 38, 61, 85, 91, 94, 97], "file": [3, 4, 10, 36, 37, 51, 61, 77, 78, 81, 82, 83, 84, 90, 91, 94, 95, 97], "estimate_py_noise_matrices_and_cv_pred_proba": [3, 86], "handl": [3, 4, 5, 8, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 37, 38, 76, 78, 79, 81, 82, 85, 86, 94, 95, 97], "five": [3, 58, 61, 86, 90], "estimate_cv_predicted_prob": [3, 86], "estimate_noise_matric": 3, "get_confident_threshold": [3, 36, 37], "amongst": [3, 8, 90], "confident_threshold": [3, 8, 20, 37, 62], "unifi": 4, "audit": [4, 7, 10, 11, 14, 77, 80, 81, 82, 84, 85, 86, 89, 90, 93], "kind": [4, 5, 77, 78, 81, 82, 83, 85, 86], "addit": [4, 5, 7, 8, 9, 11, 30, 32, 34, 38, 44, 49, 53, 61, 71, 77, 78, 81, 82, 86, 88, 91, 92, 95, 96], "depend": [4, 5, 7, 8, 9, 10, 11, 32, 36, 39, 41, 48, 51, 55, 62, 65, 66, 75], "instal": [4, 5, 7, 8, 9, 32, 34, 36, 37, 38, 39, 51, 52, 67, 69], "pip": [4, 5, 7, 9, 32, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "development": [4, 5, 7, 9, 32], "git": [4, 5, 7, 9, 32, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 95, 96], "github": [4, 5, 7, 9, 32, 34, 35, 48, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96], "com": [4, 5, 7, 9, 32, 34, 35, 37, 41, 48, 62, 75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "egg": [4, 5, 7, 9, 32, 75, 83], "label_nam": [4, 5, 6, 8, 10, 16, 29, 75, 77, 78, 79, 81, 82, 84, 85, 86, 89, 90, 93], "image_kei": [4, 85], "interfac": [4, 75, 84, 86], "librari": [4, 8, 38, 58, 61, 62, 75, 78, 82, 83, 84, 96], "goal": [4, 93], "track": [4, 5, 11, 12, 75, 78, 83, 84, 86], "intermedi": [4, 7, 79], "statist": [4, 8, 11, 20, 24, 33, 53, 54, 61, 79, 81, 82, 86], "convert": [4, 10, 31, 34, 38, 45, 46, 49, 53, 60, 69, 73, 76, 77, 82, 83, 84, 85, 88, 89, 90, 96], "hug": [4, 10, 85], "face": [4, 10, 14, 83, 85, 89], "kei": [4, 5, 8, 10, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 38, 44, 53, 54, 60, 62, 78, 79, 82, 84, 85, 86, 88, 90], "string": [4, 8, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 38, 48, 53, 54, 66, 70, 73, 74, 81, 82, 84, 88, 89, 96, 97], "dictionari": [4, 5, 8, 10, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 34, 38, 43, 48, 53, 54, 57, 58, 60, 61, 78, 79, 81, 82, 86, 88, 89, 90], "path": [4, 10, 34, 37, 38, 61, 77, 78, 84, 90], "local": [4, 5, 10, 34, 35, 38, 77, 78, 79, 83, 84, 85, 86, 88, 89, 91, 93, 97], "text": [4, 5, 8, 10, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 44, 62, 71, 73, 74, 75, 78, 79, 80, 83, 84, 86, 87, 88, 91], "txt": [4, 10, 97], "csv": [4, 10, 81, 82, 93, 95, 96], "json": [4, 10], "hub": [4, 10], "multiclass": [4, 10, 13, 44, 48, 53, 89], "regress": [4, 5, 10, 12, 14, 19, 28, 31, 78, 79, 82, 87, 88, 91, 96], "multilabel": [4, 10, 12, 13, 19, 23, 31, 45, 89], "imag": [4, 7, 33, 38, 58, 60, 61, 62, 67, 69, 70, 75, 78, 79, 83, 84, 87, 88, 89, 90, 92, 94], "point": [4, 5, 8, 16, 24, 34, 38, 78, 79, 81, 82, 84, 85, 86, 88], "field": [4, 8, 34, 38], "themselv": [4, 93, 95, 96], "cleanvis": [4, 8], "level": [4, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 33, 47, 71, 73, 79, 85, 87, 89, 94], "load_dataset": [4, 10, 85], "glue": 4, "sst2": 4, "properti": [4, 10, 11, 31, 34, 38], "has_label": [4, 10], "class_nam": [4, 10, 18, 33, 54, 61, 70, 74, 75, 83, 86, 90, 94, 97], "empti": [4, 10, 42, 53, 79, 84, 89], "find_issu": [4, 5, 6, 8, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 75, 77, 78, 79, 81, 82, 84, 85, 86, 89, 93], "knn_graph": [4, 8, 14, 16, 17, 24, 26, 29, 81], "issue_typ": [4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 77, 78, 79, 81, 82, 84, 85, 86, 89, 93], "sort": [4, 14, 37, 39, 44, 53, 55, 58, 60, 61, 63, 69, 71, 73, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97], "common": [4, 11, 14, 79, 80, 83, 84, 86, 89, 90, 94], "real": [4, 14, 75, 78, 79, 84, 86, 88, 93, 94], "world": [4, 14, 75, 78, 79, 84, 86, 88, 93, 94], "interact": [4, 14, 82, 84], "embed": [4, 8, 14, 62, 75, 77, 78, 79, 81, 82, 86, 89, 93, 96], "thereof": [4, 14], "insight": [4, 14, 61, 88], "act": [4, 8, 60, 78], "issuefind": [4, 13, 14, 30], "logic": [4, 12, 37, 39, 67, 69], "best": [4, 14, 43, 53, 63, 78, 79, 81, 82, 84, 85, 88, 89, 91, 93, 95, 96, 97], "2d": [4, 14, 37, 44, 45, 47, 48, 53, 77, 89, 95], "num_exampl": [4, 14, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 33, 54, 77, 78, 79, 81, 82, 85, 86], "properli": [4, 8, 37, 43, 48, 49, 67, 77, 78, 79, 81, 82, 84, 85, 86, 89, 91, 93, 94], "respect": [4, 34, 38, 58, 61, 77, 78, 79, 81, 82, 85, 86, 89, 90], "lexicograph": [4, 43, 48, 77, 78, 79, 81, 82, 85, 86, 89], "represent": [4, 8, 14, 31, 34, 38, 45, 55, 75, 77, 78, 79, 82, 84, 85, 86, 91, 96], "num_featur": [4, 14, 34, 38, 52], "distanc": [4, 8, 14, 16, 24, 26, 29, 46, 60, 62, 81, 91], "nearest": [4, 8, 14, 21, 24, 26, 46, 62, 79, 82, 91], "neighbor": [4, 8, 14, 16, 21, 24, 26, 46, 62, 78, 79, 81, 82, 84, 85, 91], "graph": [4, 8, 11, 14, 16, 24, 29], "squar": [4, 48, 65, 83, 93], "csr": 4, "evenli": 4, "omit": [4, 60, 61, 85, 90], "itself": [4, 34, 38, 90], "three": [4, 8, 33, 53, 54, 65, 70, 77, 78, 79, 81, 83, 86, 88, 92, 93, 94, 95, 97], "indptr": 4, "wise": 4, "start": [4, 5, 8, 31, 34, 35, 38, 44, 75, 81, 89, 97], "th": [4, 43, 47, 48, 53, 55, 58, 60, 61, 62, 71, 73, 74, 82, 89, 90, 97], "ascend": [4, 33, 54, 85, 86], "segment": [4, 67, 69, 70, 87], "reflect": [4, 81, 82, 88, 90, 91, 93, 95, 96], "maintain": 4, "posit": [4, 34, 38, 46, 48, 61, 83, 91], "nearestneighbor": [4, 8, 16, 62, 81, 91], "kneighbors_graph": [4, 16, 81], "illustr": 4, "todens": 4, "second": [4, 44, 48, 61, 63, 78, 84, 86, 97], "duplic": [4, 7, 19, 20, 34, 38, 75, 78, 86, 93], "explicit": 4, "precend": 4, "construct": [4, 5, 8, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 34, 38, 44, 52], "neither": [4, 8, 12, 90], "nor": [4, 8, 12], "collect": [4, 8, 11, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 53, 84, 88, 97], "unspecifi": [4, 14, 39, 55], "interest": [4, 14, 20, 70, 74, 82, 86, 93, 94, 95, 96, 97], "constructor": [4, 8, 14, 21, 28], "issuemanag": [4, 7, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30], "respons": [4, 14, 20, 65, 66, 83, 93, 97], "random_st": [4, 77, 78, 79, 85, 86, 89, 91, 95], "lab": [4, 6, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 37, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 93], "comprehens": [4, 75, 85, 89, 93], "nbr": 4, "n_neighbor": [4, 8, 16, 62], "metric": [4, 8, 17, 24, 29, 48, 52, 61, 62, 77, 81, 82, 85, 86, 93, 95, 96], "euclidean": [4, 8, 60, 62, 81], "mode": [4, 16, 34, 37, 38, 91], "4x4": 4, "float64": [4, 24, 34, 38, 73], "compress": [4, 8, 48, 67, 69], "toarrai": 4, "NOT": [4, 37, 82], "23606798": 4, "41421356": 4, "configur": [4, 14, 44, 79], "suppos": [4, 8, 58, 91, 93, 95, 96], "who": [4, 60, 81, 86, 95, 97], "manag": [4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 78], "clean_learning_kwarg": [4, 8, 21, 28, 93], "labelissuemanag": [4, 8, 12, 19, 21], "prune_method": [4, 76], "prune_by_noise_r": [4, 39, 55, 86], "report": [4, 5, 9, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 54, 74, 75, 77, 78, 79, 81, 82, 86, 89, 93, 97], "include_descript": [4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30], "show_summary_scor": [4, 30], "show_all_issu": [4, 30], "summari": [4, 5, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 51, 52, 54, 59, 68, 69, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 85, 86, 90, 93, 94, 97], "show": [4, 5, 24, 34, 38, 43, 48, 61, 70, 74, 79, 81, 82, 83, 84, 85, 86, 88, 91, 93, 94, 95, 97], "top": [4, 8, 33, 37, 39, 48, 55, 58, 61, 63, 70, 74, 75, 77, 78, 79, 81, 82, 83, 84, 86, 90, 91, 93, 96, 97], "suffer": [4, 8, 11, 20, 55, 63, 74, 97], "onc": [4, 20, 33, 34, 38, 78, 84, 86, 89, 90, 95], "familiar": 4, "overal": [4, 5, 8, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 44, 53, 54, 57, 60, 61, 65, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 90, 97], "sever": [4, 5, 8, 10, 11, 20, 34, 37, 38, 39, 57, 60, 62, 63, 69, 73, 75, 77, 78, 79, 81, 82, 83, 84, 86, 90, 91, 95, 96, 97], "found": [4, 5, 8, 11, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 48, 75, 77, 78, 79, 81, 82, 84, 85, 89, 91, 93, 95, 96, 97], "With": [4, 37, 82, 86, 88, 93, 94, 96, 97], "usag": [4, 37, 52], "issue_summari": [4, 5, 8, 11, 78], "dataissu": [4, 11, 13, 14, 30], "outlier": [4, 7, 12, 19, 20, 29, 40, 63, 75, 78, 79, 86, 87, 93], "someth": [4, 5, 34, 38, 63, 90], "123": [4, 78, 79], "456": [4, 77, 95, 96], "nearest_neighbor": 4, "7": [4, 44, 45, 52, 71, 73, 77, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97], "9": [4, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 44, 45, 57, 71, 73, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "distance_to_nearest_neighbor": [4, 78, 79, 81, 82, 85, 86], "789": 4, "get_issu": [4, 8, 11, 77, 79, 81, 82, 84, 85, 89, 93], "issue_nam": [4, 5, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 78, 79], "focu": [4, 11, 82, 94, 97], "full": [4, 8, 11, 37, 61, 85, 97], "summar": [4, 11, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 33, 54, 70, 74, 75, 94], "valueerror": [4, 10, 11, 31, 41, 44, 84], "specific_issu": [4, 11], "exhibit": [4, 5, 8, 11, 70, 79, 81, 82, 85, 86, 90], "lie": [4, 8, 62, 63, 77, 78, 79, 81, 82, 85, 86, 96], "directli": [4, 12, 14, 30, 31, 37, 52, 53, 79, 82, 89, 90, 93, 96], "compar": [4, 53, 62, 73, 78, 79, 81, 86, 90], "get_issue_summari": [4, 11, 79], "get_info": [4, 11, 79, 82], "yet": [4, 15, 19, 25, 83, 88], "list_possible_issue_typ": [4, 12, 13], "regist": [4, 5, 12, 13, 15, 25, 34, 38, 78], "rtype": [4, 12, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38], "registri": [4, 12, 13], "list_default_issue_typ": [4, 12, 13], "folder": [4, 77, 78, 85], "load": [4, 10, 37, 61, 83, 84, 85, 86, 90, 91, 94, 97], "futur": [4, 8, 20, 34, 38, 53, 75, 77, 78, 82, 84, 96], "overwrit": [4, 78], "separ": [4, 33, 44, 57, 78, 79, 84, 85, 90, 92], "static": 4, "rememb": [4, 82, 84, 86], "part": [4, 8, 34, 38, 39, 58, 60, 61, 77, 78, 83, 94, 97], "ident": [4, 8, 20, 48, 82], "walk": 5, "alongsid": [5, 34, 38, 78, 84], "pre": [5, 6, 8, 34, 38, 78, 79, 85, 93, 94, 97], "runtim": [5, 34, 37, 38, 65, 67, 69, 77, 84, 85], "issue_manager_factori": [5, 12, 78], "myissuemanag": [5, 12], "myissuemanagerforregress": 5, "decor": [5, 12], "ll": [5, 44, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "thing": [5, 38, 86, 93, 96], "next": [5, 53, 75, 77, 81, 82, 84, 88, 90, 93, 95, 96, 97], "dummi": 5, "randint": [5, 29, 44, 78, 79, 84], "mark": [5, 8, 76, 90, 91, 93], "regard": [5, 79, 86], "rand": [5, 44, 78, 79], "is_": [5, 8, 78], "_issu": [5, 8, 78], "issue_score_kei": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 78], "whole": [5, 24, 34, 38, 79], "make_summari": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 78], "popul": [5, 79, 82], "verbosity_level": [5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "std": [5, 90], "raw_scor": 5, "bit": 5, "involv": [5, 37, 70, 74, 84, 89], "intermediate_arg": 5, "min": [5, 44, 60, 73, 78, 84, 91], "sin_filt": 5, "sin": 5, "arang": 5, "kernel": 5, "affect": [5, 8, 34, 38, 67, 73, 82, 84], "global": [5, 20, 34, 38], "easili": [5, 42, 76, 77, 79, 81, 82, 86, 88, 89, 91, 92, 93, 94, 95, 96], "hard": [5, 38, 83, 91], "sai": [5, 8, 34, 38, 89, 94], "anoth": [5, 20, 33, 37, 47, 60, 63, 81, 82, 84, 86, 88, 91, 96], "try": [5, 8, 37, 39, 52, 53, 67, 69, 75, 79, 81, 82, 84, 85, 86, 94], "iid": [5, 7, 24, 81, 86], "won": [5, 34, 38, 78, 79, 84, 89], "issue_manag": [5, 8, 9, 11, 13, 16, 17, 18, 21, 23, 24, 25, 26, 28, 29, 78], "instanti": [5, 14, 37, 52, 62, 77, 79, 81, 96], "477762": 5, "286455": 5, "term": [5, 8, 42, 48, 61, 77, 78, 79, 81, 82, 85, 86], "4778": 5, "is_basic_issu": 5, "basic_scor": 5, "13": [5, 17, 26, 77, 78, 79, 81, 82, 83, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97], "003042": 5, "058117": 5, "11": [5, 52, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "121908": 5, "15": [5, 46, 65, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97], "169312": 5, "17": [5, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 96, 97], "229044": 5, "2865": 5, "is_intermediate_issu": 5, "intermediate_scor": 5, "000000": [5, 78, 79, 83, 86], "007059": 5, "009967": 5, "010995": 5, "087332": 5, "016296": 5, "03947": 5, "019459": 5, "794251": 5, "underperform": [6, 7, 29], "group": [6, 7, 24, 29, 83, 90, 97], "dbscan": [6, 8, 29, 84], "hdbscan": [6, 84], "etc": [6, 8, 20, 34, 38, 42, 52, 53, 71, 75, 78, 79, 81, 82, 84, 86, 89, 93], "sensit": [6, 8, 46], "ep": [6, 29, 61], "radiu": 6, "min_sampl": [6, 29], "datalab": [6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 75, 77, 84, 85, 88, 93, 95, 96], "kmean": [6, 84], "your_data": 6, "get_pred_prob": 6, "n_cluster": [6, 29, 84], "cluster_id": [6, 8, 29, 84], "labels_": 6, "underperforming_group": [6, 8, 12, 19, 79, 81, 82, 84, 85, 86], "search": [7, 8, 18, 24, 25, 47, 65, 84, 92], "nondefault": 7, "Near": [7, 84], "imbal": [7, 19, 57, 62, 63, 79], "null": [7, 12, 19, 79, 82, 85, 86], "valuat": [7, 16], "togeth": [7, 8, 42, 78, 79, 81, 82, 85, 86, 93, 96, 97], "built": [7, 44], "own": [7, 34, 36, 38, 51, 57, 58, 61, 67, 71, 77, 79, 81, 82, 84, 85, 88, 89, 93, 94, 95, 96, 97], "prerequisit": 7, "basic": [7, 38, 52, 81, 82, 91], "page": [8, 79, 84, 86], "variou": [8, 11, 28, 36, 49, 51, 75, 78, 79, 81, 82, 83, 86, 88, 90, 95], "why": [8, 82], "matter": [8, 33, 54, 82, 96], "_score": 8, "flag": [8, 20, 24, 39, 44, 54, 55, 58, 65, 75, 77, 78, 79, 81, 82, 83, 85, 86, 90, 91, 93, 94, 96], "badli": [8, 60, 97], "code": [8, 34, 38, 42, 48, 52, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "issue_scor": 8, "outlier_scor": [8, 26, 78, 79, 81, 82, 85, 86, 91], "atyp": [8, 62, 78, 79, 81, 82, 85, 86, 91], "datapoint": [8, 29, 39, 44, 48, 63, 66, 75, 77, 78, 79, 81, 82, 84, 92, 93, 95, 96], "is_issu": [8, 20], "is_outlier_issu": [8, 78, 79, 81, 82, 85, 86], "annot": [8, 33, 43, 53, 54, 55, 57, 58, 60, 61, 70, 73, 74, 75, 77, 78, 79, 81, 82, 84, 85, 86, 87, 90, 94], "transform": [8, 44, 46, 48, 62, 63, 79, 82, 85, 91, 95, 96, 97], "dissimilar": [8, 81, 82], "preced": 8, "cosin": [8, 62, 91], "incorrect": [8, 60, 63, 66, 77, 78, 79, 81, 82, 85, 86, 90, 93, 95], "due": [8, 37, 39, 63, 67, 69, 77, 78, 79, 81, 82, 85, 86, 93], "appear": [8, 33, 43, 54, 55, 58, 66, 79, 81, 82, 85, 93, 94], "likelihood": [8, 37, 39, 55, 60, 62, 63, 67, 71], "now": [8, 37, 76, 77, 79, 88, 90, 91, 93, 95, 96, 97], "u": [8, 77, 78, 81, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97], "token": [8, 47, 69, 70, 71, 72, 73, 74, 84, 86, 87], "calcul": [8, 16, 24, 37, 44, 53, 57, 58, 60, 61, 62, 65, 69, 83, 85], "hamper": [8, 83, 85], "analyt": [8, 75, 84, 88], "lead": [8, 60, 63, 85, 90], "draw": [8, 78, 79], "conclus": [8, 82], "veri": [8, 33, 54, 58, 60, 78, 79, 81, 82, 84, 85, 86, 88, 91, 93, 96], "rare": [8, 39, 61, 78, 79, 81, 82, 84, 85, 86], "anomal": [8, 63, 78, 79, 81, 82, 85, 86], "articl": [8, 37, 84], "ai": [8, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 93, 95, 96, 97], "blog": 8, "unexpect": [8, 34, 38, 82], "consequ": 8, "inspect": [8, 77, 79, 85, 86, 90, 93, 96], "neg": [8, 60, 61, 78, 79, 83], "extrem": [8, 78, 79, 81, 82, 84, 85, 86], "rel": [8, 33, 53, 54, 62, 78, 79, 81, 82, 85, 86, 91], "record": [8, 34, 38, 77, 81, 93], "abbrevi": 8, "misspel": 8, "typo": [8, 74], "resolut": 8, "video": [8, 83], "audio": [8, 78, 79, 84, 87], "minor": [8, 47], "variat": 8, "translat": 8, "d": [8, 46, 81, 82, 86, 89, 93, 95, 97], "constant": [8, 29, 65], "median": [8, 28, 46], "question": [8, 20, 75, 86], "nearli": [8, 20, 79, 81, 82, 85], "awar": [8, 76, 86], "presenc": [8, 86], "signific": [8, 81, 82, 86], "violat": [8, 81, 82, 86], "assumpt": [8, 81, 82, 86], "changepoint": [8, 81, 82, 86], "shift": [8, 81, 82, 86], "drift": [8, 79, 81, 86], "autocorrel": [8, 81, 82, 86], "almost": [8, 81, 82, 86], "adjac": [8, 81, 82, 86], "tend": [8, 33, 42, 81, 82, 86, 94, 97], "sequenti": [8, 34, 38, 52, 85], "gap": 8, "b": [8, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 33, 47, 48, 73, 81, 82, 83, 86, 92, 95, 97], "x1": [8, 58, 61, 90], "x2": [8, 58, 61, 90], "10th": 8, "100th": 8, "90": [8, 73, 81, 85, 86, 92, 93, 94, 95], "similarli": [8, 34, 38, 78, 81, 84, 85, 90], "math": [8, 85], "behind": [8, 62, 86], "fundament": 8, "proper": [8, 48, 53, 58, 61, 82, 85, 88, 90, 95], "closer": [8, 60, 90], "scenario": [8, 63, 78, 79], "underli": [8, 62, 71, 73, 97], "stem": [8, 62, 91], "evolv": 8, "influenc": 8, "accordingli": 8, "emploi": [8, 89, 91], "partit": [8, 92], "ahead": 8, "good": [8, 34, 38, 46, 52, 54, 60, 63, 67, 69, 70, 75, 81, 82, 85], "fix": [8, 53, 82, 86, 93, 96], "problem": [8, 37, 44, 70, 75, 78, 79, 82, 84, 85], "deploy": [8, 86, 93, 95, 96], "overlook": [8, 60, 90], "fact": 8, "thu": [8, 33, 38, 54, 77, 81, 82, 86, 92, 95, 97], "diagnos": [8, 79, 84], "rarest": [8, 79], "q": [8, 90], "fall": [8, 60, 69, 73, 86, 91], "subpar": 8, "special": [8, 47], "techniqu": [8, 90], "smote": 8, "asymmetr": [8, 33], "too": [8, 39, 44, 62, 79, 84, 85, 90], "dark": [8, 94], "bright": [8, 97], "blurri": [8, 85], "abnorm": [8, 61, 85, 90], "cluster": [8, 16, 29], "slice": 8, "poor": 8, "subpopul": 8, "lowest": [8, 53, 61, 79, 84, 85, 88, 89, 90, 94], "get_self_confidence_for_each_label": [8, 44, 63], "power": [8, 81, 82, 83, 85, 86, 97], "r": [8, 37, 65, 78, 79, 93, 94], "tabular": [8, 75, 78, 79, 80, 84, 87, 88], "categor": [8, 62, 78, 79, 80, 84, 93, 95], "encod": [8, 45, 61, 67, 70, 81, 82, 84, 93, 94, 95, 96], "miss": [8, 25, 34, 38, 48, 58, 60, 81, 84, 90, 93], "pattern": 8, "contribut": [8, 16, 90], "isn": [8, 15, 25], "approxim": [8, 16, 37, 62, 88], "shaplei": [8, 16], "knn": [8, 11, 16, 24, 29, 62, 81, 91], "scalabl": 8, "sacrific": 8, "One": [8, 48, 62, 84], "quantif": 8, "exert": [8, 79], "possible_issue_typ": 8, "label_kwarg": 8, "outlier_kwarg": 8, "near_dupl": [8, 12, 17, 78, 79, 81, 82, 84, 85, 86], "near_duplicate_kwarg": 8, "non_iid": [8, 12, 24, 79, 81, 82, 85, 86], "non_iid_kwarg": 8, "class_imbal": [8, 12, 18, 79, 81, 82, 85, 86], "class_imbalance_kwarg": 8, "underperforming_group_kwarg": 8, "null_kwarg": 8, "health_summary_paramet": [8, 19, 21, 28], "health_summari": [8, 21, 33, 75, 83], "health_summary_kwarg": 8, "tandem": [8, 83], "view": [8, 34, 38, 39, 69, 71, 73, 75, 77, 78, 79, 81, 82, 83, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "ood_kwarg": 8, "outofdistribut": [8, 26, 62, 91], "outsid": [8, 89], "outlierissuemanag": [8, 12, 19, 26, 78], "nearduplicateissuemanag": [8, 12, 17, 19], "noniidissuemanag": [8, 12, 19, 24], "num_permut": [8, 24], "permut": [8, 24], "significance_threshold": [8, 24], "signic": 8, "noniid": [8, 19], "classimbalanceissuemanag": [8, 12, 18, 19], "underperforminggroupissuemanag": [8, 12, 19, 29], "determinin": 8, "neighbour": 8, "min_cluster_sampl": [8, 29], "filter_cluster_id": [8, 19, 29], "clustering_kwarg": [8, 29], "faq": [8, 75, 79, 81, 82, 85, 87], "nullissuemanag": [8, 12, 19, 25], "data_valuation_kwarg": 8, "data_valu": [8, 12, 19], "datavaluationissuemanag": [8, 12, 16, 19], "codeblock": 8, "demonstr": [8, 37, 78, 79, 82, 84, 85, 86, 88, 89, 90, 93, 94], "howev": [8, 34, 38, 48, 77, 81, 82, 85, 88, 92, 94, 95, 96], "mandatori": 8, "image_issue_types_kwarg": 8, "32": [8, 77, 78, 83, 88, 90, 94], "fewer": [8, 39, 48, 90], "vice": [8, 54], "versa": [8, 54], "light": [8, 83, 85, 90, 94], "29": [8, 83, 85, 88, 89, 90, 94, 97], "low_inform": [8, 85], "odd_aspect_ratio": [8, 85], "35": [8, 78, 83, 85, 88, 89, 90, 91, 94], "odd_siz": [8, 85], "10": [8, 16, 17, 21, 24, 29, 34, 35, 61, 62, 63, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "doc": [8, 34, 38, 75, 77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "data_issu": [9, 13, 14, 30, 78], "issue_find": [9, 13], "factori": [9, 13, 14], "except": [10, 34, 38, 52, 63, 78, 79, 85, 88], "dataformaterror": [10, 13], "add_not": 10, "with_traceback": 10, "tb": 10, "__traceback__": 10, "datasetdicterror": [10, 13], "datasetdict": 10, "usual": [10, 30, 85, 88, 93], "datasetloaderror": [10, 13], "dataset_typ": 10, "fail": 10, "hold": 10, "associ": [10, 14, 34, 38, 61, 88], "sublist": 10, "map_to_int": 10, "abc": [10, 20], "is_avail": [10, 85], "serv": [11, 14, 88], "central": [11, 97], "repositori": 11, "strategi": [11, 44, 84], "being": [11, 33, 34, 38, 39, 44, 47, 48, 63, 81, 84, 86, 93, 94, 95], "_infostrategi": 11, "basi": 11, "collect_statist": 11, "reus": [11, 20], "avoid": [11, 34, 37, 38, 39, 48, 55, 58, 61, 65, 67, 69, 78, 79, 84], "recomput": [11, 96], "weighted_knn_graph": 11, "issue_manager_that_computes_knn_graph": 11, "collect_issues_from_issue_manag": 11, "collect_issues_from_imagelab": 11, "imagelab": 11, "set_health_scor": 11, "health": [11, 21, 33, 54, 75], "get_data_statist": [11, 13], "concret": 12, "subclass": [12, 34, 38, 62, 78], "regressionlabelissuemanag": [12, 19, 27, 28], "multilabelissuemanag": [12, 19, 22, 23], "from_str": [12, 31, 40, 44], "my_issu": 12, "stabl": [13, 19, 22, 27, 36, 40, 48, 51, 62, 76], "unregist": 13, "instati": 14, "public": [14, 86, 90, 94, 97], "creation": [14, 38], "execut": [14, 34, 38, 78, 84, 90], "coordin": [14, 58, 60, 61, 90, 97], "behavior": [14, 33, 34, 38, 61, 84], "At": [14, 61, 84], "get_available_issue_typ": 14, "direct": [15, 25, 34, 38], "valuabl": 16, "vstack": [16, 48, 83, 84, 85, 86, 88, 89], "25": [16, 24, 34, 44, 46, 79, 83, 85, 86, 88, 89, 90, 94, 97], "classvar": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "short": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 47, 48], "data_valuation_scor": 16, "item": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 34, 38, 48, 78, 79, 84, 85, 86, 88, 89], "some_info_kei": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "additional_info_kei": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29], "default_threshold": [16, 19, 26], "arxiv": [16, 86], "ab": [16, 86, 90], "1911": 16, "07128": 16, "larger": [16, 65, 67, 69, 82, 83, 84, 85], "collect_info": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "info_to_omit": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "compos": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 34, 38, 82, 91, 96], "is_x_issu": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "x_score": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_a": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_b1": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "val_b2": [16, 17, 18, 20, 21, 23, 24, 26, 28, 29], "report_str": [16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30], "_": [17, 20, 21, 23, 24, 25, 28, 29, 44, 47, 48, 77, 78, 83, 85, 86, 89, 95], "near_duplicate_set": [17, 19, 78, 79, 81, 82, 84, 85, 86], "occurr": [17, 18, 20, 24, 25, 26, 29, 47], "median_nn_dist": 17, "near_duplicate_scor": [17, 78, 79, 81, 82, 84, 85, 86], "class_imbalance_scor": [18, 79], "bleed": [19, 22, 27, 36], "edg": [19, 22, 27, 36, 60, 75, 86, 97], "sharp": [19, 22, 27, 36], "get_health_summari": [19, 21], "ood": [19, 26, 62, 63, 78, 79, 82, 85, 86, 91], "simplified_kolmogorov_smirnov_test": [19, 24], "outlier_cluster_label": [19, 29], "no_underperforming_cluster_id": [19, 29], "set_knn_graph": [19, 29], "perform_clust": [19, 29], "get_worst_clust": [19, 29], "find_issues_with_predict": [19, 27, 28], "find_issues_with_featur": [19, 27, 28], "believ": [20, 94], "priori": [20, 86], "abstract": 20, "applic": [21, 53, 84, 86, 88, 97], "typevar": [21, 23, 34, 38, 47, 57, 60, 61], "scalartyp": [21, 23], "covari": [21, 23, 65, 93], "summary_dict": 21, "label_scor": [21, 23, 28, 77, 78, 79, 81, 82, 85, 86, 89, 93], "neighbor_histogram": 24, "non_neighbor_histogram": 24, "kolmogorov": 24, "smirnov": 24, "largest": [24, 37, 44, 63, 67, 69, 90, 94], "empir": [24, 43, 53], "cumul": 24, "ecdf": 24, "histogram": [24, 81, 93], "absolut": [24, 28], "dimension": [24, 48, 77, 86, 91], "trial": 24, "non_iid_scor": [24, 79, 81, 82, 86], "null_track": 25, "extend": [25, 45, 85, 90, 91, 97], "superclass": 25, "arbitrari": [25, 33, 69, 73, 78, 91, 93], "prompt": 25, "address": [25, 78, 79, 82, 84, 96], "enabl": [25, 38], "null_scor": [25, 79], "37037": 26, "q3_avg_dist": 26, "iqr_avg_dist": 26, "median_outlier_scor": 26, "multipli": 28, "deleg": 28, "confus": [29, 33, 34, 38, 39, 48, 61, 96, 97], "50": [29, 38, 84, 85, 86, 88, 90, 91, 93, 94, 97], "keepdim": [29, 84], "signifi": 29, "absenc": 29, "find_issues_kwarg": 29, "int64": [29, 77, 88], "npt": 29, "int_": 29, "id": [29, 53, 78, 84, 85, 88], "unique_cluster_id": 29, "_description_": 29, "performed_clust": 29, "worst_cluster_id": 29, "underperforming_group_scor": [29, 79], "datset": 30, "exclud": [30, 70, 74, 78, 84, 97], "get_report": 30, "qualnam": [31, 44], "boundari": [31, 44, 78, 79], "enum": [31, 44], "continu": [31, 82, 84, 85, 88, 90, 93, 95, 96, 97], "binari": [31, 44, 48, 55, 57, 86, 97], "simultan": [31, 93], "task_str": 31, "is_classif": 31, "__contains__": [31, 40, 44], "member": [31, 34, 38, 44, 78, 79], "typeerror": [31, 44], "12": [31, 44, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97], "__getitem__": [31, 40, 44], "match": [31, 33, 34, 38, 39, 44, 53, 54, 63, 78, 79, 83, 85, 90, 92, 94], "__iter__": [31, 40, 44], "__len__": [31, 40, 44], "alias": [31, 44], "is_regress": 31, "is_multilabel": 31, "overview": [33, 77, 79, 81, 82, 85, 88, 90, 91, 93, 95, 96, 97], "modifi": [33, 34, 37, 38, 48, 84, 86], "help": [33, 34, 38, 61, 75, 76, 77, 78, 81, 82, 83, 84, 85, 88, 89, 93, 94, 95, 96, 97], "rank_classes_by_label_qu": [33, 79], "merg": [33, 47, 75, 83, 84, 97], "find_overlapping_class": [33, 84, 86], "problemat": [33, 54, 70, 74, 77, 90, 97], "unnorm": [33, 54, 86], "abov": [33, 34, 37, 38, 48, 53, 60, 61, 63, 69, 73, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97], "model_select": [33, 44, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 91, 93, 95, 96], "cross_val_predict": [33, 38, 77, 78, 79, 81, 82, 84, 86, 88, 92, 93, 95, 96], "get_data_labels_from_dataset": 33, "yourfavoritemodel": [33, 86], "cv": [33, 44, 77, 78, 79, 81, 86, 88, 95], "df": [33, 48, 74, 77, 84], "overall_label_qu": [33, 54], "col": 33, "prob": [33, 47, 86, 92], "divid": [33, 54, 63], "label_nois": [33, 54], "human": [33, 83, 94, 97], "clearli": [33, 63, 85, 90, 94], "num": [33, 54, 83, 86], "overlap": [33, 75, 83, 84, 86], "ontolog": 33, "publish": [33, 97], "therefor": [33, 63], "vehicl": [33, 83], "truck": [33, 83, 91, 94], "intuit": [33, 54], "car": [33, 83, 90, 94], "frequent": [33, 53, 81, 84, 93], "characterist": 33, "l": [33, 34, 38, 58, 60, 61], "class1": 33, "class2": 33, "relationship": 33, "dog": [33, 48, 54, 56, 70, 83, 84, 91, 92, 97], "cat": [33, 48, 54, 56, 83, 84, 91, 92], "captur": [33, 77, 90, 91, 94], "co": [33, 34, 35], "noisy_label": [33, 78, 79, 89], "overlapping_class": 33, "descend": [33, 34, 38, 44, 54, 61], "overall_label_health_scor": [33, 54, 86], "suggest": [33, 53, 54, 60, 82, 84, 85, 93, 96], "half": [33, 34, 36, 38, 54, 83, 97], "health_scor": [33, 54], "classes_by_label_qu": [33, 79], "cnn": [34, 36, 38, 85], "cifar": [34, 35, 83, 91], "teach": [34, 35], "bhanml": 34, "blob": 34, "master": [34, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 95, 96], "call_bn": [34, 36], "bn": 34, "input_channel": 34, "n_output": 34, "dropout_r": 34, "top_bn": 34, "architectur": [34, 38], "shown": [34, 61, 78, 84, 88, 91, 92, 94, 97], "forward": [34, 35, 36, 38, 85, 88], "overridden": [34, 38], "although": [34, 38, 62, 81, 95], "recip": [34, 38], "afterward": [34, 38], "sinc": [34, 38, 41, 49, 54, 61, 69, 73, 84, 88, 89, 90, 92, 97], "former": [34, 38], "hook": [34, 38, 83], "silent": [34, 37, 38], "t_destin": [34, 36, 38], "__call__": [34, 36, 38, 40, 44], "add_modul": [34, 36, 38], "child": [34, 38], "fn": [34, 38, 61], "recurs": [34, 38, 44], "submodul": [34, 38], "children": [34, 36, 38, 97], "nn": [34, 35, 38, 85], "init": [34, 38, 86], "no_grad": [34, 38, 85, 91], "init_weight": [34, 38], "linear": [34, 38, 82, 85, 96], "fill_": [34, 38], "net": [34, 38, 77, 83, 85], "in_featur": [34, 38], "out_featur": [34, 38], "bia": [34, 38, 85], "tensor": [34, 35, 38, 77, 82, 85, 91, 96], "requires_grad": [34, 38], "bfloat16": [34, 36, 38], "cast": [34, 38, 77], "buffer": [34, 36, 38], "datatyp": [34, 38], "xdoctest": [34, 38], "undefin": [34, 38], "var": [34, 38], "buf": [34, 38], "20l": [34, 38], "1l": [34, 38], "5l": [34, 38], "call_super_init": [34, 36, 38], "immedi": [34, 38, 91], "compil": [34, 36, 38, 52], "cpu": [34, 36, 38, 39, 77, 85], "move": [34, 38, 44, 76, 83], "cuda": [34, 36, 38, 77, 85], "devic": [34, 38, 77, 85], "gpu": [34, 38, 77, 82, 96], "live": [34, 38], "copi": [34, 38, 65, 77, 78, 79, 81, 84, 89, 92, 93, 95], "doubl": [34, 36, 38], "dump_patch": [34, 36, 38], "eval": [34, 36, 38, 85, 89, 91], "dropout": [34, 38], "batchnorm": [34, 38], "grad": [34, 38], "extra_repr": [34, 36, 38], "line": [34, 38, 75, 78, 83, 88, 91, 97], "get_buff": [34, 36, 38], "target": [34, 35, 38, 65, 66, 91, 93], "throw": [34, 38], "get_submodul": [34, 36, 38], "explan": [34, 38], "fulli": [34, 38, 52, 84], "qualifi": [34, 38], "referenc": [34, 38], "attributeerror": [34, 38], "invalid": [34, 38, 82], "resolv": [34, 38, 97], "get_extra_st": [34, 36, 38], "state_dict": [34, 36, 38], "set_extra_st": [34, 36, 38], "build": [34, 38, 85, 94], "picklabl": [34, 38], "serial": [34, 38], "backward": [34, 38, 85], "break": [34, 38, 85, 90], "pickl": [34, 38, 90], "get_paramet": [34, 36, 38], "let": [34, 38, 62, 63, 77, 79, 81, 82, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "net_b": [34, 38], "net_c": [34, 38], "conv": [34, 38], "conv2d": [34, 38, 85], "16": [34, 38, 44, 69, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 94, 96, 97], "33": [34, 38, 83, 85, 90, 94], "kernel_s": [34, 38], "stride": [34, 38], "200": [34, 38, 63, 83, 90, 97], "diagram": [34, 38, 92], "degre": [34, 38], "queri": [34, 38, 79, 84, 85, 89], "named_modul": [34, 36, 38], "o": [34, 38, 46, 47, 77, 78, 79, 83, 84, 86, 89, 90, 97], "transit": [34, 38], "ipu": [34, 36, 38], "load_state_dict": [34, 36, 38], "strict": [34, 38, 44], "persist": [34, 38], "strictli": [34, 38], "inplac": [34, 38, 88], "preserv": [34, 38, 48], "namedtupl": [34, 38], "missing_kei": [34, 38], "unexpected_kei": [34, 38], "runtimeerror": [34, 38], "idx": [34, 38, 48, 49, 61, 78, 84, 85, 86, 88, 90, 91], "named_buff": [34, 36, 38], "prefix": [34, 38, 77, 97], "remove_dupl": [34, 38], "prepend": [34, 38], "running_var": [34, 38], "named_children": [34, 36, 38], "conv4": [34, 38], "conv5": [34, 38], "memo": [34, 38], "named_paramet": [34, 36, 38], "register_backward_hook": [34, 36, 38], "deprec": [34, 38, 41, 77, 82, 84, 96], "favor": [34, 38], "register_full_backward_hook": [34, 36, 38], "removablehandl": [34, 38], "register_buff": [34, 36, 38], "running_mean": [34, 38], "register_forward_hook": [34, 36, 38], "with_kwarg": [34, 38], "always_cal": [34, 38], "possibli": [34, 38, 81, 95], "fire": [34, 38, 83], "register_module_forward_hook": [34, 38], "regardless": [34, 38, 78, 79], "register_forward_pre_hook": [34, 36, 38], "And": [34, 38], "forward_pr": [34, 38], "register_module_forward_pre_hook": [34, 38], "gradient": [34, 38, 81, 85, 93], "grad_input": [34, 38], "grad_output": [34, 38], "technic": [34, 38], "caller": [34, 38], "register_module_full_backward_hook": [34, 38], "register_full_backward_pre_hook": [34, 36, 38], "backward_pr": [34, 38], "register_module_full_backward_pre_hook": [34, 38], "register_load_state_dict_post_hook": [34, 36, 38], "post": [34, 38], "incompatible_kei": [34, 38], "modif": [34, 38], "thrown": [34, 38], "register_modul": [34, 36, 38], "register_paramet": [34, 36, 38], "register_state_dict_pre_hook": [34, 36, 38], "keep_var": [34, 38], "requires_grad_": [34, 36, 38], "autograd": [34, 38], "freez": [34, 38, 77, 82, 96], "finetun": [34, 38], "gan": [34, 38], "share_memori": [34, 36, 38], "share_memory_": [34, 38], "destin": [34, 38], "shallow": [34, 38], "releas": [34, 38, 76, 77, 84], "design": [34, 38], "ordereddict": [34, 38], "detach": [34, 38, 85], "non_block": [34, 38], "memory_format": [34, 38], "channels_last": [34, 38], "Its": [34, 38, 44, 54, 60], "complex": [34, 38, 77], "integr": [34, 38, 75], "asynchron": [34, 38], "host": [34, 38], "pin": [34, 38, 82, 83, 96], "desir": [34, 38, 47, 61], "4d": [34, 38], "ignore_w": [34, 38], "determinist": [34, 38, 77], "1913": [34, 38], "3420": [34, 38], "5113": [34, 38], "2325": [34, 38], "env": [34, 38], "torch_doctest_cuda1": [34, 38], "gpu1": [34, 38], "1914": [34, 38], "5112": [34, 38], "2324": [34, 38], "float16": [34, 38], "cdoubl": [34, 38], "3741": [34, 38], "2382": [34, 38], "5593": [34, 38], "4443": [34, 38], "complex128": [34, 38], "6122": [34, 38], "1150": [34, 38], "to_empti": [34, 36, 38], "storag": [34, 38, 82, 96], "dst_type": [34, 38], "xpu": [34, 36, 38], "zero_grad": [34, 36, 38, 85], "set_to_non": [34, 38], "reset": [34, 38], "context": [34, 38, 90], "noisili": [35, 86], "han": 35, "2018": 35, "cifar_cnn": [35, 36], "loss_coteach": [35, 36], "y_1": 35, "y_2": 35, "forget_r": 35, "class_weight": 35, "logit": [35, 52, 85], "decim": [35, 48], "quickli": [35, 77, 81, 82, 84, 85, 89, 91, 94, 95, 97], "forget": [35, 44, 97], "rate_schedul": 35, "epoch": [35, 36, 38, 84, 85], "initialize_lr_schedul": [35, 36], "lr": [35, 36, 38], "001": [35, 63, 84], "250": [35, 78, 79, 86, 90], "epoch_decay_start": 35, "80": [35, 81, 89, 93, 94, 95], "schedul": 35, "adjust": [35, 39, 57, 62, 63, 75, 86], "beta": 35, "adam": 35, "adjust_learning_r": [35, 36], "alpha_plan": 35, "beta1_plan": 35, "forget_rate_schedul": [35, 36], "num_gradu": 35, "expon": 35, "tell": [35, 82, 85, 86, 96], "train_load": [35, 38], "model1": [35, 86], "optimizer1": 35, "model2": [35, 86], "optimizer2": 35, "dataload": [35, 85, 91], "parser": 35, "parse_arg": 35, "num_iter_per_epoch": 35, "print_freq": 35, "topk": 35, "top1": 35, "top5": 35, "test_load": 35, "offici": [36, 51, 97], "wish": [36, 51, 91, 94, 97], "adj_confident_thresholds_shar": [36, 37], "labels_shar": [36, 37], "pred_probs_shar": [36, 37], "labelinspector": [36, 37, 84], "get_num_issu": [36, 37], "get_quality_scor": [36, 37], "update_confident_threshold": [36, 37], "score_label_qu": [36, 37], "split_arr": [36, 37], "mnist_pytorch": 36, "get_mnist_dataset": [36, 38], "get_sklearn_digits_dataset": [36, 38], "simplenet": [36, 38], "batch_siz": [36, 37, 38, 67, 69, 84, 85, 91, 94], "log_interv": [36, 38], "momentum": [36, 38], "no_cuda": [36, 38], "test_batch_s": [36, 38, 85], "loader": [36, 38, 85], "set_predict_proba_request": [36, 38], "set_predict_request": [36, 38], "coteach": [36, 76], "mini": [37, 67, 69, 84], "low_self_confid": [37, 39, 55], "self_confid": [37, 39, 40, 44, 55, 57, 63, 71, 73, 84, 86, 95, 96], "conveni": [37, 77, 82, 96], "script": 37, "labels_fil": [37, 84], "pred_probs_fil": [37, 84], "quality_score_kwarg": 37, "num_issue_kwarg": 37, "return_mask": 37, "variant": [37, 53, 94], "read": [37, 41, 79, 84, 86, 91, 97], "zarr": [37, 84], "memmap": [37, 94], "pythonspe": 37, "mmap": [37, 84], "hdf5": 37, "further": [37, 54, 55, 57, 60, 61, 69, 70, 77, 84], "yourfil": 37, "npy": [37, 83, 84, 94], "mmap_mod": [37, 94], "tip": [37, 39, 52, 84], "save_arrai": 37, "your_arrai": 37, "disk": [37, 83, 84], "npz": [37, 97], "maxim": [37, 53, 67, 69, 94], "multiprocess": [37, 39, 55, 67, 69, 84, 85], "linux": [37, 67, 69], "physic": [37, 39, 67, 69, 90], "psutil": [37, 39, 67, 69], "labels_arrai": [37, 49], "predprob": 37, "pred_probs_arrai": 37, "back": [37, 61, 78, 84, 90, 91], "store_result": 37, "becom": [37, 91], "verifi": [37, 84, 88, 91], "long": [37, 53, 62, 88], "enough": [37, 48, 84], "chunk": [37, 92], "ram": [37, 83], "faster": [37, 62, 65, 67, 69, 84, 86], "end_index": 37, "labels_batch": 37, "pred_probs_batch": 37, "batch_result": 37, "indices_of_examples_with_issu": [37, 84], "shortcut": 37, "encount": [37, 39, 67], "1000": [37, 77, 82, 84, 91], "aggreg": [37, 40, 44, 53, 57, 60, 63, 73, 84, 86, 88], "fetch": [37, 77, 79], "seen": [37, 84, 91, 97], "far": [37, 53], "label_quality_scor": [37, 57, 60, 63, 66, 86, 90], "method1": 37, "method2": 37, "normalized_margin": [37, 39, 40, 44, 55, 57, 63, 71, 73], "low_normalized_margin": [37, 39, 55], "issue_indic": [37, 60, 85], "update_num_issu": 37, "arr": [37, 84], "chunksiz": 37, "convnet": 38, "bespok": [38, 52], "download": [38, 77, 84, 91], "mnist": [38, 75, 77, 83], "handwritten": 38, "digit": [38, 77, 83], "last": [38, 44, 58, 61, 78, 79, 84, 88, 90, 97], "sklearn_digits_test_s": 38, "64": [38, 81, 85, 86, 90, 94, 95], "01": [38, 63, 65, 77, 86, 89, 90, 91, 94], "templat": 38, "flexibli": 38, "among": [38, 53, 86], "test_set": 38, "Be": 38, "overrid": 38, "train_idx": [38, 48, 91], "train_label": [38, 91, 96], "scikit": [38, 48, 62, 75, 77, 78, 79, 81, 82, 84, 87, 93, 96], "encourag": [39, 55, 63, 66], "multilabel_classif": [39, 54, 55, 57, 63, 84, 89], "pred_probs_by_class": 39, "prune_count_matrix_col": 39, "rank_by_kwarg": [39, 55, 63, 86], "num_to_remove_per_class": [39, 55], "bad": [39, 55, 60, 63, 82, 84, 96], "seem": [39, 86, 89], "aren": 39, "confidence_weighted_entropi": [39, 40, 44, 55, 57, 63, 71, 73], "label_issues_idx": [39, 63], "entropi": [39, 41, 43, 44, 62, 63], "prune_by_class": [39, 55, 86], "predicted_neq_given": [39, 55, 86], "prune_counts_matrix": 39, "smallest": [39, 63], "unus": 39, "number_of_mislabeled_examples_in_class_k": 39, "delet": [39, 75, 84, 96], "thread": [39, 55], "window": [39, 77, 83], "shorter": [39, 58], "find_predicted_neq_given": 39, "find_label_issues_using_argmax_confusion_matrix": 39, "remove_noise_from_class": [40, 48], "clip_noise_r": [40, 48], "clip_valu": [40, 48], "value_count": [40, 48, 84], "value_counts_fill_missing_class": [40, 48], "get_missing_class": [40, 48], "round_preserving_sum": [40, 48], "round_preserving_row_tot": [40, 48], "estimate_pu_f1": [40, 48], "confusion_matrix": [40, 48], "print_square_matrix": [40, 48], "print_noise_matrix": [40, 48, 86], "print_inverse_noise_matrix": [40, 48], "print_joint_matrix": [40, 48, 86], "compress_int_arrai": [40, 48], "train_val_split": [40, 48], "subset_x_i": [40, 48], "subset_label": [40, 48], "subset_data": [40, 48], "extract_indices_tf": [40, 48], "unshuffle_tensorflow_dataset": [40, 48], "is_torch_dataset": [40, 48], "is_tensorflow_dataset": [40, 48], "csr_vstack": [40, 48], "append_extra_datapoint": [40, 48], "get_num_class": [40, 48], "num_unique_class": [40, 48], "get_unique_class": [40, 48], "format_label": [40, 48], "smart_display_datafram": [40, 48], "force_two_dimens": [40, 48], "latent_algebra": [40, 76], "compute_ps_py_inv_noise_matrix": [40, 42], "compute_py_inv_noise_matrix": [40, 42], "compute_inv_noise_matrix": [40, 42], "compute_noise_matrix_from_invers": [40, 42], "compute_pi": [40, 42], "compute_pyx": [40, 42], "label_quality_util": 40, "get_normalized_entropi": [40, 41], "multilabel_util": [40, 89], "stack_compl": [40, 45], "get_onehot_num_class": [40, 45], "int2onehot": [40, 45, 89], "onehot2int": [40, 45, 89], "multilabel_scor": [40, 57], "classlabelscor": [40, 44], "exponential_moving_averag": [40, 44, 57], "softmin": [40, 44, 57, 60, 69, 73], "possible_method": [40, 44], "multilabelscor": [40, 44], "get_class_label_quality_scor": [40, 44], "multilabel_pi": [40, 44], "get_cross_validated_multilabel_pred_prob": [40, 44], "transform_distances_to_scor": [40, 46], "token_classification_util": [40, 97], "get_sent": [40, 47, 97], "filter_sent": [40, 47, 97], "process_token": [40, 47], "merge_prob": [40, 47], "color_sent": [40, 47], "assert_valid_input": [40, 49], "assert_valid_class_label": [40, 49], "assert_nonempty_input": [40, 49], "assert_indexing_work": [40, 49], "labels_to_arrai": [40, 49], "labels_to_list_multilabel": [40, 49], "min_allowed_prob": 41, "wikipedia": 41, "activ": [41, 43, 53, 75, 88], "towardsdatasci": 41, "cheatsheet": 41, "ec57bc067c0b": 41, "clip": [41, 48, 77], "behav": 41, "unnecessari": [41, 84], "slightli": [41, 95, 96], "interv": [41, 44, 91], "herein": 42, "inexact": 42, "cours": 42, "propag": 42, "throughout": [42, 48, 65, 77, 88, 94, 97], "increas": [42, 60, 62, 63, 77, 78, 84, 88, 89, 97], "dot": [42, 73, 84], "true_labels_class_count": 42, "pyx": 42, "multiannot": 43, "assert_valid_inputs_multiannot": 43, "labels_multiannot": [43, 53], "ensembl": [43, 44, 53, 63, 81, 84, 89, 91, 93, 95], "allow_single_label": 43, "annotator_id": 43, "assert_valid_pred_prob": 43, "pred_probs_unlabel": [43, 53], "format_multiannotator_label": [43, 53, 88], "formatted_label": [43, 48], "old": [43, 48, 76, 77, 83], "check_consensus_label_class": 43, "consensus_label": [43, 53, 88], "consensus_method": [43, 53], "consensu": [43, 53, 75, 87, 97], "establish": [43, 93, 96], "compute_soft_cross_entropi": 43, "soft": [43, 83], "find_best_temp_scal": 43, "coarse_search_rang": [43, 65, 84], "fine_search_s": [43, 65, 84], "temperatur": [43, 44, 60, 69, 73], "scale": [43, 46, 83, 84, 91, 94, 95], "factor": [43, 44, 46, 67, 69], "minim": [43, 60, 91], "temp_scale_pred_prob": 43, "temp": 43, "sharpen": [43, 83], "smoothen": 43, "get_normalized_margin_for_each_label": [44, 63], "get_confidence_weighted_entropy_for_each_label": [44, 63], "75": [44, 78, 79, 83, 88, 89, 90, 91, 93, 94, 97], "scorer": 44, "alpha": [44, 57, 60, 78, 79, 86, 89, 93], "exponenti": 44, "ema": 44, "s_1": 44, "s_k": 44, "ema_k": 44, "accord": [44, 55, 81, 82, 86, 97], "formula": [44, 46], "_t": 44, "cdot": 44, "s_t": 44, "qquad": 44, "leq": 44, "_1": 44, "give": [44, 63, 86, 88, 94], "recent": [44, 97], "success": 44, "previou": [44, 84, 85, 90], "discount": 44, "s_ema": 44, "175": [44, 85, 86, 90], "underflow": 44, "nan": [44, 53, 81, 88, 93, 95], "aggregated_scor": 44, "base_scor": 44, "base_scorer_kwarg": 44, "aggregator_kwarg": [44, 57], "n_sampl": 44, "n_label": 44, "worst": [44, 88], "class_label_quality_scor": 44, "42": [44, 82, 83, 85, 90, 94, 97], "452": 44, "new_scor": 44, "575": 44, "get_label_quality_scores_per_class": [44, 56, 57], "ml_scorer": 44, "binar": [44, 45], "reformat": [44, 77], "wider": 44, "splitter": 44, "kfold": [44, 85], "onevsrestclassifi": [44, 89], "randomforestclassifi": [44, 86, 89], "n_split": [44, 79, 85, 89], "pred_prob_slic": 45, "onehot": 45, "hot": [45, 55, 61, 67, 70, 81, 83, 84, 93, 94, 95], "onehot_matrix": 45, "avg_dist": 46, "scaling_factor": 46, "exp": [46, 62, 63, 78], "dt": 46, "right": [46, 58, 61, 82, 89, 90, 91, 96], "strength": [46, 61], "pronounc": 46, "differenti": 46, "ly": 46, "rule": [46, 47, 83], "thumb": 46, "ood_features_scor": [46, 62, 91], "88988177": 46, "80519832": 46, "token_classif": [47, 71, 73, 74, 84], "sentenc": [47, 71, 73, 74, 82, 96], "readabl": 47, "lambda": [47, 77, 78, 84, 88], "long_sent": 47, "headlin": 47, "charact": [47, 48], "s1": 47, "s2": 47, "processed_token": 47, "alecnlcb": 47, "entiti": [47, 75, 84, 97], "mapped_ent": 47, "unique_ident": 47, "loc": [47, 78, 79, 85, 97], "nbitbas": [47, 57], "probs_merg": 47, "55": [47, 83, 85, 90, 91, 93, 94], "0125": [47, 73], "0375": 47, "075": 47, "025": 47, "color": [47, 70, 78, 79, 81, 86, 89, 91, 93, 94], "red": [47, 61, 78, 79, 83, 86, 89, 90, 91, 94], "colored_sent": 47, "termcolor": 47, "31msentenc": 47, "0m": 47, "ancillari": 48, "class_without_nois": 48, "any_other_class": 48, "choos": [48, 63, 81, 84, 86, 93, 95], "tradition": 48, "new_sum": 48, "fill": 48, "wherea": [48, 55, 92], "come": [48, 78, 79, 84, 85, 91, 94], "major": [48, 53, 76, 85, 91], "versu": [48, 86], "obviou": 48, "cgdeboer": 48, "iteround": 48, "reach": 48, "prob_s_eq_1": 48, "claesen": 48, "f1": [48, 61, 82, 86], "BE": 48, "left_nam": 48, "top_nam": 48, "titl": [48, 78, 79, 86, 89, 91], "short_titl": 48, "round_plac": 48, "pretti": [48, 86], "joint_matrix": 48, "num_possible_valu": 48, "holdout_idx": 48, "extract": [48, 62, 77, 82, 88, 91, 94, 96], "allow_shuffl": 48, "turn": [48, 75, 90], "shuffledataset": 48, "histori": 48, "pre_x": 48, "buffer_s": 48, "csr_matric": 48, "append": [48, 77, 83, 84, 85, 86, 88, 89, 90, 91, 97], "bottom": [48, 58, 61, 90], "to_data": 48, "from_data": 48, "taken": 48, "label_matrix": 48, "canon": 48, "displai": [48, 61, 70, 74, 77, 82, 86, 96, 97], "jupyt": [48, 77, 78, 79, 83, 84, 85, 86, 88, 89, 91, 93, 97], "notebook": [48, 53, 77, 79, 83, 84, 86, 88, 89, 90, 94, 97], "consol": 48, "html": [48, 58, 61, 62, 81, 84, 86], "allow_missing_class": 49, "allow_one_class": 49, "length_x": 49, "labellik": 49, "labels_list": [49, 55], "keraswrappermodel": [51, 52, 75], "keraswrappersequenti": [51, 52], "tf": [52, 77], "legaci": 52, "lack": 52, "keraswrapp": 52, "huggingface_keras_imdb": 52, "unit": [52, 97], "model_kwarg": [52, 65], "compile_kwarg": 52, "sparsecategoricalcrossentropi": 52, "layer": [52, 77, 82, 91, 96], "dens": 52, "my_keras_model": 52, "from_logit": 52, "declar": 52, "apply_softmax": 52, "analysi": 53, "analyz": [53, 75, 86, 88, 89], "get_label_quality_multiannot": [53, 88], "vote": 53, "crowdsourc": [53, 75, 88], "dawid": [53, 88], "skene": [53, 88], "analog": [53, 83, 88], "chosen": [53, 63, 84, 88], "crowdlab": [53, 88], "unlabel": [53, 81, 82, 85, 88, 91, 94], "decid": [53, 82, 83, 88, 93, 96, 97], "get_active_learning_scor": [53, 88], "activelab": [53, 88], "priorit": [53, 60, 90, 94, 97], "showcas": 53, "main": 53, "best_qual": 53, "quality_method": 53, "calibrate_prob": 53, "return_detailed_qu": 53, "return_annotator_stat": 53, "return_weight": 53, "label_quality_score_kwarg": 53, "necessarili": [53, 61, 82, 86], "did": [53, 54, 77, 81, 86, 88, 93, 95, 96], "majority_vot": 53, "ti": 53, "broken": [53, 61, 83, 93], "highest": [53, 61, 78, 85, 92], "0th": 53, "consensus_quality_scor": [53, 88], "annotator_agr": [53, 88], "reman": 53, "1st": 53, "2nd": [53, 67], "3rd": 53, "consensus_label_suffix": 53, "consensus_quality_score_suffix": 53, "suffix": 53, "emsembl": 53, "weigh": [53, 83], "agreement": [53, 88], "agre": 53, "prevent": [53, 84], "overconfid": [53, 92], "wrong": [53, 58, 60, 76, 78, 79, 82, 84, 86, 90, 96], "detailed_label_qu": [53, 88], "annotator_stat": [53, 88], "model_weight": 53, "annotator_weight": 53, "warn": [53, 78, 79, 84], "labels_info": 53, "num_annot": [53, 88], "deriv": [53, 88], "quality_annotator_1": 53, "quality_annotator_2": 53, "quality_annotator_m": 53, "annotator_qu": [53, 88], "num_examples_label": [53, 88], "agreement_with_consensu": [53, 88], "worst_class": [53, 88], "trustworthi": [53, 88, 93], "get_label_quality_multiannotator_ensembl": 53, "weigtht": 53, "budget": 53, "retrain": [53, 93, 96], "active_learning_scor": 53, "improv": [53, 79, 83, 84, 85, 86, 93, 94, 95, 96], "active_learning_scores_unlabel": 53, "get_active_learning_scores_ensembl": 53, "henc": [53, 77, 78, 88], "get_majority_vote_label": [53, 88], "event": 53, "lastli": [53, 81], "convert_long_to_wide_dataset": 53, "labels_multiannotator_long": 53, "wide": [53, 77, 95, 96], "suitabl": [53, 81, 95], "labels_multiannotator_wid": 53, "common_multilabel_issu": [54, 56], "mutual": [54, 89], "exclus": [54, 89], "rank_classes_by_multilabel_qu": [54, 56], "overall_multilabel_health_scor": [54, 56], "multilabel_health_summari": [54, 56], "classes_by_multilabel_qu": 54, "inner": [55, 69], "find_multilabel_issues_per_class": [55, 56], "per_class_label_issu": 55, "label_issues_list": 55, "pred_probs_list": [55, 63, 85, 86], "anim": [56, 91], "rat": 56, "predat": 56, "pet": 56, "reptil": 56, "manner": [57, 88, 93, 95, 96], "box": [58, 60, 61, 83, 90], "object_detect": [58, 60, 61, 90], "return_indices_ranked_by_scor": [58, 90], "overlapping_label_check": [58, 60], "suboptim": [58, 60], "locat": [58, 60, 90, 94, 97], "bbox": [58, 61, 90], "image_nam": [58, 61], "y1": [58, 61, 90], "y2": [58, 61, 90], "later": [58, 61, 62, 96, 97], "corner": [58, 61, 90], "xyxi": [58, 61, 90], "io": [58, 61, 77, 83], "keras_cv": [58, 61], "bounding_box": [58, 61, 90], "detectron": [58, 61, 90], "detectron2": [58, 61, 90], "readthedoc": [58, 61], "en": [58, 61], "latest": [58, 61], "visual": [58, 59, 61, 78, 79, 85, 93, 95, 97], "draw_box": [58, 61], "mmdetect": [58, 61, 90], "swap": [58, 60, 70, 74], "penal": [58, 60], "concern": [58, 60, 75, 79], "issues_from_scor": [59, 60, 68, 69, 70, 72, 73, 74, 90, 94, 97], "compute_overlooked_box_scor": [59, 60], "compute_badloc_box_scor": [59, 60], "compute_swap_box_scor": [59, 60], "pool_box_scores_per_imag": [59, 60], "object_counts_per_imag": [59, 61, 90], "bounding_box_size_distribut": [59, 61, 90], "class_label_distribut": [59, 61, 90], "get_sorted_bbox_count_idx": [59, 61], "plot_class_size_distribut": [59, 61], "plot_class_distribut": [59, 61], "get_average_per_class_confusion_matrix": [59, 61], "calculate_per_class_metr": [59, 61], "aggregation_weight": 60, "imperfect": [60, 84], "chose": [60, 88, 90], "imperfectli": [60, 90], "dirti": [60, 63, 66, 93], "subtyp": 60, "badloc": 60, "nonneg": 60, "high_probability_threshold": 60, "auxiliary_input": [60, 61], "vari": [60, 79], "iou": [60, 61], "heavili": 60, "auxiliarytypesdict": 60, "pred_label": [60, 96], "pred_label_prob": 60, "pred_bbox": 60, "lab_label": 60, "lab_bbox": 60, "similarity_matrix": 60, "min_possible_similar": 60, "scores_overlook": 60, "low_probability_threshold": 60, "scores_badloc": 60, "accident": [60, 81, 82, 84, 96], "scores_swap": 60, "box_scor": 60, "image_scor": [60, 69, 94], "discov": [61, 79, 97], "auxiliari": [61, 91, 94], "_get_valid_inputs_for_compute_scor": 61, "object_count": 61, "down": 61, "bbox_siz": 61, "class_distribut": 61, "plot": [61, 78, 79, 86, 89, 91, 93, 94], "sorted_idx": [61, 91], "class_to_show": 61, "hidden": [61, 91], "max_class_to_show": 61, "prediction_threshold": 61, "overlai": [61, 90], "figsiz": [61, 78, 79, 85, 86, 89, 91], "save_path": [61, 90], "blue": [61, 83, 86, 90], "overlaid": 61, "side": [61, 83, 90], "figur": [61, 86, 89, 91, 93], "extens": [61, 86, 88], "png": [61, 90], "pdf": [61, 62], "svg": 61, "matplotlib": [61, 78, 79, 85, 86, 89, 90, 91, 93], "num_proc": [61, 85], "intersect": [61, 84], "tp": 61, "fp": 61, "ground": [61, 83, 86, 88, 93], "truth": [61, 86, 88, 93], "bias": 61, "avg_metr": 61, "distionari": 61, "95": [61, 71, 73, 81, 83, 86, 93, 94], "per_class_metr": 61, "Of": 62, "li": 62, "smaller": [62, 89, 90], "find_top_issu": [62, 63, 91], "reli": [62, 77, 78, 79, 82, 90, 91, 93, 96], "dist_metr": 62, "dim": [62, 85, 94], "subtract": [62, 63], "renorm": [62, 63, 84], "least_confid": 62, "sum_": 62, "log": [62, 63, 76], "softmax": [62, 69, 73, 85], "literatur": 62, "gen": 62, "liu": 62, "lochman": 62, "zach": 62, "openaccess": 62, "thecvf": 62, "content": [62, 77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "cvpr2023": 62, "liu_gen_pushing_the_limits_of_softmax": 62, "based_out": 62, "distribution_detection_cvpr_2023_pap": 62, "fit_scor": [62, 91], "ood_predictions_scor": 62, "pretrain": [62, 77, 82, 91, 96], "adjust_confident_threshold": 62, "probabilist": [62, 77, 78, 79, 81, 82, 91, 92, 95], "order_label_issu": [63, 76], "whichev": [63, 92], "argsort": [63, 82, 85, 86, 90, 91, 93, 96], "max_": 63, "get_label_quality_ensemble_scor": [63, 84, 86], "weight_ensemble_members_bi": 63, "custom_weight": 63, "log_loss_search_t_valu": 63, "0001": [63, 83], "scheme": 63, "log_loss_search": 63, "log_loss": [63, 82], "1e0": 63, "1e1": 63, "1e2": 63, "2e2": 63, "quality_scor": [63, 91], "forth": 63, "top_issue_indic": 63, "rank_bi": [63, 76], "weird": [63, 74], "minu": 63, "prob_label": 63, "max_prob_not_label": 63, "idea": [63, 90], "AND": [63, 82], "get_epistemic_uncertainti": [64, 65], "get_aleatoric_uncertainti": [64, 65], "corrupt": [65, 93], "linearregress": [65, 84, 93], "y_with_nois": 65, "n_boot": [65, 84], "include_aleatoric_uncertainti": [65, 84], "sole": [65, 78, 88, 91, 95], "bootstrap": [65, 84, 93], "resampl": [65, 77, 84], "epistem": [65, 84, 91, 93], "aleator": [65, 84, 93], "model_final_kwarg": 65, "coars": 65, "thorough": [65, 84], "fine": [65, 77, 82, 91, 96], "grain": 65, "grid": 65, "varianc": [65, 86], "epistemic_uncertainti": 65, "residu": [65, 66, 84], "deviat": [65, 90, 93], "ie": 65, "aleatoric_uncertainti": 65, "outr": 66, "contin": 66, "raw": [66, 75, 76, 79, 83, 85, 88, 90, 91, 93], "aka": [66, 77, 86, 90, 93, 97], "00323821": 66, "33692597": 66, "00191686": 66, "semant": [67, 69, 70, 87], "pixel": [67, 69, 70, 91, 94], "h": [67, 69, 70, 94], "height": [67, 69, 70, 94], "w": [67, 69, 70, 94], "width": [67, 69, 70, 94], "labels_one_hot": [67, 70, 94], "stream": [67, 91, 97], "downsampl": [67, 69, 94], "shrink": [67, 69], "divis": [67, 69, 78], "display_issu": [68, 69, 70, 71, 72, 73, 74, 94, 97], "common_label_issu": [68, 70, 72, 74, 94, 97], "filter_by_class": [68, 70, 94], "segmant": [69, 70], "num_pixel_issu": [69, 94], "product": [69, 84, 85], "pixel_scor": [69, 94], "highlight": [70, 74, 78, 79, 81, 94], "enter": 70, "legend": [70, 78, 79, 89, 90, 93, 94], "colormap": 70, "background": 70, "person": [70, 84, 90, 94, 97], "ambigu": [70, 74, 77, 82, 83, 86, 96, 97], "systemat": [70, 74, 88], "misunderstood": [70, 74], "issues_df": [70, 85], "class_index": 70, "issues_subset": [70, 74], "filter_by_token": [72, 74, 97], "token_score_method": 73, "sentence_score_method": 73, "sentence_score_kwarg": 73, "compris": [73, 74], "token_scor": [73, 97], "converg": 73, "toward": 73, "_softmin_sentence_scor": 73, "sentence_scor": [73, 97], "token_info": 73, "70": [73, 81, 85, 94], "02": [73, 78, 79, 85, 86, 90, 91, 94, 97], "03": [73, 81, 83, 86, 90, 94, 97], "04": [73, 81, 85, 90, 94, 97], "08": [73, 86, 90, 93, 94, 97], "commonli": [74, 76, 78, 79, 89, 97], "But": [74, 82, 86, 93, 97], "restrict": [74, 84], "reliabl": [75, 77, 84, 88, 94, 95], "thousand": 75, "imagenet": [75, 83], "popular": [75, 88, 90], "centric": [75, 81, 82, 85, 87], "capabl": 75, "minut": [75, 77, 81, 82, 83, 88, 89, 90, 93, 94, 95, 96, 97], "conda": 75, "feature_embed": [75, 91], "Then": [75, 84, 85, 95, 96], "your_dataset": [75, 77, 78, 79, 81, 82, 84, 85], "column_name_of_label": [75, 77, 78, 79, 81, 82, 85], "plagu": [75, 79], "untrain": 75, "\u30c4": 75, "label_issues_info": [75, 79], "sklearn_compatible_model": 75, "framework": [75, 89, 90], "complianc": 75, "tag": [75, 89, 97], "sequenc": 75, "recognit": [75, 77, 84, 97], "train_data": [75, 91, 93, 95, 96], "gotten": 75, "test_data": [75, 86, 89, 91, 93, 95, 96], "deal": [75, 79], "tutori": [75, 77, 78, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "feel": [75, 77, 79, 84], "free": [75, 77, 79, 81, 82, 84, 85, 86], "ask": [75, 84], "slack": [75, 84], "project": [75, 93], "welcom": 75, "commun": [75, 84], "guidelin": [75, 90], "piec": 75, "studio": [75, 79, 81, 82, 84, 85], "platform": [75, 81, 82, 84, 85], "automl": [75, 84], "foundat": 75, "smart": [75, 81, 82, 84, 85], "edit": [75, 84], "easier": [75, 86], "unreli": [75, 77, 81, 82, 95], "link": [75, 77, 83, 90], "older": 76, "outlin": 76, "substitut": 76, "v2": [76, 81, 95], "get_noise_indic": 76, "psx": 76, "sorted_index_method": 76, "order_label_error": 76, "label_errors_bool": 76, "latent_estim": 76, "num_label_error": 76, "learningwithnoisylabel": 76, "neatli": 76, "organ": [76, 81, 83, 95, 97], "reorgan": 76, "baseline_method": 76, "incorpor": [76, 86], "research": [76, 86], "polyplex": 76, "terminologi": 76, "label_error": 76, "quickstart": [77, 78, 79, 81, 82, 83, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "spoken": 77, "500": [77, 91, 97], "english": [77, 83], "pronunci": 77, "wav": 77, "huggingfac": [77, 78, 79, 85], "voxceleb": 77, "speech": [77, 97], "your_pred_prob": [77, 78, 79, 81, 82], "tensorflow_io": 77, "huggingface_hub": 77, "branch": [77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 95, 96], "reproduc": [77, 81, 86, 88], "command": 77, "wget": [77, 90, 94, 97], "navig": 77, "browser": 77, "jakobovski": 77, "archiv": [77, 97], "v1": 77, "tar": [77, 91], "gz": [77, 91], "mkdir": [77, 97], "spoken_digit": 77, "xf": 77, "6_nicolas_32": 77, "data_path": 77, "listdir": 77, "nondeterminist": 77, "file_nam": 77, "endswith": 77, "file_path": 77, "join": [77, 84, 85], "39": [77, 78, 82, 83, 84, 85, 90, 93, 94, 96, 97], "7_george_26": 77, "0_nicolas_24": 77, "0_nicolas_6": 77, "listen": 77, "display_exampl": 77, "click": [77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "expand": [77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "pulldown": [77, 78, 79, 83, 85, 86, 88, 89, 91, 93, 97], "colab": [77, 78, 79, 83, 84, 85, 86, 88, 89, 91, 93, 97], "tfio": 77, "pathlib": 77, "ipython": 77, "load_wav_16k_mono": 77, "filenam": 77, "khz": 77, "file_cont": 77, "read_fil": 77, "sample_r": 77, "decode_wav": 77, "desired_channel": 77, "squeez": 77, "rate_in": 77, "rate_out": 77, "16000": 77, "wav_file_nam": 77, "audio_r": 77, "wav_file_exampl": 77, "plai": [77, 83, 84], "button": 77, "wav_file_name_exampl": 77, "7_jackson_43": 77, "hear": 77, "extractor": 77, "encoderclassifi": 77, "spkrec": 77, "xvect": 77, "feature_extractor": 77, "from_hparam": 77, "run_opt": 77, "uncom": 77, "ffmpeg": 77, "system": [77, 81, 82, 85, 94], "backend": 77, "wav_audio_file_path": 77, "head": [77, 79, 81, 82, 83, 85, 86, 88, 93, 95, 96], "torchaudio": 77, "extract_audio_embed": 77, "emb": [77, 85], "signal": 77, "encode_batch": 77, "embeddings_list": [77, 85], "embeddings_arrai": 77, "opt": [77, 79, 82, 96], "hostedtoolcach": [77, 79, 82, 96], "x64": [77, 79, 82, 96], "lib": [77, 79, 82, 96], "python3": [77, 79, 82, 96], "site": [77, 79, 82, 96], "650": 77, "userwarn": [77, 78, 79, 82, 96], "stft": 77, "return_complex": 77, "view_as_r": 77, "recov": 77, "trigger": 77, "aten": 77, "src": 77, "nativ": 77, "spectralop": 77, "cpp": 77, "863": [77, 96], "_vf": 77, "n_fft": 77, "hop_length": 77, "win_length": 77, "attr": 77, "512": [77, 85], "14": [77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "196311": 77, "319459": 77, "478975": 77, "2890875": 77, "8170238": 77, "89265": 77, "24": [77, 83, 86, 88, 90, 93, 94], "898056": 77, "256195": 77, "559641": 77, "559721": 77, "62067": 77, "285245": 77, "21": [77, 78, 83, 84, 85, 86, 90, 91, 93, 94, 97], "709627": 77, "5033693": 77, "913803": 77, "819831": 77, "1831515": 77, "208763": 77, "084257": 77, "3210397": 77, "005453": 77, "216152": 77, "478235": 77, "6821785": 77, "053807": 77, "242471": 77, "091424": 77, "78334856": 77, "03954": 77, "23": [77, 83, 85, 86, 90, 93, 94], "569176": 77, "19": [77, 82, 83, 84, 85, 86, 90, 91, 93, 94, 96], "761097": 77, "1258295": 77, "753237": 77, "3508866": 77, "598274": 77, "23712": 77, "2500": 77, "leverag": [77, 82, 84, 86, 88, 96], "tune": [77, 82, 83, 91, 96], "computation": [77, 82, 96], "intens": [77, 82, 96], "held": [77, 81, 82, 83, 90, 91, 92, 95], "straightforward": [77, 81, 95], "benefit": [77, 92, 94, 95], "tol": 77, "num_crossval_fold": [77, 81, 88, 95], "decreas": [77, 84], "never": [77, 86, 89, 91, 92], "accuracy_scor": [77, 82, 86, 95, 96], "cv_accuraci": 77, "9708": 77, "probabilit": [77, 96], "9976": 77, "986": 77, "002161": 77, "176": [77, 83, 86, 89], "002483": 77, "2318": 77, "004411": 77, "1005": 77, "004857": 77, "1871": 77, "007494": 77, "investig": 77, "040587": 77, "999207": 77, "999377": 77, "975220": 77, "999367": 77, "18": [77, 82, 83, 84, 85, 86, 90, 91, 93, 94, 96], "identified_label_issu": [77, 82], "lowest_quality_label": [77, 82, 86, 93, 96], "sort_valu": [77, 79, 81, 82, 84, 85, 86, 88, 89, 93], "516": 77, "1946": 77, "469": 77, "2132": 77, "worth": [77, 86], "iloc": [77, 81, 82, 93, 95, 96], "6_yweweler_25": 77, "7_nicolas_43": 77, "6_theo_27": 77, "6_yweweler_36": 77, "6_yweweler_14": 77, "6_yweweler_35": 77, "6_nicolas_8": 77, "sound": 77, "quit": [77, 91], "22": [77, 78, 83, 85, 86, 89, 90, 94, 97], "blindli": [77, 84, 93, 95, 96], "trust": [77, 84, 86, 88, 92, 93, 95, 96], "underneath": 78, "hood": 78, "alert": 78, "introduct": 78, "mayb": [78, 79, 82], "examin": [78, 79, 81, 90, 95], "your_feature_matrix": [78, 79], "toi": [78, 79, 83, 85, 86, 88], "train_test_split": [78, 79, 91, 95, 96], "inf": [78, 79], "mid": [78, 79], "bins_map": [78, 79], "create_data": [78, 79], "y_bin": [78, 79], "y_i": [78, 79], "y_bin_idx": [78, 79], "y_train": [78, 79, 86, 93], "y_test": [78, 79, 86, 93], "y_train_idx": [78, 79], "y_test_idx": [78, 79], "test_siz": [78, 79, 95, 96], "slide": [78, 79, 83], "decis": [78, 79, 95], "frame": [78, 79], "x_out": [78, 79], "tini": [78, 79], "concaten": [78, 79, 84, 92], "y_out": [78, 79], "y_out_bin": [78, 79], "y_out_bin_idx": [78, 79], "exact_duplicate_idx": [78, 79], "x_duplic": [78, 79], "y_duplic": [78, 79], "y_duplicate_idx": [78, 79], "noisy_labels_idx": [78, 79, 89], "scatter": [78, 79, 86, 89, 93], "black": [78, 79, 83, 93], "cyan": [78, 79], "pyplot": [78, 79, 85, 86, 89, 91, 93], "plt": [78, 79, 85, 86, 89, 91, 93], "plot_data": [78, 79, 86, 89, 93], "fig": [78, 79, 83, 85, 91, 93], "ax": [78, 79, 85, 91, 93], "subplot": [78, 79, 85, 91], "set_titl": [78, 79, 85, 91], "set_xlabel": [78, 79], "x_1": [78, 79], "fontsiz": [78, 79, 85, 86, 89], "set_ylabel": [78, 79], "x_2": [78, 79], "set_xlim": [78, 79], "set_ylim": [78, 79], "linestyl": [78, 79], "circl": [78, 79, 86, 89], "misclassifi": [78, 79], "zip": [78, 79, 85, 90, 97], "label_err": [78, 79], "180": [78, 79, 90], "marker": [78, 79], "facecolor": [78, 79], "edgecolor": [78, 79], "linewidth": [78, 79, 91], "dup": [78, 79], "first_legend": [78, 79], "align": [78, 79], "title_fontproperti": [78, 79], "semibold": [78, 79], "second_legend": [78, 79], "45": [78, 79, 83, 86, 90, 94], "gca": [78, 79], "add_artist": [78, 79], "tight_layout": [78, 79], "ideal": [78, 79], "logist": [78, 79, 82, 88, 91, 96], "remaind": 78, "modal": [78, 79, 84, 88], "132": [78, 79, 86, 90], "9318": 78, "77": [78, 79, 81, 90, 94, 95], "006940": 78, "007830": 78, "40": [78, 79, 82, 83, 85, 94], "014828": 78, "107": [78, 79, 86, 89], "021241": 78, "120": [78, 79, 95], "026407": 78, "notic": [78, 86, 88, 90], "3558": [78, 79], "126": [78, 79, 86, 90], "006636": [78, 79], "130": [78, 79], "012571": [78, 79], "129": [78, 79], "127": [78, 79], "014909": [78, 79], "128": [78, 79, 85], "017443": [78, 79], "6160": [78, 79], "is_near_duplicate_issu": [78, 79, 81, 82, 84, 85, 86], "131": [78, 79, 94, 97], "000000e": [78, 79], "00": [78, 79, 81, 83, 85, 91, 94, 95], "000002": [78, 79], "463180e": [78, 79], "07": [78, 79, 81, 85, 86, 90, 93, 94], "51": [78, 79, 81, 83, 86, 90, 94], "161148": [78, 79], "859087e": [78, 79], "30": [78, 79, 83, 84, 85, 89, 94, 97], "3453": 78, "029542": 78, "031182": 78, "057961": 78, "058244": 78, "home": [78, 79, 82, 83, 96], "runner": [78, 79, 82, 96], "329": [78, 85, 90], "359": 78, "338": 78, "34": [78, 83, 85, 86, 88, 90, 94, 97], "54": [78, 83, 85, 86, 90, 94, 97], "039122": 78, "53": [78, 79, 81, 83, 85, 89, 90, 94, 95], "044598": 78, "105": [78, 90], "105196": 78, "133654": 78, "43": [78, 83, 86, 90, 94], "168033": 78, "125": 78, "101107": 78, "37": [78, 83, 85, 94], "183382": 78, "109": [78, 83, 90], "209259": 78, "211042": 78, "221316": 78, "average_ood_scor": 78, "34530442089193386": 78, "52": [78, 83, 85, 90, 94, 97], "169820": 78, "087324e": 78, "89": [78, 81, 90, 91, 93, 94, 96], "92": [78, 85, 86, 90, 94, 95], "259024": 78, "583757e": 78, "91": [78, 90, 94], "346458": 78, "341292e": 78, "specfi": 78, "new_lab": 78, "scoring_funct": 78, "div": 78, "rem": 78, "inv_scal": 78, "49": [78, 83, 85, 86, 90, 94], "superstitionissuemanag": 78, "unlucki": 78, "superstit": 78, "to_seri": 78, "issues_mask": 78, "summary_scor": 78, "9242": 78, "is_superstition_issu": 78, "superstition_scor": 78, "26": [78, 83, 85, 86, 88, 90, 94], "047581": 78, "090635": 78, "129591": 78, "65": [78, 85, 90, 94, 95], "164840": 78, "demo": [79, 81, 89, 95], "lurk": [79, 85, 86], "_split": 79, "737": 79, "thoroughli": 79, "preprocess": [79, 81, 91, 93, 95, 96], "904": 79, "review": [79, 81, 82, 83, 84, 86, 90, 93, 94, 95, 96, 97], "8561": 79, "001908": 79, "58": [79, 81, 83, 86, 90, 94, 95], "003564": 79, "007331": 79, "008963": 79, "009664": 79, "0227": 79, "is_class_imbalance_issu": 79, "022727": 79, "86": [79, 81, 85, 86, 90, 93, 94, 95], "87": [79, 85, 90, 93, 94, 96], "auto": [79, 83, 84, 93, 95, 96], "conceptu": 79, "856061": 79, "355772": 79, "616034": 79, "821750": 79, "901562": 79, "betweeen": 79, "is_null_issu": 79, "is_non_iid_issu": [79, 81, 82, 86], "is_underperforming_group_issu": 79, "859131": 79, "417707": 79, "664083": 79, "970324": 79, "816953": 79, "375317": 79, "641516": 79, "890575": 79, "531021": 79, "460593": 79, "601188": 79, "826147": 79, "752808": 79, "321635": 79, "562539": 79, "948362": 79, "090243": 79, "472909": 79, "746763": 79, "878267": 79, "examples_w_issu": [79, 84], "013445": 79, "025184": 79, "026376": 79, "inde": [79, 82], "miscellan": [79, 97], "428571": 79, "111111": 79, "571429": 79, "407407": 79, "592593": 79, "337838": 79, "092593": 79, "662162": 79, "333333": [79, 83], "952381": 79, "666667": 79, "portion": 79, "huge": [79, 86], "worri": [79, 82], "critic": 79, "highli": [79, 85], "sql": [81, 95], "databas": [81, 95], "excel": [81, 95], "parquet": [81, 95], "student": [81, 93, 95, 97], "grade": [81, 93, 95], "900": [81, 93, 95], "exam": [81, 93, 95], "letter": [81, 95, 97], "hundr": [81, 95], "histgradientboostingclassifi": 81, "standardscal": [81, 91, 95], "grades_data": [81, 95], "read_csv": [81, 82, 93, 95, 96], "stud_id": [81, 95], "exam_1": [81, 93, 95], "exam_2": [81, 93, 95], "exam_3": [81, 93, 95], "letter_grad": [81, 95], "f48f73": [81, 95], "0bd4e7": [81, 95], "81": [81, 82, 90, 93, 94, 95, 97], "great": [81, 83, 95], "particip": [81, 95], "cb9d7a": [81, 95], "61": [81, 85, 86, 90, 93, 94, 95], "94": [81, 83, 86, 90, 93, 94, 95, 97], "78": [81, 83, 86, 90, 93, 94, 95], "9acca4": [81, 95], "48": [81, 83, 86, 90, 91, 94, 95, 97], "x_raw": [81, 95], "cat_featur": 81, "x_encod": [81, 95], "get_dummi": [81, 93, 95], "drop_first": [81, 95], "numeric_featur": [81, 95], "scaler": [81, 91, 95], "x_process": [81, 95], "fit_transform": [81, 95], "bring": [81, 82, 85, 88, 93, 95, 96], "byod": [81, 82, 85, 88, 93, 95, 96], "boost": [81, 84, 88, 93], "xgboost": [81, 84, 93], "think": [81, 82, 84, 89, 94, 97], "carefulli": [81, 82, 85, 95], "nonzero": 81, "suspici": [81, 95], "tabl": [81, 83, 88, 95], "358": 81, "294": [81, 90], "46": [81, 83, 86, 90, 94], "941": 81, "7109": 81, "000005": [81, 82, 93], "886": 81, "000059": 81, "709": 81, "000104": 81, "723": 81, "000169": 81, "689": 81, "000181": 81, "3590": 81, "051882e": 81, "683133e": 81, "536582e": 81, "406589e": 81, "324246e": 81, "6165": 81, "582": 81, "185": [81, 83, 90], "187": [81, 83], "27": [81, 83, 85, 86, 90, 94, 97], "898": 81, "637": [81, 95], "0014": [81, 83], "595": 81, "702427": 81, "147": [81, 86, 90], "711186": 81, "157": [81, 86], "721394": 81, "771": 81, "731979": 81, "740335": 81, "0014153602099278074": 81, "issue_result": 81, "000842": 81, "555944": 81, "004374": 81, "sorted_issu": 81, "73": [81, 83, 89, 90, 93, 94], "deserv": 81, "outlier_result": 81, "sorted_outli": 81, "56": [81, 83, 85, 93, 94], "96": [81, 83, 86, 89, 90, 91, 93, 94], "lt": [81, 82, 83, 85, 88, 91, 94], "style": [81, 94], "font": 81, "18px": 81, "ff00ff": 81, "bac": 81, "unintend": [81, 82], "mistak": [81, 82, 85, 95, 96], "duplicate_result": 81, "690": 81, "246": [81, 90], "perhap": [81, 86, 88], "twice": 81, "67": [81, 83, 90, 93, 94], "wari": [81, 82, 84], "super": [81, 82, 85], "intent": [82, 96], "servic": [82, 84, 96], "onlin": [82, 96], "bank": [82, 83, 96], "banking77": [82, 96], "oo": [82, 96], "000": [82, 83, 85, 96, 97], "categori": [82, 85, 96], "scope": [82, 96], "dive": 82, "your_featur": 82, "sentence_transform": [82, 96], "sentencetransform": [82, 96], "payment": [82, 96], "cancel_transf": [82, 96], "transfer": [82, 96], "fund": [82, 96], "cancel": [82, 96], "transact": [82, 96], "my": [82, 96], "revert": [82, 96], "morn": [82, 96], "realis": [82, 96], "yesterdai": [82, 96], "rent": [82, 96], "realli": [82, 88, 94, 96], "tomorrow": [82, 96], "raw_text": [82, 96], "beneficiary_not_allow": [82, 96], "visa_or_mastercard": [82, 96], "lost_or_stolen_phon": [82, 96], "getting_spare_card": [82, 96], "supported_cards_and_curr": [82, 96], "apple_pay_or_google_pai": [82, 96], "card_payment_fee_charg": [82, 96], "change_pin": [82, 96], "card_about_to_expir": [82, 96], "utter": [82, 96], "suit": [82, 83, 84, 96], "electra": [82, 96], "discrimin": [82, 96], "googl": [82, 96], "text_embed": 82, "No": [82, 84, 96], "google_electra": [82, 96], "pool": [82, 84, 91, 96], "_util": [82, 96], "831": [82, 96], "typedstorag": [82, 96], "untypedstorag": [82, 96], "untyped_storag": [82, 96], "fget": [82, 96], "__get__": [82, 96], "owner": [82, 96], "400": [82, 96], "data_dict": [82, 86, 88], "85": [82, 85, 90, 94], "38": [82, 83, 85, 90, 94], "9710": 82, "981": 82, "974": 82, "000146": 82, "982": [82, 83], "000224": 82, "971": 82, "000507": 82, "980": [82, 83], "000960": 82, "3584": 82, "994": 82, "009642": 82, "999": 82, "013067": 82, "013841": 82, "433": 82, "014722": 82, "989": 82, "018224": 82, "6070": 82, "160": [82, 93], "095724": 82, "148": 82, "006237": 82, "546": 82, "099341": 82, "514": 82, "006485": 82, "481": 82, "123418": 82, "008165": 82, "0000": [82, 83, 86], "313": [82, 90], "564102": 82, "572258": 82, "28": [82, 83, 85, 86, 88, 91, 94, 97], "574915": 82, "31": [82, 83, 86, 88, 90, 94], "575507": 82, "575874": 82, "792090": 82, "257611": 82, "698710": 82, "182121": 82, "771619": 82, "to_numpi": [82, 84, 93, 96], "data_with_suggested_label": 82, "suggested_label": 82, "charg": [82, 96], "cash": [82, 96], "holidai": [82, 96], "sent": [82, 96, 97], "card": [82, 83, 96], "mine": [82, 96], "expir": [82, 96], "me": [82, 96], "withdraw": 82, "monei": 82, "whoever": [82, 96], "outlier_issu": [82, 85], "lowest_quality_outli": 82, "OR": 82, "636c65616e6c616220697320617765736f6d6521": 82, "phone": [82, 83], "gone": 82, "gt": [82, 88, 97], "samp": 82, "br": 82, "press": [82, 97], "nonsens": 82, "sens": 82, "detriment": 82, "duplicate_issu": 82, "fee": 82, "pai": 82, "go": [82, 83, 86], "strongli": 82, "p_valu": 82, "benign": 82, "shortlist": [82, 93, 96], "curat": [82, 87], "mnist_test_set": 83, "imagenet_val_set": 83, "tench": 83, "goldfish": 83, "white": [83, 97], "shark": 83, "tiger": 83, "hammerhead": 83, "electr": 83, "rai": 83, "stingrai": 83, "cock": 83, "hen": 83, "ostrich": 83, "brambl": 83, "goldfinch": 83, "hous": 83, "finch": 83, "junco": 83, "indigo": 83, "bunt": 83, "american": [83, 97], "robin": 83, "bulbul": 83, "jai": 83, "magpi": 83, "chickade": 83, "dipper": 83, "kite": 83, "bald": 83, "eagl": 83, "vultur": 83, "grei": 83, "owl": 83, "salamand": 83, "smooth": 83, "newt": 83, "spot": [83, 90], "axolotl": 83, "bullfrog": 83, "tree": 83, "frog": [83, 91], "tail": 83, "loggerhead": 83, "sea": 83, "turtl": 83, "leatherback": 83, "mud": 83, "terrapin": 83, "band": 83, "gecko": 83, "green": [83, 97], "iguana": 83, "carolina": 83, "anol": 83, "desert": 83, "grassland": 83, "whiptail": 83, "lizard": 83, "agama": 83, "frill": 83, "neck": 83, "allig": 83, "gila": 83, "monster": 83, "european": 83, "chameleon": 83, "komodo": 83, "dragon": 83, "nile": 83, "crocodil": 83, "triceratop": 83, "worm": 83, "snake": 83, "ring": 83, "eastern": 83, "hog": 83, "nose": 83, "kingsnak": 83, "garter": 83, "water": 83, "vine": 83, "night": 83, "boa": 83, "constrictor": 83, "african": 83, "rock": 83, "indian": 83, "cobra": 83, "mamba": 83, "saharan": 83, "horn": 83, "viper": 83, "diamondback": 83, "rattlesnak": 83, "sidewind": 83, "trilobit": 83, "harvestman": 83, "scorpion": 83, "yellow": 83, "garden": 83, "spider": 83, "barn": 83, "southern": 83, "widow": 83, "tarantula": 83, "wolf": 83, "tick": 83, "centiped": 83, "grous": 83, "ptarmigan": 83, "ruf": 83, "prairi": 83, "peacock": 83, "quail": 83, "partridg": 83, "parrot": 83, "macaw": 83, "sulphur": 83, "crest": 83, "cockatoo": 83, "lorikeet": 83, "coucal": 83, "bee": 83, "eater": 83, "hornbil": 83, "hummingbird": 83, "jacamar": 83, "toucan": 83, "duck": [83, 96], "breast": 83, "mergans": 83, "goos": 83, "swan": 83, "tusker": 83, "echidna": 83, "platypu": 83, "wallabi": 83, "koala": 83, "wombat": 83, "jellyfish": 83, "anemon": 83, "brain": 83, "coral": 83, "flatworm": 83, "nematod": 83, "conch": 83, "snail": 83, "slug": 83, "chiton": 83, "chamber": 83, "nautilu": 83, "dung": 83, "crab": 83, "fiddler": 83, "king": 83, "lobster": 83, "spini": 83, "crayfish": 83, "hermit": 83, "isopod": 83, "stork": 83, "spoonbil": 83, "flamingo": 83, "heron": 83, "egret": 83, "bittern": 83, "crane": 83, "bird": [83, 91], "limpkin": 83, "gallinul": 83, "coot": 83, "bustard": 83, "ruddi": 83, "turnston": 83, "dunlin": 83, "redshank": 83, "dowitch": 83, "oystercatch": 83, "pelican": 83, "penguin": 83, "albatross": 83, "whale": 83, "killer": 83, "dugong": 83, "lion": 83, "chihuahua": 83, "japanes": 83, "chin": 83, "maltes": 83, "pekinges": 83, "shih": 83, "tzu": 83, "charl": 83, "spaniel": 83, "papillon": 83, "terrier": 83, "rhodesian": 83, "ridgeback": 83, "afghan": [83, 97], "hound": 83, "basset": 83, "beagl": 83, "bloodhound": 83, "bluetick": 83, "coonhound": 83, "tan": 83, "walker": 83, "foxhound": 83, "redbon": 83, "borzoi": 83, "irish": 83, "wolfhound": 83, "italian": 83, "greyhound": 83, "whippet": 83, "ibizan": 83, "norwegian": 83, "elkhound": 83, "otterhound": 83, "saluki": 83, "scottish": 83, "deerhound": 83, "weimaran": 83, "staffordshir": 83, "bull": 83, "bedlington": 83, "border": 83, "kerri": 83, "norfolk": 83, "norwich": 83, "yorkshir": 83, "wire": 83, "fox": 83, "lakeland": 83, "sealyham": 83, "airedal": 83, "cairn": 83, "australian": 83, "dandi": 83, "dinmont": 83, "boston": 83, "miniatur": 83, "schnauzer": 83, "giant": 83, "tibetan": 83, "silki": 83, "coat": [83, 85], "wheaten": 83, "west": 83, "highland": 83, "lhasa": 83, "apso": 83, "flat": 83, "retriev": 83, "curli": 83, "golden": 83, "labrador": 83, "chesapeak": 83, "bai": 83, "german": [83, 97], "shorthair": 83, "pointer": 83, "vizsla": 83, "setter": 83, "gordon": 83, "brittani": 83, "clumber": 83, "springer": 83, "welsh": 83, "cocker": 83, "sussex": 83, "kuvasz": 83, "schipperk": 83, "groenendael": 83, "malinoi": 83, "briard": 83, "kelpi": 83, "komondor": 83, "sheepdog": 83, "shetland": 83, "colli": 83, "bouvier": 83, "de": 83, "flandr": 83, "rottweil": 83, "shepherd": 83, "dobermann": 83, "pinscher": 83, "swiss": [83, 97], "mountain": 83, "bernes": 83, "appenzel": 83, "sennenhund": 83, "entlebuch": 83, "boxer": 83, "bullmastiff": 83, "mastiff": 83, "french": 83, "bulldog": 83, "dane": 83, "st": 83, "bernard": 83, "huski": 83, "alaskan": 83, "malamut": 83, "siberian": 83, "dalmatian": 83, "affenpinsch": 83, "basenji": 83, "pug": 83, "leonberg": 83, "newfoundland": 83, "pyrenean": 83, "samoi": 83, "pomeranian": 83, "chow": 83, "keeshond": 83, "griffon": 83, "bruxelloi": 83, "pembrok": 83, "corgi": 83, "cardigan": 83, "poodl": 83, "mexican": 83, "hairless": 83, "tundra": 83, "coyot": 83, "dingo": 83, "dhole": 83, "wild": 83, "hyena": 83, "kit": 83, "arctic": 83, "tabbi": 83, "persian": 83, "siames": 83, "egyptian": 83, "mau": 83, "cougar": 83, "lynx": 83, "leopard": 83, "snow": 83, "jaguar": 83, "cheetah": 83, "brown": [83, 94], "bear": 83, "polar": 83, "sloth": 83, "mongoos": 83, "meerkat": 83, "beetl": 83, "ladybug": 83, "longhorn": 83, "leaf": 83, "rhinocero": 83, "weevil": 83, "fly": 83, "ant": 83, "grasshopp": 83, "cricket": 83, "stick": 83, "insect": 83, "cockroach": 83, "manti": 83, "cicada": 83, "leafhopp": 83, "lacew": 83, "dragonfli": 83, "damselfli": 83, "admir": 83, "ringlet": 83, "monarch": 83, "butterfli": 83, "gossam": 83, "wing": 83, "starfish": 83, "urchin": 83, "cucumb": 83, "cottontail": 83, "rabbit": 83, "hare": 83, "angora": 83, "hamster": 83, "porcupin": 83, "squirrel": 83, "marmot": 83, "beaver": 83, "guinea": 83, "pig": 83, "sorrel": 83, "zebra": 83, "boar": 83, "warthog": 83, "hippopotamu": 83, "ox": 83, "buffalo": 83, "bison": 83, "bighorn": 83, "sheep": 83, "alpin": 83, "ibex": 83, "hartebeest": 83, "impala": 83, "gazel": 83, "dromedari": 83, "llama": 83, "weasel": 83, "mink": 83, "polecat": 83, "foot": 83, "ferret": 83, "otter": 83, "skunk": 83, "badger": 83, "armadillo": 83, "toed": 83, "orangutan": 83, "gorilla": 83, "chimpanze": 83, "gibbon": 83, "siamang": 83, "guenon": 83, "pata": 83, "monkei": 83, "baboon": 83, "macaqu": 83, "langur": 83, "colobu": 83, "probosci": 83, "marmoset": 83, "capuchin": 83, "howler": 83, "titi": 83, "geoffroi": 83, "lemur": 83, "indri": 83, "asian": 83, "eleph": 83, "bush": 83, "snoek": 83, "eel": 83, "coho": 83, "salmon": 83, "beauti": 83, "clownfish": 83, "sturgeon": 83, "garfish": 83, "lionfish": 83, "pufferfish": 83, "abacu": 83, "abaya": 83, "academ": 83, "gown": 83, "accordion": 83, "acoust": 83, "guitar": 83, "aircraft": 83, "carrier": 83, "airlin": 83, "airship": 83, "altar": 83, "ambul": 83, "amphibi": 83, "clock": [83, 97], "apiari": 83, "apron": 83, "wast": 83, "assault": 83, "rifl": 83, "backpack": 83, "bakeri": 83, "balanc": 83, "beam": 83, "balloon": 83, "ballpoint": 83, "pen": 83, "aid": 83, "banjo": 83, "balust": 83, "barbel": 83, "barber": 83, "chair": [83, 90], "barbershop": 83, "baromet": 83, "barrel": 83, "wheelbarrow": 83, "basebal": 83, "basketbal": 83, "bassinet": 83, "bassoon": 83, "swim": 83, "cap": 83, "bath": 83, "towel": 83, "bathtub": 83, "station": 83, "wagon": 83, "lighthous": 83, "beaker": 83, "militari": 83, "beer": 83, "bottl": 83, "glass": 83, "bell": 83, "cot": 83, "bib": 83, "bicycl": [83, 94], "bikini": 83, "binder": 83, "binocular": 83, "birdhous": 83, "boathous": 83, "bobsleigh": 83, "bolo": 83, "tie": 83, "poke": 83, "bonnet": 83, "bookcas": 83, "bookstor": 83, "bow": 83, "brass": 83, "bra": 83, "breakwat": 83, "breastplat": 83, "broom": 83, "bucket": 83, "buckl": 83, "bulletproof": 83, "vest": 83, "butcher": 83, "shop": 83, "taxicab": 83, "cauldron": 83, "candl": 83, "cannon": 83, "cano": 83, "mirror": [83, 90], "carousel": 83, "tool": [83, 86, 88], "carton": 83, "wheel": 83, "teller": 83, "cassett": 83, "player": 83, "castl": 83, "catamaran": 83, "cd": 83, "cello": 83, "mobil": [83, 97], "chain": 83, "fenc": [83, 94], "mail": 83, "chainsaw": 83, "chest": 83, "chiffoni": 83, "chime": 83, "china": 83, "cabinet": 83, "christma": 83, "stock": 83, "church": 83, "movi": 83, "theater": 83, "cleaver": 83, "cliff": 83, "dwell": 83, "cloak": 83, "clog": 83, "cocktail": 83, "shaker": 83, "coffe": 83, "mug": 83, "coffeemak": 83, "coil": 83, "lock": 83, "keyboard": 83, "confectioneri": 83, "ship": [83, 91], "corkscrew": 83, "cornet": 83, "cowboi": 83, "boot": 83, "hat": 83, "cradl": 83, "crash": 83, "helmet": 83, "crate": 83, "infant": 83, "bed": 83, "crock": 83, "pot": 83, "croquet": 83, "crutch": 83, "cuirass": 83, "dam": 83, "desk": 83, "desktop": 83, "rotari": 83, "dial": 83, "telephon": 83, "diaper": 83, "watch": 83, "dine": 83, "dishcloth": 83, "dishwash": 83, "disc": 83, "brake": 83, "dock": 83, "sled": 83, "dome": 83, "doormat": 83, "drill": 83, "rig": 83, "drum": 83, "drumstick": 83, "dumbbel": 83, "dutch": 83, "oven": 83, "fan": 83, "locomot": 83, "entertain": 83, "center": 83, "envelop": 83, "espresso": 83, "powder": 83, "feather": 83, "fireboat": 83, "engin": [83, 94], "screen": 83, "sheet": 83, "flagpol": 83, "flute": 83, "footbal": 83, "forklift": 83, "fountain": 83, "poster": 83, "freight": 83, "fry": 83, "pan": 83, "fur": 83, "garbag": 83, "ga": 83, "pump": 83, "goblet": 83, "kart": 83, "golf": 83, "cart": 83, "gondola": 83, "gong": 83, "grand": 83, "piano": 83, "greenhous": 83, "grill": 83, "groceri": 83, "guillotin": 83, "barrett": 83, "hair": 83, "sprai": 83, "hammer": 83, "dryer": 83, "hand": [83, 86], "handkerchief": 83, "drive": 83, "harmonica": 83, "harp": 83, "harvest": 83, "hatchet": 83, "holster": 83, "honeycomb": 83, "hoop": 83, "skirt": 83, "horizont": 83, "bar": 83, "hors": [83, 91, 96], "drawn": 83, "hourglass": 83, "ipod": 83, "cloth": 83, "iron": 83, "jack": 83, "lantern": 83, "jean": 83, "jeep": 83, "shirt": [83, 85], "jigsaw": 83, "puzzl": 83, "pull": 83, "rickshaw": 83, "joystick": 83, "kimono": 83, "knee": 83, "pad": 83, "knot": 83, "ladl": 83, "lampshad": 83, "laptop": 83, "lawn": 83, "mower": 83, "knife": 83, "lifeboat": 83, "lighter": 83, "limousin": 83, "ocean": 83, "liner": 83, "lipstick": 83, "slip": 83, "shoe": 83, "lotion": 83, "speaker": 83, "loup": 83, "sawmil": 83, "magnet": 83, "compass": 83, "bag": [83, 85, 91, 92], "mailbox": 83, "tight": 83, "tank": 83, "manhol": 83, "maraca": 83, "marimba": 83, "maypol": 83, "maze": 83, "cup": [83, 90], "medicin": 83, "megalith": 83, "microphon": 83, "microwav": 83, "milk": 83, "minibu": 83, "miniskirt": 83, "minivan": 83, "missil": 83, "mitten": 83, "mix": 83, "bowl": 83, "modem": 83, "monasteri": 83, "monitor": 83, "mope": 83, "mortar": 83, "mosqu": 83, "mosquito": 83, "scooter": 83, "bike": 83, "tent": 83, "mous": [83, 84], "mousetrap": 83, "van": 83, "muzzl": 83, "nail": 83, "brace": 83, "necklac": 83, "nippl": 83, "obelisk": 83, "obo": 83, "ocarina": 83, "odomet": 83, "oil": 83, "oscilloscop": 83, "overskirt": 83, "bullock": 83, "oxygen": 83, "packet": 83, "paddl": 83, "padlock": 83, "paintbrush": 83, "pajama": 83, "palac": [83, 97], "parachut": 83, "park": 83, "bench": 83, "meter": 83, "passeng": 83, "patio": 83, "payphon": 83, "pedest": 83, "pencil": 83, "perfum": 83, "petri": 83, "dish": 83, "photocopi": 83, "plectrum": 83, "pickelhaub": 83, "picket": 83, "pickup": 83, "pier": 83, "piggi": 83, "pill": 83, "pillow": 83, "ping": 83, "pong": 83, "pinwheel": 83, "pirat": 83, "pitcher": 83, "plane": 83, "planetarium": 83, "plastic": 83, "plate": 83, "rack": 83, "plow": 83, "plunger": 83, "polaroid": 83, "camera": 83, "pole": [83, 94], "polic": 83, "poncho": 83, "billiard": 83, "soda": 83, "potter": 83, "prayer": 83, "rug": 83, "printer": 83, "prison": 83, "projectil": 83, "projector": 83, "hockei": 83, "puck": 83, "punch": 83, "purs": 83, "quill": 83, "quilt": 83, "race": 83, "racket": 83, "radiat": 83, "radio": 83, "telescop": 83, "rain": 83, "recreat": 83, "reel": 83, "reflex": 83, "refriger": 83, "remot": 83, "restaur": 83, "revolv": 83, "rotisseri": 83, "eras": 83, "rugbi": 83, "ruler": 83, "safe": 83, "safeti": 83, "salt": 83, "sandal": [83, 85], "sarong": 83, "saxophon": 83, "scabbard": 83, "school": 83, "bu": [83, 94], "schooner": 83, "scoreboard": 83, "crt": 83, "screw": 83, "screwdriv": 83, "seat": 83, "belt": 83, "sew": 83, "shield": 83, "shoji": 83, "basket": 83, "shovel": 83, "shower": 83, "curtain": 83, "ski": 83, "sleep": 83, "door": 83, "slot": 83, "snorkel": 83, "snowmobil": 83, "snowplow": 83, "soap": 83, "dispens": 83, "soccer": [83, 97], "sock": 83, "solar": 83, "thermal": 83, "collector": 83, "sombrero": 83, "soup": 83, "heater": 83, "shuttl": 83, "spatula": 83, "motorboat": 83, "web": 83, "spindl": 83, "sport": [83, 97], "spotlight": 83, "stage": 83, "steam": 83, "arch": 83, "bridg": 83, "steel": 83, "stethoscop": 83, "scarf": 83, "stone": 83, "wall": [83, 94], "stopwatch": 83, "stove": 83, "strainer": 83, "tram": 83, "stretcher": 83, "couch": 83, "stupa": 83, "submarin": 83, "sundial": 83, "sunglass": 83, "sunscreen": 83, "suspens": 83, "mop": 83, "sweatshirt": 83, "swimsuit": 83, "swing": 83, "switch": 83, "syring": 83, "lamp": 83, "tape": 83, "teapot": 83, "teddi": 83, "televis": [83, 97], "tenni": 83, "thatch": 83, "roof": 83, "front": 83, "thimbl": 83, "thresh": 83, "throne": 83, "tile": 83, "toaster": 83, "tobacco": 83, "toilet": 83, "totem": 83, "tow": 83, "tractor": 83, "semi": 83, "trailer": 83, "trai": 83, "trench": 83, "tricycl": 83, "trimaran": 83, "tripod": 83, "triumphal": 83, "trolleybu": 83, "trombon": 83, "tub": 83, "turnstil": 83, "typewrit": 83, "umbrella": 83, "unicycl": 83, "upright": 83, "vacuum": 83, "cleaner": 83, "vase": 83, "vault": 83, "velvet": 83, "vend": 83, "vestment": 83, "viaduct": 83, "violin": 83, "volleybal": 83, "waffl": 83, "wallet": 83, "wardrob": 83, "sink": 83, "wash": 83, "jug": 83, "tower": 83, "whiskei": 83, "whistl": 83, "wig": 83, "shade": [83, 94], "windsor": 83, "wine": 83, "wok": 83, "wooden": 83, "spoon": 83, "wool": 83, "rail": 83, "shipwreck": 83, "yawl": 83, "yurt": 83, "websit": 83, "comic": 83, "book": 83, "crossword": 83, "traffic": [83, 90, 94], "sign": [83, 94, 97], "dust": 83, "jacket": [83, 90], "menu": 83, "guacamol": 83, "consomm": 83, "trifl": 83, "ic": 83, "cream": 83, "pop": 83, "baguett": 83, "bagel": 83, "pretzel": 83, "cheeseburg": 83, "mash": 83, "potato": 83, "cabbag": 83, "broccoli": 83, "cauliflow": 83, "zucchini": 83, "spaghetti": 83, "squash": 83, "acorn": 83, "butternut": 83, "artichok": 83, "pepper": 83, "cardoon": 83, "mushroom": 83, "granni": 83, "smith": 83, "strawberri": 83, "orang": 83, "lemon": 83, "pineappl": 83, "banana": 83, "jackfruit": 83, "custard": 83, "appl": 83, "pomegran": 83, "hai": 83, "carbonara": 83, "chocol": 83, "syrup": 83, "dough": 83, "meatloaf": 83, "pizza": 83, "pie": 83, "burrito": 83, "eggnog": 83, "alp": 83, "bubbl": 83, "reef": 83, "geyser": 83, "lakeshor": 83, "promontori": 83, "shoal": 83, "seashor": 83, "vallei": 83, "volcano": 83, "bridegroom": 83, "scuba": 83, "diver": 83, "rapese": 83, "daisi": 83, "ladi": 83, "slipper": 83, "corn": 83, "rose": 83, "hip": 83, "chestnut": 83, "fungu": 83, "agar": 83, "gyromitra": 83, "stinkhorn": 83, "earth": 83, "star": 83, "wood": 83, "bolet": 83, "ear": 83, "cifar10_test_set": 83, "airplan": [83, 91], "automobil": [83, 91], "deer": [83, 91], "cifar100_test_set": 83, "aquarium_fish": 83, "babi": 83, "boi": 83, "camel": 83, "caterpillar": 83, "cattl": [83, 97], "cloud": 83, "dinosaur": 83, "dolphin": 83, "flatfish": 83, "forest": 83, "girl": 83, "kangaroo": 83, "lawn_mow": 83, "man": 83, "maple_tre": 83, "motorcycl": [83, 94], "oak_tre": 83, "orchid": 83, "palm_tre": 83, "pear": 83, "pickup_truck": 83, "pine_tre": 83, "plain": 83, "poppi": 83, "possum": 83, "raccoon": 83, "road": [83, 94], "rocket": 83, "seal": 83, "shrew": 83, "skyscrap": 83, "streetcar": 83, "sunflow": 83, "sweet_pepp": 83, "trout": 83, "tulip": 83, "willow_tre": 83, "woman": [83, 90], "caltech256": 83, "ak47": 83, "bat": 83, "glove": 83, "birdbath": 83, "blimp": 83, "bonsai": 83, "boom": 83, "breadmak": 83, "buddha": 83, "bulldoz": 83, "cactu": 83, "cake": 83, "tire": 83, "cartman": 83, "cereal": 83, "chandeli": 83, "chess": 83, "board": 83, "chimp": 83, "chopstick": 83, "coffin": 83, "coin": 83, "comet": 83, "cormor": 83, "globe": 83, "diamond": 83, "dice": 83, "doorknob": 83, "drink": 83, "straw": 83, "dumb": 83, "eiffel": 83, "elk": 83, "ewer": 83, "eyeglass": 83, "fern": 83, "fighter": 83, "jet": [83, 93], "extinguish": 83, "hydrant": 83, "firework": 83, "flashlight": 83, "floppi": 83, "fri": 83, "frisbe": 83, "galaxi": 83, "giraff": 83, "goat": 83, "gate": 83, "grape": 83, "pick": [83, 84], "hamburg": 83, "hammock": 83, "harpsichord": 83, "hawksbil": 83, "helicopt": 83, "hibiscu": 83, "homer": 83, "simpson": 83, "horsesho": 83, "air": 83, "skeleton": 83, "ibi": 83, "cone": 83, "iri": 83, "jesu": 83, "christ": 83, "joi": 83, "kayak": 83, "ketch": 83, "ladder": 83, "lath": 83, "licens": 83, "lightbulb": 83, "lightn": 83, "mandolin": 83, "mar": 83, "mattress": 83, "megaphon": 83, "menorah": 83, "microscop": 83, "minaret": 83, "minotaur": 83, "motorbik": 83, "mussel": 83, "neckti": 83, "octopu": 83, "palm": 83, "pilot": 83, "paperclip": 83, "shredder": 83, "pci": 83, "peopl": [83, 90], "pez": 83, "picnic": 83, "pram": 83, "prai": 83, "pyramid": 83, "rainbow": 83, "roulett": 83, "saddl": 83, "saturn": 83, "segwai": 83, "propel": 83, "sextant": 83, "music": 83, "skateboard": 83, "smokestack": 83, "sneaker": 83, "boat": 83, "stain": 83, "steer": 83, "stirrup": 83, "superman": 83, "sushi": 83, "armi": [83, 97], "sword": 83, "tambourin": 83, "teepe": 83, "court": 83, "theodolit": 83, "tomato": 83, "tombston": 83, "tour": 83, "pisa": 83, "treadmil": 83, "fork": 83, "tweezer": 83, "unicorn": 83, "vcr": 83, "waterfal": 83, "watermelon": 83, "weld": 83, "windmil": 83, "xylophon": 83, "yarmulk": 83, "yo": 83, "toad": 83, "twenty_news_test_set": 83, "alt": 83, "atheism": 83, "comp": 83, "graphic": [83, 94], "misc": [83, 97], "sy": 83, "ibm": 83, "pc": 83, "hardwar": 83, "mac": 83, "forsal": 83, "rec": 83, "sci": 83, "crypt": 83, "electron": 83, "med": 83, "soc": 83, "religion": 83, "christian": [83, 97], "talk": [83, 97], "polit": 83, "gun": 83, "mideast": 83, "amazon": 83, "neutral": 83, "imdb_test_set": 83, "all_class": 83, "20news_test_set": 83, "_load_classes_predprobs_label": 83, "dataset_nam": 83, "labelerror": 83, "url_bas": 83, "5392f6c71473055060be3044becdde1cbc18284d": 83, "url_label": 83, "original_test_label": 83, "_original_label": 83, "url_prob": 83, "cross_validated_predicted_prob": 83, "_pyx": 83, "num_part": 83, "datatset": 83, "bytesio": 83, "allow_pickl": 83, "pred_probs_part": 83, "url": 83, "_of_": 83, "nload": 83, "imdb": 83, "ve": [83, 84, 86, 88, 90], "interpret": [83, 84, 86, 89, 93], "capit": 83, "29780": 83, "256": [83, 84, 90], "780": 83, "medic": [83, 97], "doctor": 83, "254": [83, 90], "359223": 83, "640777": 83, "184": [83, 86], "258427": 83, "341176": 83, "263158": 83, "658824": 83, "337349": 83, "246575": 83, "662651": 83, "248": 83, "330000": 83, "355769": 83, "670000": 83, "251": [83, 90], "167": [83, 86, 90], "252": 83, "112": 83, "253": [83, 90], "022989": 83, "255": [83, 85], "049505": 83, "190": [83, 86, 90], "66": [83, 94], "002216": 83, "000974": 83, "59": [83, 85, 90, 94, 97], "88": [83, 84, 85, 86, 89, 90, 93, 94], "000873": 83, "000739": 83, "79": [83, 90, 94, 95], "32635": 83, "32636": 83, "47": [83, 85, 90, 94, 97], "32637": 83, "32638": 83, "32639": 83, "32640": 83, "051": 83, "93": [83, 90, 93, 94, 95, 97], "002242": 83, "997758": 83, "002088": 83, "001045": 83, "997912": 83, "002053": 83, "997947": 83, "001980": 83, "000991": 83, "998020": 83, "001946": 83, "002915": 83, "998054": 83, "001938": 83, "002904": 83, "998062": 83, "001020": 83, "998980": 83, "001018": 83, "002035": 83, "998982": 83, "999009": 83, "0003": 83, "0002": 83, "36": [83, 85, 94, 97], "41": [83, 85, 90, 91, 93, 94], "44": [83, 89, 90, 94, 96], "71": [83, 86, 90, 93, 94], "071": 83, "067269": 83, "929": 83, "046": [83, 85], "058243": 83, "954": 83, "035": 83, "032096": 83, "965": 83, "031": 83, "012232": 83, "969": 83, "022": 83, "025896": 83, "978": 83, "020": [83, 86], "013092": 83, "018": 83, "013065": 83, "016": 83, "030542": 83, "984": 83, "013": 83, "020833": 83, "987": 83, "012": 83, "010020": 83, "988": 83, "0073": 83, "0020": 83, "0016": 83, "0015": 83, "0013": 83, "0012": 83, "0010": 83, "0008": 83, "0007": 83, "0006": 83, "0005": 83, "0004": 83, "244": [83, 90], "98": [83, 84, 93, 94], "452381": 83, "459770": 83, "72": [83, 85, 86, 89, 93, 94], "523364": 83, "460784": 83, "446602": 83, "57": [83, 85, 86, 94, 97], "68": [83, 85, 86, 90, 94, 95], "103774": 83, "030612": 83, "97": [83, 84, 86, 90, 93, 94, 95, 97], "110092": 83, "049020": 83, "99": [83, 86, 94, 95], "0034": 83, "0032": 83, "0026": 83, "0025": 83, "4945": 83, "4946": 83, "4947": 83, "4948": 83, "4949": 83, "4950": 83, "846": 83, "82": [83, 85, 86, 90, 91, 93, 94], "7532": 83, "532": 83, "034483": 83, "009646": 83, "965517": 83, "030457": 83, "020513": 83, "969543": 83, "028061": 83, "035443": 83, "971939": 83, "025316": 83, "005168": 83, "974684": 83, "049751": 83, "979487": 83, "019920": 83, "042802": 83, "980080": 83, "017677": 83, "005115": 83, "982323": 83, "012987": 83, "005236": 83, "987013": 83, "012723": 83, "025126": 83, "987277": 83, "010989": 83, "008264": 83, "989011": 83, "010283": 83, "027778": 83, "989717": 83, "009677": 83, "990323": 83, "007614": 83, "010127": 83, "992386": 83, "005051": 83, "994949": 83, "005025": 83, "994975": 83, "005013": 83, "994987": 83, "001859": 83, "001328": 83, "000929": 83, "000664": 83, "186": [83, 86], "188": [83, 86, 89], "189": [83, 86], "snippet": 84, "nlp": [84, 97], "mind": [84, 86], "number_of_class": 84, "total_number_of_data_point": 84, "drop": [84, 88, 93, 96], "feed": 84, "alphabet": 84, "labels_proper_format": 84, "your_classifi": 84, "issues_datafram": 84, "class_predicted_for_flagged_exampl": 84, "class_predicted_for_all_exampl": 84, "grant": 84, "datataset": 84, "fair": [84, 86], "game": 84, "speedup": [84, 91], "flexibl": 84, "tempfil": 84, "mkdtemp": 84, "sped": 84, "anywai": 84, "pred_probs_merg": 84, "merge_rare_class": 84, "count_threshold": 84, "class_mapping_orig2new": 84, "heath_summari": 84, "num_examples_per_class": 84, "rare_class": 84, "num_classes_merg": 84, "other_class": 84, "labels_merg": 84, "new_c": 84, "merged_prob": 84, "hstack": [84, 85, 86, 88], "new_class": 84, "original_class": 84, "num_check": 84, "ones_array_ref": 84, "isclos": 84, "though": [84, 86, 97], "successfulli": 84, "meaning": [84, 91], "virtuou": [84, 88], "cycl": [84, 88], "jointli": 84, "junk": 84, "clutter": 84, "unknown": 84, "caltech": 84, "combined_boolean_mask": 84, "mask1": 84, "mask2": 84, "gradientboostingclassifi": [84, 86], "true_error": [84, 86, 89], "101": [84, 90], "102": [84, 89, 90], "104": [84, 86, 90], "model_to_find_error": 84, "model_to_return": 84, "cl0": 84, "randomizedsearchcv": 84, "expens": 84, "param_distribut": 84, "learning_r": [84, 86], "max_depth": [84, 86], "magnitud": 84, "coeffici": [84, 93], "optin": 84, "environ": [84, 86], "rerun": [84, 86], "cell": [84, 86], "On": [84, 86, 90], "unabl": [84, 86], "render": [84, 86], "nbviewer": [84, 86], "nbsp": [84, 86], "cleanlearninginot": [84, 86], "fittedcleanlearn": [84, 86], "linearregressionlinearregress": 84, "n_init": 84, "fit_predict": 84, "continuous_column": 84, "categorical_column": 84, "data_df": 84, "feature_a": 84, "feature_b": 84, "unexpectedli": 84, "emphas": 84, "especi": [84, 85, 93, 95, 96], "crucial": 84, "merge_duplicate_set": 84, "merge_kei": 84, "construct_group_kei": 84, "merged_set": 84, "consolidate_set": 84, "tolist": [84, 89], "issubset": 84, "frozenset": 84, "sets_list": 84, "mutabl": 84, "new_set": 84, "current_set": 84, "intersecting_set": 84, "lowest_score_strategi": 84, "sub_df": 84, "idxmin": 84, "filter_near_dupl": 84, "strategy_fn": 84, "strategy_kwarg": 84, "duplicate_row": 84, "group_kei": 84, "to_keep_indic": 84, "groupbi": 84, "explod": 84, "to_remov": 84, "isin": [84, 91], "kept": 84, "near_duplicate_issu": [84, 85], "ids_to_remove_seri": 84, "tmp": 84, "ipykernel_6241": 84, "1995098996": 84, "deprecationwarn": 84, "dataframegroupbi": 84, "include_group": 84, "silenc": 84, "assist": 84, "streamlin": 84, "ux": 84, "agpl": 84, "compani": 84, "commerci": 84, "alter": 84, "email": 84, "discuss": 84, "anywher": 84, "profession": 84, "expert": 84, "60": [85, 86, 93, 94], "excess": 85, "torchvis": [85, 91], "tensordataset": 85, "stratifiedkfold": [85, 89], "tqdm": 85, "fashion_mnist": 85, "num_row": 85, "60000": 85, "pil": 85, "transformed_dataset": 85, "with_format": 85, "unsqueez": 85, "cpu_count": 85, "torch_dataset": 85, "quick": [85, 89], "relu": 85, "batchnorm2d": 85, "maxpool2d": 85, "lazylinear": 85, "flatten": 85, "get_test_accuraci": 85, "testload": [85, 91], "energi": 85, "trainload": [85, 91], "n_epoch": 85, "patienc": 85, "criterion": 85, "crossentropyloss": 85, "adamw": 85, "best_test_accuraci": 85, "start_epoch": 85, "running_loss": 85, "best_epoch": 85, "end_epoch": 85, "3f": [85, 93], "acc": [85, 86], "time_taken": 85, "compute_embed": 85, "compute_pred_prob": 85, "train_batch_s": 85, "num_work": 85, "worker": [85, 97], "train_id_list": 85, "test_id_list": 85, "train_id": 85, "test_id": 85, "embeddings_model": 85, "ntrain": 85, "trainset": 85, "testset": 85, "pin_memori": 85, "fold_embed": 85, "fold_pred_prob": 85, "finish": 85, "482": 85, "720": 85, "088": 85, "195": 85, "824": 85, "stderr": [85, 91, 94], "sphinxverbatim": [85, 91, 94, 97], "61it": [85, 94], "30it": [85, 94], "47it": 85, "34it": [85, 91, 94], "02it": [85, 94], "80it": [85, 94], "99it": [85, 94], "54it": [85, 94], "68it": [85, 94], "62it": [85, 94], "33it": [85, 94], "32it": [85, 94], "493": 85, "060": 85, "330": [85, 90], "505": 85, "784": 85, "21it": [85, 94], "27it": [85, 94], "86it": [85, 94], "44it": [85, 91, 94], "75it": [85, 94], "57it": [85, 94], "42it": [85, 94], "76it": [85, 94], "16it": [85, 94], "03it": [85, 94], "63": [85, 86, 90, 93, 94], "52it": [85, 94], "24it": [85, 94], "476": 85, "340": 85, "518": 85, "328": [85, 90], "310": 85, "745": 85, "43it": [85, 94], "40it": [85, 91, 94], "83it": [85, 94], "95it": [85, 94], "62": [85, 86, 90, 91, 93, 94, 97], "88it": [85, 91, 94], "66it": [85, 91, 94], "64it": [85, 94], "29it": [85, 91, 94], "70it": [85, 94], "45it": [85, 94], "89it": [85, 94], "reorder": 85, "vision": 85, "grayscal": 85, "exce": 85, "max_preval": 85, "7714": 85, "3772": 85, "3585": 85, "166": 85, "3651": 85, "27080": 85, "873833e": 85, "40378": 85, "915575e": 85, "25316": 85, "390277e": 85, "06": [85, 86, 90, 94, 97], "2090": 85, "751164e": 85, "14999": 85, "881301e": 85, "9569": 85, "11262": 85, "000003": 85, "19228": 85, "000010": 85, "dress": 85, "32657": 85, "000013": 85, "21282": 85, "000016": 85, "53564": 85, "000018": 85, "pullov": 85, "6321": 85, "30968": 85, "001267": 85, "30659": 85, "000022": [85, 97], "47824": 85, "001454": 85, "3370": 85, "000026": 85, "54565": 85, "001854": 85, "9762": 85, "258": 85, "47139": 85, "000033": 85, "166980": 85, "986195": 85, "997205": 85, "948781": 85, "999358": 85, "54078": 85, "17371": 85, "000025": 85, "plot_label_issue_exampl": 85, "ncol": [85, 91], "nrow": [85, 91], "ceil": 85, "axes_list": 85, "label_issue_indic": 85, "gl": 85, "sl": 85, "fontdict": 85, "imshow": [85, 91], "cmap": [85, 93], "grai": 85, "subplots_adjust": 85, "hspace": 85, "outsiz": 85, "outlier_issues_df": 85, "depict": [85, 89, 90, 91, 92, 94], "plot_outlier_issues_exampl": 85, "n_comparison_imag": 85, "sample_from_class": 85, "number_of_sampl": 85, "non_outlier_indic": 85, "isnul": 85, "non_outlier_indices_excluding_curr": 85, "sampled_indic": 85, "label_scores_of_sampl": 85, "top_score_indic": 85, "top_label_indic": 85, "sampled_imag": 85, "get_image_given_label_and_sampl": 85, "image_from_dataset": 85, "corresponding_label": 85, "comparison_imag": 85, "images_to_plot": 85, "idlist": 85, "iterrow": 85, "closest": 85, "counterpart": 85, "near_duplicate_issues_df": 85, "plot_near_duplicate_issue_exampl": 85, "seen_id_pair": 85, "get_image_and_given_label_and_predicted_label": 85, "duplicate_imag": 85, "nd_set": 85, "challeng": 85, "dark_issu": 85, "reveal": [85, 90, 94], "dark_scor": 85, "dark_issues_df": 85, "is_dark_issu": 85, "34848": 85, "203922": 85, "50270": 85, "204588": 85, "3936": 85, "213098": 85, "733": 85, "217686": 85, "8094": 85, "230118": 85, "plot_image_issue_exampl": 85, "difficult": 85, "disproportion": 85, "lowinfo_issu": 85, "low_information_scor": 85, "lowinfo_issues_df": 85, "is_low_information_issu": 85, "53050": 85, "067975": 85, "40875": 85, "089929": 85, "9594": 85, "092601": 85, "34825": 85, "107744": 85, "37530": 85, "108516": 85, "lot": 85, "depth": 86, "survei": [86, 97], "focus": [86, 88, 89, 93], "scienc": 86, "multivariate_norm": [86, 88, 89], "make_data": [86, 88], "cov": [86, 88, 89], "avg_trac": [86, 89], "test_label": [86, 89, 91, 96], "py_tru": 86, "noise_matrix_tru": 86, "noise_marix": 86, "s_test": 86, "noisy_test_label": 86, "purpl": 86, "val": 86, "namespac": 86, "exec": 86, "markerfacecolor": [86, 89], "markeredgecolor": [86, 89, 93], "markers": [86, 89, 93], "markeredgewidth": [86, 89, 93], "realist": 86, "7560": 86, "637318e": 86, "896262e": 86, "548391e": 86, "923417e": 86, "375075e": 86, "3454": 86, "014051": 86, "020451": 86, "249": [86, 90], "042594": 86, "043859": 86, "045954": 86, "6120": 86, "023714": 86, "007136": 86, "119": [86, 90], "107266": 86, "103": [86, 90], "033738": 86, "238": [86, 90], "119505": 86, "236": [86, 90, 97], "037843": 86, "222": 86, "614915": 86, "122": [86, 90], "624422": 86, "625965": 86, "626079": 86, "118": 86, "627675": 86, "695223": 86, "323529": 86, "523015": 86, "013720": 86, "675727": 86, "646521": 86, "anyth": 86, "enhanc": [86, 88, 90], "magic": 86, "83": [86, 90, 93, 94, 95, 97], "liter": 86, "identif": 86, "x27": 86, "logisticregressionlogisticregress": 86, "ever": 86, "092": 86, "040": 86, "024": 86, "004": 86, "surpris": 86, "1705": 86, "01936": 86, "ton": 86, "yourfavoritemodel1": 86, "merged_label": 86, "merged_test_label": 86, "newli": [86, 88], "yourfavoritemodel2": 86, "yourfavoritemodel3": 86, "cl3": 86, "takeawai": 86, "That": [86, 89], "randomli": 86, "my_test_pred_prob": 86, "my_test_pr": 86, "issues_test": 86, "corrected_test_label": 86, "pretend": 86, "cl_test_pr": 86, "69": [86, 91, 93, 94], "fairli": 86, "label_acc": 86, "percentag": 86, "offset": 86, "nquestion": 86, "overestim": 86, "answer": 86, "experienc": 86, "76": [86, 89, 90, 93, 94, 95], "knowledg": 86, "quantiti": [86, 93], "prioiri": 86, "known": 86, "versatil": 86, "label_issues_indic": 86, "213": [86, 90], "212": [86, 95], "218": [86, 90], "152": 86, "197": [86, 90], "196": [86, 90], "170": 86, "214": 86, "164": [86, 89], "198": [86, 90], "191": [86, 90], "121": [86, 96], "117": [86, 93], "206": [86, 90], "115": [86, 90], "193": 86, "194": 86, "201": [86, 90], "174": 86, "163": 86, "150": [86, 88, 90, 97], "169": [86, 97], "151": [86, 90], "168": 86, "precision_scor": 86, "recall_scor": 86, "f1_score": 86, "true_label_issu": 86, "filter_by_list": 86, "718750": [86, 88], "807018": 86, "912": 86, "733333": 86, "800000": 86, "721311": 86, "792793": 86, "908": 86, "676923": 86, "765217": 86, "892": 86, "567901": 86, "702290": 86, "844": 86, "gaug": 86, "label_issues_count": 86, "155": [86, 90], "156": 86, "172": [86, 89], "easiest": 86, "modular": 86, "penalti": 86, "l2": 86, "model3": 86, "n_estim": 86, "cv_pred_probs_1": 86, "cv_pred_probs_2": 86, "cv_pred_probs_3": 86, "label_quality_scores_best": 86, "cv_pred_probs_ensembl": 86, "label_quality_scores_bett": 86, "superior": [86, 92], "workflow": [87, 93], "speechbrain": 87, "timm": 87, "glad": 88, "multiannotator_label": 88, "300": [88, 97], "noisier": 88, "111": [88, 93], "local_data": [88, 89], "true_labels_train": [88, 89], "noise_matrix_bett": 88, "noise_matrix_wors": 88, "transpos": [88, 91], "dropna": 88, "zfill": 88, "row_na_check": 88, "notna": 88, "reset_index": 88, "a0001": 88, "a0002": 88, "a0003": 88, "a0004": 88, "a0005": 88, "a0006": 88, "a0007": 88, "a0008": 88, "a0009": 88, "a0010": 88, "a0041": 88, "a0042": 88, "a0043": 88, "a0044": 88, "a0045": 88, "a0046": 88, "a0047": 88, "a0048": 88, "a0049": 88, "a0050": 88, "na": 88, "60856743": 88, "41693214": 88, "40908785": 88, "87147629": 88, "64941785": 88, "10774851": 88, "0524466": 88, "71853246": 88, "37169848": 88, "66031048": 88, "multiannotator_util": 88, "crude": 88, "straight": 88, "majority_vote_label": 88, "736118": 88, "757751": 88, "782232": 88, "715565": 88, "824256": 88, "quality_annotator_a0001": 88, "quality_annotator_a0002": 88, "quality_annotator_a0003": 88, "quality_annotator_a0004": 88, "quality_annotator_a0005": 88, "quality_annotator_a0006": 88, "quality_annotator_a0007": 88, "quality_annotator_a0008": 88, "quality_annotator_a0009": 88, "quality_annotator_a0010": 88, "quality_annotator_a0041": 88, "quality_annotator_a0042": 88, "quality_annotator_a0043": 88, "quality_annotator_a0044": 88, "quality_annotator_a0045": 88, "quality_annotator_a0046": 88, "quality_annotator_a0047": 88, "quality_annotator_a0048": 88, "quality_annotator_a0049": 88, "quality_annotator_a0050": 88, "070564": 88, "216078": 88, "119188": 88, "alongisd": 88, "244981": 88, "208333": 88, "295979": 88, "294118": 88, "324197": 88, "310345": 88, "355316": 88, "346154": 88, "439732": 88, "480000": 88, "a0031": 88, "523205": 88, "580645": 88, "a0034": 88, "535313": 88, "607143": 88, "a0021": 88, "606999": 88, "a0015": 88, "609526": 88, "678571": 88, "a0011": 88, "621103": 88, "692308": 88, "wors": 88, "improved_consensus_label": 88, "majority_vote_accuraci": 88, "cleanlab_label_accuraci": 88, "8581081081081081": 88, "9797297297297297": 88, "besid": 88, "sorted_consensus_quality_scor": 88, "worst_qual": 88, "better_qu": 88, "worst_quality_accuraci": 88, "better_quality_accuraci": 88, "9893238434163701": 88, "improved_pred_prob": 88, "treat": [88, 89, 93, 97], "analzi": 88, "copyright": 89, "advertis": 89, "violenc": 89, "nsfw": 89, "suppli": [89, 90, 93], "celeba": 89, "make_multilabel_data": 89, "boxes_coordin": 89, "box_multilabel": 89, "make_multi": 89, "bx1": 89, "by1": 89, "bx2": 89, "by2": 89, "label_list": 89, "ur": 89, "upper": 89, "inidx": 89, "logical_and": 89, "inv_d": 89, "labels_idx": 89, "true_labels_test": 89, "dict_unique_label": 89, "get_color_arrai": 89, "dcolor": 89, "aa4400": 89, "55227f": 89, "55a100": 89, "00ff00": 89, "007f7f": 89, "386b55": 89, "0000ff": 89, "simplic": 89, "advis": 89, "y_onehot": 89, "single_class_label": 89, "stratifi": [89, 92], "kf": 89, "train_index": 89, "test_index": 89, "clf_cv": 89, "x_train_cv": 89, "x_test_cv": 89, "y_train_cv": 89, "y_test_cv": 89, "y_pred_cv": 89, "saw": 89, "num_to_displai": 89, "09": [89, 90, 91, 93, 94], "275": 89, "267": 89, "225": 89, "171": 89, "234": 89, "165": 89, "227": [89, 90], "262": [89, 90], "263": [89, 90], "266": [89, 90], "139": 89, "143": [89, 90], "216": [89, 90, 97], "265": 89, "159": [89, 90], "despit": [89, 97], "suspect": 89, "888": 89, "8224": 89, "9632": 89, "968": 89, "6512": 89, "0444": 89, "774": 89, "labels_binary_format": 89, "labels_list_format": 89, "surround": 90, "scene": 90, "coco": 90, "everydai": 90, "has_label_issu": 90, "insal": 90, "nc": [90, 94, 97], "s3": [90, 94, 97], "amazonaw": [90, 94, 97], "objectdetectionbenchmark": 90, "tutorial_obj": 90, "pkl": 90, "example_imag": 90, "unzip": [90, 97], "_separate_label": 90, "_separate_predict": 90, "begin": 90, "image_path": 90, "rb": 90, "image_to_visu": 90, "seg_map": 90, "334": 90, "float32": 90, "bboxes_ignor": 90, "290": 90, "286": 90, "285": 90, "224": 90, "231": [90, 97], "293": 90, "235": 90, "289": 90, "282": 90, "74": [90, 93, 94, 95], "281": 90, "271": 90, "280": 90, "277": 90, "279": 90, "287": 90, "299": 90, "276": 90, "307": 90, "321": 90, "326": 90, "333": 90, "261": 90, "319": 90, "257": 90, "295": 90, "283": 90, "243": 90, "303": 90, "316": 90, "247": 90, "323": 90, "327": 90, "226": 90, "228": 90, "232": 90, "219": 90, "239": 90, "240": 90, "209": 90, "242": 90, "202": 90, "230": 90, "215": 90, "220": 90, "229": 90, "217": 90, "237": 90, "207": 90, "204": 90, "84": [90, 93, 94], "205": 90, "223": 90, "153": 90, "149": 90, "140": 90, "124": 90, "268": 90, "273": 90, "108": 90, "284": 90, "110": 90, "136": 90, "145": 90, "173": 90, "297": 90, "317": 90, "192": 90, "332": 90, "324": 90, "203": 90, "320": 90, "314": 90, "199": 90, "291": 90, "000000481413": 90, "jpg": 90, "42398": 90, "44503": 90, "337": [90, 96], "29968": 90, "336": 90, "21005": 90, "9978472": 90, "forgot": 90, "drew": 90, "label_issue_idx": 90, "num_examples_to_show": 90, "138": 90, "candid": 90, "97489622": 90, "70610878": 90, "98764951": 90, "88899237": 90, "99085805": 90, "issue_idx": 90, "95569726e": 90, "03354841e": 90, "57510169e": 90, "58447666e": 90, "39755858e": 90, "issue_to_visu": 90, "000000009483": 90, "95569726168054e": 90, "addition": [90, 94], "visibl": 90, "missmatch": 90, "likelei": 90, "agnost": 90, "vaidat": 90, "inconsist": 90, "000000395701": 90, "033548411774308e": 90, "armchair": 90, "tv": 90, "000000154004": 90, "38300759625496356": 90, "foreground": 90, "000000448410": 90, "0008575101690203273": 90, "crowd": 90, "alon": 90, "explor": [90, 91], "resembl": [90, 91], "000000499768": 90, "9748962231208227": 90, "000000521141": 90, "8889923658893665": 90, "000000143931": 90, "9876495074395956": 90, "bonu": 90, "uncov": 90, "irregular": 90, "anomali": 90, "unusu": [90, 91], "object_detection_util": 90, "calculate_bounding_box_area": 90, "num_imgs_to_show": 90, "lab_object_count": 90, "pred_object_count": 90, "000000430073": 90, "000000183709": 90, "000000189475": 90, "studi": 90, "label_norm": 90, "pred_norm": 90, "area": [90, 94], "assess": 90, "lab_area": 90, "pred_area": 90, "lab_area_mean": 90, "lab_area_std": 90, "max_deviation_valu": 90, "max_deviation_class": 90, "deviation_valu": 90, "deviation_class": 90, "mean_area": 90, "std_area": 90, "class_area": 90, "deviations_awai": 90, "max_deviation_index": 90, "num_imgs_to_show_per_class": 90, "class_num": 90, "sorted_indic": 90, "000000422886": 90, "000000341828": 90, "000000461009": 90, "train_feature_embed": 91, "ood_train_feature_scor": 91, "test_feature_embed": 91, "ood_test_feature_scor": 91, "ood_train_predictions_scor": 91, "train_pred_prob": 91, "ood_test_predictions_scor": 91, "test_pred_prob": 91, "pylab": 91, "rcparam": 91, "baggingclassifi": 91, "therebi": 91, "rescal": 91, "transform_norm": 91, "totensor": 91, "root": 91, "animal_class": 91, "non_animal_class": 91, "animal_idx": 91, "test_idx": 91, "toronto": 91, "edu": 91, "kriz": 91, "170498071": 91, "1769472": 91, "17535904": 91, "13238272": 91, "74370078": 91, "06it": [91, 94], "24838144": 91, "93228598": 91, "79it": [91, 94], "36405248": 91, "101916046": 91, "14it": [91, 94], "48005120": 91, "106935286": 91, "07it": [91, 94], "59572224": 91, "109817407": 91, "70582272": 91, "109320454": 91, "82018304": 91, "110906987": 91, "93618176": 91, "112395489": 91, "105218048": 91, "113468559": 91, "91it": [91, 94], "116883456": 91, "114387924": 91, "22it": [91, 94], "128352256": 91, "114451065": 91, "139886592": 91, "114621062": 91, "151388160": 91, "114712298": 91, "163020800": 91, "115169212": 91, "87it": [91, 94], "108619440": 91, "20it": [91, 94], "5000": 91, "plot_imag": 91, "visualize_outli": 91, "txt_class": 91, "img": [91, 93], "npimg": 91, "show_label": 91, "data_subset": 91, "resnet50": 91, "corpu": 91, "2048": 91, "embed_imag": 91, "create_model": 91, "strang": 91, "odd": 91, "train_ood_features_scor": 91, "top_train_ood_features_idx": 91, "fun": 91, "negat": 91, "homogen": 91, "bottom_train_ood_features_idx": 91, "test_ood_features_scor": 91, "top_ood_features_idx": 91, "inevit": 91, "trade": 91, "5th": 91, "percentil": 91, "fifth_percentil": 91, "plt_rang": 91, "hist": 91, "train_outlier_scor": 91, "ylabel": 91, "axvlin": 91, "test_outlier_scor": 91, "ood_features_indic": 91, "revisit": 91, "return_invers": 91, "train_feature_embeddings_sc": 91, "test_feature_embeddings_sc": 91, "train_pred_label": 91, "9702": 91, "train_ood_predictions_scor": 91, "test_ood_predictions_scor": 91, "mainli": [91, 97], "lost": 91, "unsuit": 92, "ok": [92, 97], "convention": 92, "aforement": 92, "hypothet": 92, "contrast": 92, "tradit": 92, "disjoint": 92, "out_of_sample_pred_probs_for_a": 92, "out_of_sample_pred_probs_for_b": 92, "out_of_sample_pred_probs_for_c": 92, "out_of_sample_pred_prob": 92, "price": 93, "incom": 93, "ag": 93, "sensor": 93, "histgradientboostingregressor": 93, "r2_score": 93, "student_grades_r": 93, "final_scor": 93, "true_final_scor": 93, "homework": 93, "3d": 93, "hue": 93, "mpl_toolkit": 93, "mplot3d": 93, "axes3d": 93, "errors_idx": 93, "add_subplot": 93, "z": 93, "colorbar": 93, "errors_mask": 93, "feature_column": 93, "predicted_column": 93, "x_train_raw": 93, "x_test_raw": 93, "categorical_featur": [93, 95], "randomforestregressor": 93, "636197": 93, "499503": 93, "843478": 93, "776647": 93, "350358": 93, "170547": 93, "706969": 93, "984759": 93, "812515": 93, "795928": 93, "identified_issu": [93, 96], "141": 93, "659": 93, "367": 93, "318": 93, "305": 93, "560": 93, "657": 93, "688": 93, "view_datapoint": 93, "concat": 93, "consum": [93, 96], "baseline_model": [93, 96], "preds_og": 93, "r2_og": 93, "838": 93, "robustli": [93, 95, 96], "acceler": [93, 96], "found_label_issu": 93, "preds_cl": 93, "r2_cl": 93, "926": 93, "effort": [93, 95, 96], "favorit": 93, "968627e": 93, "228799": 93, "646674e": 93, "402962": 93, "323818e": 93, "952758": 93, "422144e": 93, "456908": 93, "465815e": 93, "753968": 93, "110719": 93, "000044": 93, "670640": 93, "000060": 93, "749976": 93, "000066": 93, "947007": 93, "000314": 93, "648396": 93, "plu": 93, "synthia": 94, "imagesegment": 94, "given_mask": 94, "predicted_mask": 94, "set_printopt": [94, 97], "sky": 94, "sidewalk": 94, "veget": 94, "terrain": 94, "rider": 94, "pred_probs_filepath": 94, "1088": 94, "1920": 94, "label_filepath": 94, "synthia_class": 94, "maunal": 94, "100000": 94, "244800": 94, "leftmost": 94, "middl": [94, 97], "infact": 94, "rightmost": 94, "discrep": 94, "4997817": 94, "15458": 94, "154572": 94, "04it": 94, "31103": 94, "155673": 94, "46794": 94, "156232": 94, "62418": 94, "156033": 94, "78022": 94, "155442": 94, "93567": 94, "154413": 94, "109010": 94, "154214": 94, "124433": 94, "148991": 94, "139968": 94, "150923": 94, "155544": 94, "152384": 94, "171177": 94, "153572": 94, "15it": 94, "186751": 94, "154222": 94, "56it": 94, "202243": 94, "154430": 94, "85it": 94, "218083": 94, "155619": 94, "233732": 94, "155879": 94, "58it": 94, "249325": 94, "155458": 94, "264875": 94, "155116": 94, "59it": 94, "280390": 94, "152298": 94, "295965": 94, "153316": 94, "98it": 94, "311617": 94, "154266": 94, "327323": 94, "155093": 94, "342940": 94, "155412": 94, "358613": 94, "155804": 94, "82it": 94, "374314": 94, "156164": 94, "389991": 94, "156343": 94, "90it": 94, "405628": 94, "156307": 94, "421260": 94, "156180": 94, "97it": 94, "436879": 94, "155837": 94, "452503": 94, "155955": 94, "09it": 94, "468100": 94, "155933": 94, "483768": 94, "156155": 94, "08it": 94, "499384": 94, "156056": 94, "514990": 94, "155342": 94, "13it": 94, "530526": 94, "155013": 94, "546128": 94, "155312": 94, "561660": 94, "154986": 94, "10it": 94, "577160": 94, "154863": 94, "48it": 94, "592647": 94, "154402": 94, "74it": 94, "608185": 94, "154688": 94, "55it": 94, "623697": 94, "154815": 94, "639179": 94, "654620": 94, "154330": 94, "84it": 94, "670158": 94, "154641": 94, "685626": 94, "154650": 94, "26it": 94, "701092": 94, "154443": 94, "716682": 94, "154877": 94, "732170": 94, "154786": 94, "747649": 94, "154587": 94, "92it": 94, "763108": 94, "150776": 94, "67it": 94, "778610": 94, "152024": 94, "794215": 94, "153213": 94, "809759": 94, "153872": 94, "825168": 94, "153935": 94, "840627": 94, "154126": 94, "856100": 94, "154303": 94, "871682": 94, "154753": 94, "887166": 94, "154775": 94, "902701": 94, "154946": 94, "51it": 94, "918197": 94, "151280": 94, "933580": 94, "152029": 94, "949012": 94, "152703": 94, "964420": 94, "153110": 94, "979740": 94, "153115": 94, "49it": 94, "995100": 94, "153257": 94, "1010559": 94, "153653": 94, "1025928": 94, "153548": 94, "63it": 94, "1041401": 94, "153899": 94, "18it": 94, "1056793": 94, "153853": 94, "05it": 94, "1072253": 94, "154074": 94, "1087675": 94, "154117": 94, "1103111": 94, "154188": 94, "1118559": 94, "154274": 94, "1134006": 94, "1149440": 94, "1164871": 94, "153856": 94, "1180341": 94, "154106": 94, "1195876": 94, "154475": 94, "1211324": 94, "154242": 94, "1226749": 94, "153683": 94, "1242128": 94, "153712": 94, "1257557": 94, "153882": 94, "1273302": 94, "154947": 94, "72it": 94, "1289084": 94, "155806": 94, "1304875": 94, "156433": 94, "1320775": 94, "157199": 94, "1336546": 94, "157351": 94, "1352408": 94, "157731": 94, "1368262": 94, "157972": 94, "1384097": 94, "158083": 94, "1399906": 94, "149768": 94, "1415500": 94, "151547": 94, "1431262": 94, "153320": 94, "1447021": 94, "154574": 94, "1462706": 94, "155246": 94, "1478414": 94, "155788": 94, "23it": 94, "1494130": 94, "156194": 94, "1510011": 94, "156972": 94, "1525860": 94, "157425": 94, "1541678": 94, "157648": 94, "1557449": 94, "154876": 94, "1573151": 94, "155508": 94, "1588908": 94, "156119": 94, "69it": 94, "1604732": 94, "156748": 94, "1620437": 94, "156836": 94, "1636212": 94, "157108": 94, "1651926": 94, "157088": 94, "1667733": 94, "157381": 94, "1683473": 94, "157283": 94, "1699325": 94, "157653": 94, "1715092": 94, "153748": 94, "94it": 94, "1730788": 94, "154692": 94, "1746561": 94, "155588": 94, "1762370": 94, "156331": 94, "1778148": 94, "156760": 94, "35it": 94, "1793951": 94, "157136": 94, "1809820": 94, "157599": 94, "11it": 94, "1825742": 94, "158081": 94, "1841573": 94, "158146": 94, "1857432": 94, "158277": 94, "1873262": 94, "158226": 94, "50it": 94, "1889086": 94, "157740": 94, "65it": 94, "1904862": 94, "157577": 94, "1920777": 94, "158044": 94, "53it": 94, "1936583": 94, "157935": 94, "1952377": 94, "157930": 94, "1968193": 94, "157997": 94, "1984004": 94, "158030": 94, "1999808": 94, "157992": 94, "2015608": 94, "157646": 94, "71it": 94, "2031381": 94, "157670": 94, "2047149": 94, "157553": 94, "2062905": 94, "157294": 94, "2078799": 94, "157783": 94, "2094578": 94, "157695": 94, "2110348": 94, "157502": 94, "2126099": 94, "157212": 94, "2141829": 94, "157229": 94, "2157553": 94, "157167": 94, "2173275": 94, "157180": 94, "2189055": 94, "157365": 94, "2204792": 94, "157209": 94, "2220514": 94, "156989": 94, "2236214": 94, "156694": 94, "2251884": 94, "156588": 94, "2267579": 94, "156693": 94, "93it": 94, "2283249": 94, "156678": 94, "2298963": 94, "156814": 94, "2314703": 94, "2330403": 94, "156871": 94, "2346288": 94, "157463": 94, "2362035": 94, "157230": 94, "39it": 94, "2377759": 94, "157092": 94, "96it": 94, "2393612": 94, "157519": 94, "2409365": 94, "157484": 94, "2425155": 94, "157607": 94, "2441015": 94, "157902": 94, "2456806": 94, "157374": 94, "2472674": 94, "157763": 94, "25it": 94, "2488535": 94, "158013": 94, "2504401": 94, "158204": 94, "31it": 94, "2520222": 94, "158105": 94, "2536033": 94, "157340": 94, "2551768": 94, "157158": 94, "2567569": 94, "157409": 94, "2583311": 94, "157145": 94, "41it": 94, "2599142": 94, "157489": 94, "73it": 94, "2615006": 94, "157832": 94, "2630804": 94, "157873": 94, "2646599": 94, "157893": 94, "2662389": 94, "157718": 94, "2678225": 94, "157909": 94, "2694017": 94, "157198": 94, "2709738": 94, "156980": 94, "2725437": 94, "2741144": 94, "157005": 94, "2756913": 94, "157207": 94, "2772700": 94, "157402": 94, "2788457": 94, "157450": 94, "38it": 94, "2804213": 94, "157481": 94, "2820009": 94, "157621": 94, "2835772": 94, "157605": 94, "2851533": 94, "157164": 94, "2867250": 94, "156947": 94, "2882945": 94, "156924": 94, "2898638": 94, "155970": 94, "2914298": 94, "2929917": 94, "156162": 94, "78it": 94, "2945631": 94, "156453": 94, "2961323": 94, "156592": 94, "2976983": 94, "156480": 94, "2992632": 94, "154988": 94, "3008135": 94, "154849": 94, "3023795": 94, "155368": 94, "3039494": 94, "155850": 94, "3055137": 94, "156022": 94, "3070895": 94, "156485": 94, "3086639": 94, "156768": 94, "19it": 94, "3102342": 94, "156844": 94, "3118027": 94, "156821": 94, "3133871": 94, "157305": 94, "3149602": 94, "157187": 94, "3165321": 94, "156743": 94, "3180996": 94, "156088": 94, "3196606": 94, "155835": 94, "77it": 94, "3212406": 94, "3228191": 94, "156888": 94, "17it": 94, "3243881": 94, "156622": 94, "3259544": 94, "156563": 94, "3275201": 94, "156344": 94, "3290836": 94, "156327": 94, "3306469": 94, "155945": 94, "3322126": 94, "156131": 94, "3337740": 94, "155522": 94, "3353296": 94, "155527": 94, "3368850": 94, "154987": 94, "3384350": 94, "154893": 94, "60it": 94, "3400105": 94, "155685": 94, "3415675": 94, "155530": 94, "3431229": 94, "155477": 94, "3446778": 94, "155273": 94, "3462306": 94, "154955": 94, "3477802": 94, "154759": 94, "3493279": 94, "154412": 94, "3508827": 94, "154730": 94, "3524301": 94, "154720": 94, "3539811": 94, "154831": 94, "3555315": 94, "154891": 94, "3570805": 94, "154429": 94, "3586385": 94, "154838": 94, "3601922": 94, "154996": 94, "3617530": 94, "155317": 94, "3633105": 94, "155443": 94, "3648650": 94, "154760": 94, "3664221": 94, "155042": 94, "3679850": 94, "155413": 94, "3695435": 94, "155542": 94, "3710990": 94, "155469": 94, "3726571": 94, "155569": 94, "3742129": 94, "155371": 94, "3757815": 94, "155795": 94, "3773395": 94, "155740": 94, "3789044": 94, "155961": 94, "3804641": 94, "155332": 94, "3820352": 94, "155860": 94, "3835939": 94, "155131": 94, "3851549": 94, "155417": 94, "3867144": 94, "155575": 94, "3882703": 94, "155070": 94, "3898211": 94, "154766": 94, "3913689": 94, "154566": 94, "3929147": 94, "154351": 94, "3944695": 94, "154684": 94, "46it": 94, "3960292": 94, "155066": 94, "3975799": 94, "146820": 94, "3991379": 94, "149407": 94, "4006973": 94, "151311": 94, "4022351": 94, "152035": 94, "4037792": 94, "152736": 94, "4053178": 94, "153067": 94, "4068681": 94, "153651": 94, "4084062": 94, "153694": 94, "4099493": 94, "153876": 94, "4114990": 94, "154200": 94, "4130416": 94, "153975": 94, "4145819": 94, "153988": 94, "4161309": 94, "154260": 94, "4176808": 94, "154477": 94, "12it": 94, "4192476": 94, "155136": 94, "4208022": 94, "155230": 94, "4223546": 94, "4239047": 94, "154841": 94, "4254730": 94, "155434": 94, "4270274": 94, "155337": 94, "4285809": 94, "146701": 94, "4301435": 94, "149450": 94, "4316955": 94, "151124": 94, "4332521": 94, "152453": 94, "4348015": 94, "153187": 94, "4363503": 94, "153686": 94, "4378970": 94, "153976": 94, "4394461": 94, "154253": 94, "4409899": 94, "154180": 94, "4425332": 94, "154224": 94, "4440838": 94, "154471": 94, "4456577": 94, "155343": 94, "4472268": 94, "155811": 94, "01it": 94, "4487983": 94, "156211": 94, "4503763": 94, "156686": 94, "4519565": 94, "157083": 94, "4535275": 94, "156611": 94, "4551067": 94, "157001": 94, "4566877": 94, "157326": 94, "4582611": 94, "157169": 94, "4598329": 94, "156914": 94, "4614021": 94, "156837": 94, "4629706": 94, "4645421": 94, "156913": 94, "4661113": 94, "156861": 94, "4676800": 94, "156536": 94, "4692553": 94, "156830": 94, "4708340": 94, "157141": 94, "4724061": 94, "157159": 94, "4739778": 94, "156912": 94, "4755471": 94, "4771163": 94, "148024": 94, "4786624": 94, "149916": 94, "4802295": 94, "151892": 94, "4817934": 94, "153210": 94, "4833630": 94, "154316": 94, "4849322": 94, "155087": 94, "4865019": 94, "155646": 94, "4880724": 94, "156063": 94, "4896380": 94, "156209": 94, "4912032": 94, "156301": 94, "4927669": 94, "154031": 94, "4943084": 94, "153179": 94, "4958784": 94, "154310": 94, "4974525": 94, "155228": 94, "4990234": 94, "155780": 94, "155475": 94, "3263230": 94, "783379": 94, "275110": 94, "255792": 94, "78225": 94, "55990": 94, "54427": 94, "33591": 94, "24645": 94, "21308": 94, "15045": 94, "14171": 94, "13832": 94, "13498": 94, "11490": 94, "9164": 94, "8769": 94, "6999": 94, "6031": 94, "5011": 94, "mistakenli": 94, "class_issu": 94, "aim": [94, 97], "domin": 94, "extratreesclassifi": 95, "extratre": 95, "ranked_label_issu": [95, 96], "labelencod": [95, 96], "labels_raw": 95, "interg": [95, 96], "tress": 95, "827": 95, "cheat": 95, "0pt": 95, "233": [95, 97], "labels_train": 95, "labels_test": 95, "acc_og": [95, 96], "783068783068783": 95, "acc_cl": [95, 96], "8095238095238095": 95, "earlier": [96, 97], "raw_label": 96, "raw_train_text": 96, "raw_test_text": 96, "raw_train_label": 96, "raw_test_label": 96, "encond": 96, "train_text": 96, "test_text": 96, "858371": 96, "547274": 96, "826228": 96, "966008": 96, "792449": 96, "646": 96, "390": 96, "628": 96, "702": 96, "135": 96, "735": 96, "print_as_df": 96, "inverse_transform": 96, "fight": 96, "bunch": 97, "conll": 97, "2003": 97, "love": 97, "n_i": 97, "optional_list_of_ordered_class_nam": 97, "deepai": 97, "conll2003": 97, "rm": 97, "tokenclassif": 97, "2024": 97, "2400": 97, "52e0": 97, "1a00": 97, "718": 97, "connect": 97, "443": 97, "await": 97, "982975": 97, "960k": 97, "kb": 97, "959": 97, "94k": 97, "mb": 97, "directori": 97, "inflat": 97, "17045998": 97, "16m": 97, "octet": 97, "26m": 97, "3mb": 97, "bert": 97, "read_npz": 97, "filepath": 97, "corrsespond": 97, "iob2": 97, "given_ent": 97, "entity_map": 97, "readfil": 97, "sep": 97, "startswith": 97, "docstart": 97, "isalpha": 97, "isupp": 97, "indices_to_preview": 97, "nsentenc": 97, "eu": 97, "reject": 97, "boycott": 97, "british": 97, "lamb": 97, "00030412": 97, "00023826": 97, "99936208": 97, "00007009": 97, "00002545": 97, "99998795": 97, "00000401": 97, "00000218": 97, "00000455": 97, "00000131": 97, "00000749": 97, "99996115": 97, "00001371": 97, "0000087": 97, "00000895": 97, "99998936": 97, "00000382": 97, "00000178": 97, "00000366": 97, "00000137": 97, "99999101": 97, "00000266": 97, "00000174": 97, "0000035": 97, "00000109": 97, "99998768": 97, "00000482": 97, "00000202": 97, "00000438": 97, "0000011": 97, "00000465": 97, "99996392": 97, "00001105": 97, "0000116": 97, "00000878": 97, "99998671": 97, "00000364": 97, "00000213": 97, "00000472": 97, "00000281": 97, "99999073": 97, "00000211": 97, "00000159": 97, "00000442": 97, "00000115": 97, "peter": 97, "blackburn": 97, "00000358": 97, "00000529": 97, "99995623": 97, "0000129": 97, "0000024": 97, "00001812": 97, "99994141": 97, "00001645": 97, "00002162": 97, "brussel": 97, "1996": 97, "00001172": 97, "00000821": 97, "00004661": 97, "0000618": 97, "99987167": 97, "99999061": 97, "00000201": 97, "00000195": 97, "00000408": 97, "00000135": 97, "2254": 97, "2907": 97, "19392": 97, "9962": 97, "8904": 97, "19303": 97, "12918": 97, "9256": 97, "11855": 97, "18392": 97, "20426": 97, "19402": 97, "14744": 97, "19371": 97, "4645": 97, "10331": 97, "9430": 97, "6143": 97, "18367": 97, "12914": 97, "todai": 97, "weather": 97, "march": 97, "scalfaro": 97, "northern": 97, "himself": 97, "said": 97, "germani": 97, "nastja": 97, "rysich": 97, "north": 97, "spla": 97, "fought": 97, "khartoum": 97, "govern": 97, "south": 97, "1983": 97, "autonomi": 97, "animist": 97, "region": 97, "moslem": 97, "arabis": 97, "mayor": 97, "antonio": 97, "gonzalez": 97, "garcia": 97, "revolutionari": 97, "parti": 97, "wednesdai": 97, "troop": 97, "raid": 97, "farm": 97, "stole": 97, "rape": 97, "women": 97, "spring": 97, "chg": 97, "hrw": 97, "12pct": 97, "princ": 97, "photo": 97, "moment": 97, "spokeswoman": 97, "rainier": 97, "told": 97, "reuter": 97, "danila": 97, "carib": 97, "w224": 97, "equip": 97, "radiomet": 97, "earn": 97, "19996": 97, "london": 97, "denom": 97, "sale": 97, "uk": 97, "jp": 97, "fr": 97, "maccabi": 97, "hapoel": 97, "haifa": 97, "tel": 97, "aviv": 97, "hospit": 97, "rever": 97, "roman": 97, "cathol": 97, "nun": 97, "admit": 97, "calcutta": 97, "week": 97, "ago": 97, "fever": 97, "vomit": 97, "allianc": 97, "embattl": 97, "kabul": 97, "salang": 97, "highwai": 97, "mondai": 97, "tuesdai": 97, "suprem": 97, "council": 97, "led": 97, "jumbish": 97, "milli": 97, "movement": 97, "warlord": 97, "abdul": 97, "rashid": 97, "dostum": 97, "dollar": 97, "exchang": 97, "3570": 97, "12049": 97, "born": 97, "1937": 97, "provinc": 97, "anhui": 97, "dai": 97, "came": 97, "shanghai": 97, "citi": 97, "prolif": 97, "author": 97, "teacher": 97, "chines": 97, "16764": 97, "1990": 97, "historian": 97, "alan": 97, "john": 97, "percival": 97, "taylor": 97, "di": 97, "20446": 97, "pace": 97, "bowler": 97, "ian": 97, "harvei": 97, "claim": 97, "victoria": 97, "15514": 97, "cotti": 97, "osc": 97, "foreign": 97, "minist": 97, "7525": 97, "sultan": 97, "specter": 97, "met": 97, "crown": 97, "abdullah": 97, "defenc": 97, "aviat": 97, "jeddah": 97, "saudi": 97, "agenc": 97, "2288": 97, "hi": 97, "customari": 97, "outfit": 97, "champion": 97, "damp": 97, "scalp": 97, "canada": 97, "reign": 97, "olymp": 97, "donovan": 97, "bailei": 97, "1992": 97, "linford": 97, "christi": 97, "britain": 97, "1984": 97, "1988": 97, "carl": 97, "lewi": 97, "ambigi": 97, "punctuat": 97, "chicago": 97, "digest": 97, "philadelphia": 97, "usda": 97, "york": 97, "token_issu": 97, "471": 97, "kean": 97, "year": 97, "contract": 97, "manchest": 97, "19072": 97, "societi": 97, "million": 97, "bite": 97, "deliv": 97, "19910": 97, "father": 97, "clarenc": 97, "woolmer": 97, "renam": 97, "uttar": 97, "pradesh": 97, "india": 97, "ranji": 97, "trophi": 97, "nation": 97, "championship": 97, "captain": 97, "1949": 97, "15658": 97, "19879": 97, "iii": 97, "brian": 97, "shimer": 97, "randi": 97, "jone": 97, "19104": 97}, "objects": {"cleanlab": [[0, 0, 0, "-", "benchmarking"], [2, 0, 0, "-", "classification"], [3, 0, 0, "-", "count"], [9, 0, 0, "-", "datalab"], [33, 0, 0, "-", "dataset"], [36, 0, 0, "-", "experimental"], [39, 0, 0, "-", "filter"], [40, 0, 0, "-", "internal"], [51, 0, 0, "-", "models"], [53, 0, 0, "-", "multiannotator"], [56, 0, 0, "-", "multilabel_classification"], [59, 0, 0, "-", "object_detection"], [62, 0, 0, "-", "outlier"], [63, 0, 0, "-", "rank"], [64, 0, 0, "-", "regression"], [68, 0, 0, "-", "segmentation"], [72, 0, 0, "-", "token_classification"]], "cleanlab.benchmarking": [[1, 0, 0, "-", "noise_generation"]], "cleanlab.benchmarking.noise_generation": [[1, 1, 1, "", "generate_n_rand_probabilities_that_sum_to_m"], [1, 1, 1, "", "generate_noise_matrix_from_trace"], [1, 1, 1, "", "generate_noisy_labels"], [1, 1, 1, "", "noise_matrix_is_valid"], [1, 1, 1, "", "randomly_distribute_N_balls_into_K_bins"]], "cleanlab.classification": [[2, 2, 1, "", "CleanLearning"]], "cleanlab.classification.CleanLearning": [[2, 3, 1, "", "__init_subclass__"], [2, 3, 1, "", "find_label_issues"], [2, 3, 1, "", "fit"], [2, 3, 1, "", "get_label_issues"], [2, 3, 1, "", "get_metadata_routing"], [2, 3, 1, "", "get_params"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "predict_proba"], [2, 3, 1, "", "save_space"], [2, 3, 1, "", "score"], [2, 3, 1, "", "set_fit_request"], [2, 3, 1, "", "set_params"], [2, 3, 1, "", "set_score_request"]], "cleanlab.count": [[3, 1, 1, "", "calibrate_confident_joint"], [3, 1, 1, "", "compute_confident_joint"], [3, 1, 1, "", "estimate_confident_joint_and_cv_pred_proba"], [3, 1, 1, "", "estimate_cv_predicted_probabilities"], [3, 1, 1, "", "estimate_joint"], [3, 1, 1, "", "estimate_latent"], [3, 1, 1, "", "estimate_noise_matrices"], [3, 1, 1, "", "estimate_py_and_noise_matrices_from_probabilities"], [3, 1, 1, "", "estimate_py_noise_matrices_and_cv_pred_proba"], [3, 1, 1, "", "get_confident_thresholds"], [3, 1, 1, "", "num_label_issues"]], "cleanlab.datalab": [[4, 0, 0, "-", "datalab"], [13, 0, 0, "-", "internal"]], "cleanlab.datalab.datalab": [[4, 2, 1, "", "Datalab"]], "cleanlab.datalab.datalab.Datalab": [[4, 4, 1, "", "class_names"], [4, 3, 1, "", "find_issues"], [4, 3, 1, "", "get_info"], [4, 3, 1, "", "get_issue_summary"], [4, 3, 1, "", "get_issues"], [4, 4, 1, "", "has_labels"], [4, 4, 1, "", "info"], [4, 4, 1, "", "issue_summary"], [4, 4, 1, "", "issues"], [4, 4, 1, "", "labels"], [4, 3, 1, "", "list_default_issue_types"], [4, 3, 1, "", "list_possible_issue_types"], [4, 3, 1, "", "load"], [4, 3, 1, "", "report"], [4, 3, 1, "", "save"]], "cleanlab.datalab.internal": [[10, 0, 0, "-", "data"], [11, 0, 0, "-", "data_issues"], [14, 0, 0, "-", "issue_finder"], [12, 0, 0, "-", "issue_manager_factory"], [30, 0, 0, "-", "report"], [31, 0, 0, "-", "task"]], "cleanlab.datalab.internal.data": [[10, 2, 1, "", "Data"], [10, 5, 1, "", "DataFormatError"], [10, 5, 1, "", "DatasetDictError"], [10, 5, 1, "", "DatasetLoadError"], [10, 2, 1, "", "Label"], [10, 2, 1, "", "MultiClass"], [10, 2, 1, "", "MultiLabel"]], "cleanlab.datalab.internal.data.Data": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "has_labels"]], "cleanlab.datalab.internal.data.DataFormatError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.DatasetDictError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.DatasetLoadError": [[10, 3, 1, "", "add_note"], [10, 6, 1, "", "args"], [10, 3, 1, "", "with_traceback"]], "cleanlab.datalab.internal.data.Label": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data.MultiClass": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data.MultiLabel": [[10, 4, 1, "", "class_names"], [10, 4, 1, "", "is_available"]], "cleanlab.datalab.internal.data_issues": [[11, 2, 1, "", "DataIssues"], [11, 1, 1, "", "get_data_statistics"]], "cleanlab.datalab.internal.data_issues.DataIssues": [[11, 3, 1, "", "collect_issues_from_imagelab"], [11, 3, 1, "", "collect_issues_from_issue_manager"], [11, 3, 1, "", "collect_statistics"], [11, 3, 1, "", "get_info"], [11, 3, 1, "", "get_issue_summary"], [11, 3, 1, "", "get_issues"], [11, 6, 1, "", "info"], [11, 6, 1, "", "issue_summary"], [11, 6, 1, "", "issues"], [11, 3, 1, "", "set_health_score"], [11, 4, 1, "", "statistics"]], "cleanlab.datalab.internal.issue_finder": [[14, 2, 1, "", "IssueFinder"]], "cleanlab.datalab.internal.issue_finder.IssueFinder": [[14, 3, 1, "", "find_issues"], [14, 3, 1, "", "get_available_issue_types"]], "cleanlab.datalab.internal.issue_manager": [[16, 0, 0, "-", "data_valuation"], [17, 0, 0, "-", "duplicate"], [18, 0, 0, "-", "imbalance"], [20, 0, 0, "-", "issue_manager"], [21, 0, 0, "-", "label"], [24, 0, 0, "-", "noniid"], [25, 0, 0, "-", "null"], [26, 0, 0, "-", "outlier"], [29, 0, 0, "-", "underperforming_group"]], "cleanlab.datalab.internal.issue_manager.data_valuation": [[16, 2, 1, "", "DataValuationIssueManager"]], "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager": [[16, 6, 1, "", "DEFAULT_THRESHOLD"], [16, 3, 1, "", "collect_info"], [16, 6, 1, "", "description"], [16, 3, 1, "", "find_issues"], [16, 6, 1, "", "info"], [16, 6, 1, "", "issue_name"], [16, 6, 1, "", "issue_score_key"], [16, 6, 1, "", "issues"], [16, 3, 1, "", "make_summary"], [16, 3, 1, "", "report"], [16, 6, 1, "", "summary"], [16, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.duplicate": [[17, 2, 1, "", "NearDuplicateIssueManager"]], "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager": [[17, 3, 1, "", "collect_info"], [17, 6, 1, "", "description"], [17, 3, 1, "", "find_issues"], [17, 6, 1, "", "info"], [17, 6, 1, "", "issue_name"], [17, 6, 1, "", "issue_score_key"], [17, 6, 1, "", "issues"], [17, 3, 1, "", "make_summary"], [17, 6, 1, "", "near_duplicate_sets"], [17, 3, 1, "", "report"], [17, 6, 1, "", "summary"], [17, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.imbalance": [[18, 2, 1, "", "ClassImbalanceIssueManager"]], "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager": [[18, 3, 1, "", "collect_info"], [18, 6, 1, "", "description"], [18, 3, 1, "", "find_issues"], [18, 6, 1, "", "info"], [18, 6, 1, "", "issue_name"], [18, 6, 1, "", "issue_score_key"], [18, 6, 1, "", "issues"], [18, 3, 1, "", "make_summary"], [18, 3, 1, "", "report"], [18, 6, 1, "", "summary"], [18, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.issue_manager": [[20, 2, 1, "", "IssueManager"]], "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager": [[20, 3, 1, "", "collect_info"], [20, 6, 1, "", "description"], [20, 3, 1, "", "find_issues"], [20, 6, 1, "", "info"], [20, 6, 1, "", "issue_name"], [20, 6, 1, "", "issue_score_key"], [20, 6, 1, "", "issues"], [20, 3, 1, "", "make_summary"], [20, 3, 1, "", "report"], [20, 6, 1, "", "summary"], [20, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.label": [[21, 2, 1, "", "LabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager": [[21, 3, 1, "", "collect_info"], [21, 6, 1, "", "description"], [21, 3, 1, "", "find_issues"], [21, 3, 1, "", "get_health_summary"], [21, 6, 1, "", "health_summary_parameters"], [21, 6, 1, "", "info"], [21, 6, 1, "", "issue_name"], [21, 6, 1, "", "issue_score_key"], [21, 6, 1, "", "issues"], [21, 3, 1, "", "make_summary"], [21, 3, 1, "", "report"], [21, 6, 1, "", "summary"], [21, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.multilabel": [[23, 0, 0, "-", "label"]], "cleanlab.datalab.internal.issue_manager.multilabel.label": [[23, 2, 1, "", "MultilabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager": [[23, 3, 1, "", "collect_info"], [23, 6, 1, "", "description"], [23, 3, 1, "", "find_issues"], [23, 6, 1, "", "info"], [23, 6, 1, "", "issue_name"], [23, 6, 1, "", "issue_score_key"], [23, 6, 1, "", "issues"], [23, 3, 1, "", "make_summary"], [23, 3, 1, "", "report"], [23, 6, 1, "", "summary"], [23, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.noniid": [[24, 2, 1, "", "NonIIDIssueManager"], [24, 1, 1, "", "simplified_kolmogorov_smirnov_test"]], "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager": [[24, 3, 1, "", "collect_info"], [24, 6, 1, "", "description"], [24, 3, 1, "", "find_issues"], [24, 6, 1, "", "info"], [24, 6, 1, "", "issue_name"], [24, 6, 1, "", "issue_score_key"], [24, 6, 1, "", "issues"], [24, 3, 1, "", "make_summary"], [24, 3, 1, "", "report"], [24, 6, 1, "", "summary"], [24, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.null": [[25, 2, 1, "", "NullIssueManager"]], "cleanlab.datalab.internal.issue_manager.null.NullIssueManager": [[25, 3, 1, "", "collect_info"], [25, 6, 1, "", "description"], [25, 3, 1, "", "find_issues"], [25, 6, 1, "", "info"], [25, 6, 1, "", "issue_name"], [25, 6, 1, "", "issue_score_key"], [25, 6, 1, "", "issues"], [25, 3, 1, "", "make_summary"], [25, 3, 1, "", "report"], [25, 6, 1, "", "summary"], [25, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.outlier": [[26, 2, 1, "", "OutlierIssueManager"]], "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager": [[26, 6, 1, "", "DEFAULT_THRESHOLDS"], [26, 3, 1, "", "collect_info"], [26, 6, 1, "", "description"], [26, 3, 1, "", "find_issues"], [26, 6, 1, "", "info"], [26, 6, 1, "", "issue_name"], [26, 6, 1, "", "issue_score_key"], [26, 6, 1, "", "issues"], [26, 3, 1, "", "make_summary"], [26, 6, 1, "", "ood"], [26, 3, 1, "", "report"], [26, 6, 1, "", "summary"], [26, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.regression": [[28, 0, 0, "-", "label"]], "cleanlab.datalab.internal.issue_manager.regression.label": [[28, 2, 1, "", "RegressionLabelIssueManager"], [28, 1, 1, "", "find_issues_with_features"], [28, 1, 1, "", "find_issues_with_predictions"]], "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager": [[28, 3, 1, "", "collect_info"], [28, 6, 1, "", "description"], [28, 3, 1, "", "find_issues"], [28, 6, 1, "", "info"], [28, 6, 1, "", "issue_name"], [28, 6, 1, "", "issue_score_key"], [28, 6, 1, "", "issues"], [28, 3, 1, "", "make_summary"], [28, 3, 1, "", "report"], [28, 6, 1, "", "summary"], [28, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager.underperforming_group": [[29, 2, 1, "", "UnderperformingGroupIssueManager"]], "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager": [[29, 6, 1, "", "NO_UNDERPERFORMING_CLUSTER_ID"], [29, 6, 1, "", "OUTLIER_CLUSTER_LABELS"], [29, 3, 1, "", "collect_info"], [29, 6, 1, "", "description"], [29, 3, 1, "", "filter_cluster_ids"], [29, 3, 1, "", "find_issues"], [29, 3, 1, "", "get_worst_cluster"], [29, 6, 1, "", "info"], [29, 6, 1, "", "issue_name"], [29, 6, 1, "", "issue_score_key"], [29, 6, 1, "", "issues"], [29, 3, 1, "", "make_summary"], [29, 3, 1, "", "perform_clustering"], [29, 3, 1, "", "report"], [29, 3, 1, "", "set_knn_graph"], [29, 6, 1, "", "summary"], [29, 6, 1, "", "verbosity_levels"]], "cleanlab.datalab.internal.issue_manager_factory": [[12, 7, 1, "", "REGISTRY"], [12, 1, 1, "", "list_default_issue_types"], [12, 1, 1, "", "list_possible_issue_types"], [12, 1, 1, "", "register"]], "cleanlab.datalab.internal.report": [[30, 2, 1, "", "Reporter"]], "cleanlab.datalab.internal.report.Reporter": [[30, 3, 1, "", "get_report"], [30, 3, 1, "", "report"]], "cleanlab.datalab.internal.task": [[31, 2, 1, "", "Task"]], "cleanlab.datalab.internal.task.Task": [[31, 6, 1, "", "CLASSIFICATION"], [31, 6, 1, "", "MULTILABEL"], [31, 6, 1, "", "REGRESSION"], [31, 3, 1, "", "__contains__"], [31, 3, 1, "", "__getitem__"], [31, 3, 1, "", "__iter__"], [31, 3, 1, "", "__len__"], [31, 3, 1, "", "from_str"], [31, 4, 1, "", "is_classification"], [31, 4, 1, "", "is_multilabel"], [31, 4, 1, "", "is_regression"]], "cleanlab.dataset": [[33, 1, 1, "", "find_overlapping_classes"], [33, 1, 1, "", "health_summary"], [33, 1, 1, "", "overall_label_health_score"], [33, 1, 1, "", "rank_classes_by_label_quality"]], "cleanlab.experimental": [[34, 0, 0, "-", "cifar_cnn"], [35, 0, 0, "-", "coteaching"], [37, 0, 0, "-", "label_issues_batched"], [38, 0, 0, "-", "mnist_pytorch"]], "cleanlab.experimental.cifar_cnn": [[34, 2, 1, "", "CNN"], [34, 1, 1, "", "call_bn"]], "cleanlab.experimental.cifar_cnn.CNN": [[34, 6, 1, "", "T_destination"], [34, 3, 1, "", "__call__"], [34, 3, 1, "", "add_module"], [34, 3, 1, "", "apply"], [34, 3, 1, "", "bfloat16"], [34, 3, 1, "", "buffers"], [34, 6, 1, "", "call_super_init"], [34, 3, 1, "", "children"], [34, 3, 1, "", "compile"], [34, 3, 1, "", "cpu"], [34, 3, 1, "", "cuda"], [34, 3, 1, "", "double"], [34, 6, 1, "", "dump_patches"], [34, 3, 1, "", "eval"], [34, 3, 1, "", "extra_repr"], [34, 3, 1, "", "float"], [34, 3, 1, "id0", "forward"], [34, 3, 1, "", "get_buffer"], [34, 3, 1, "", "get_extra_state"], [34, 3, 1, "", "get_parameter"], [34, 3, 1, "", "get_submodule"], [34, 3, 1, "", "half"], [34, 3, 1, "", "ipu"], [34, 3, 1, "", "load_state_dict"], [34, 3, 1, "", "modules"], [34, 3, 1, "", "named_buffers"], [34, 3, 1, "", "named_children"], [34, 3, 1, "", "named_modules"], [34, 3, 1, "", "named_parameters"], [34, 3, 1, "", "parameters"], [34, 3, 1, "", "register_backward_hook"], [34, 3, 1, "", "register_buffer"], [34, 3, 1, "", "register_forward_hook"], [34, 3, 1, "", "register_forward_pre_hook"], [34, 3, 1, "", "register_full_backward_hook"], [34, 3, 1, "", "register_full_backward_pre_hook"], [34, 3, 1, "", "register_load_state_dict_post_hook"], [34, 3, 1, "", "register_module"], [34, 3, 1, "", "register_parameter"], [34, 3, 1, "", "register_state_dict_pre_hook"], [34, 3, 1, "", "requires_grad_"], [34, 3, 1, "", "set_extra_state"], [34, 3, 1, "", "share_memory"], [34, 3, 1, "", "state_dict"], [34, 3, 1, "", "to"], [34, 3, 1, "", "to_empty"], [34, 3, 1, "", "train"], [34, 6, 1, "", "training"], [34, 3, 1, "", "type"], [34, 3, 1, "", "xpu"], [34, 3, 1, "", "zero_grad"]], "cleanlab.experimental.coteaching": [[35, 1, 1, "", "adjust_learning_rate"], [35, 1, 1, "", "evaluate"], [35, 1, 1, "", "forget_rate_scheduler"], [35, 1, 1, "", "initialize_lr_scheduler"], [35, 1, 1, "", "loss_coteaching"], [35, 1, 1, "", "train"]], "cleanlab.experimental.label_issues_batched": [[37, 2, 1, "", "LabelInspector"], [37, 7, 1, "", "adj_confident_thresholds_shared"], [37, 1, 1, "", "find_label_issues_batched"], [37, 7, 1, "", "labels_shared"], [37, 7, 1, "", "pred_probs_shared"], [37, 1, 1, "", "split_arr"]], "cleanlab.experimental.label_issues_batched.LabelInspector": [[37, 3, 1, "", "get_confident_thresholds"], [37, 3, 1, "", "get_label_issues"], [37, 3, 1, "", "get_num_issues"], [37, 3, 1, "", "get_quality_scores"], [37, 3, 1, "", "score_label_quality"], [37, 3, 1, "", "update_confident_thresholds"]], "cleanlab.experimental.mnist_pytorch": [[38, 2, 1, "", "CNN"], [38, 2, 1, "", "SimpleNet"], [38, 1, 1, "", "get_mnist_dataset"], [38, 1, 1, "", "get_sklearn_digits_dataset"]], "cleanlab.experimental.mnist_pytorch.CNN": [[38, 3, 1, "", "__init_subclass__"], [38, 6, 1, "", "batch_size"], [38, 6, 1, "", "dataset"], [38, 6, 1, "", "epochs"], [38, 3, 1, "id0", "fit"], [38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 6, 1, "", "loader"], [38, 6, 1, "", "log_interval"], [38, 6, 1, "", "lr"], [38, 6, 1, "", "momentum"], [38, 6, 1, "", "no_cuda"], [38, 3, 1, "id1", "predict"], [38, 3, 1, "id4", "predict_proba"], [38, 6, 1, "", "seed"], [38, 3, 1, "", "set_fit_request"], [38, 3, 1, "", "set_params"], [38, 3, 1, "", "set_predict_proba_request"], [38, 3, 1, "", "set_predict_request"], [38, 6, 1, "", "test_batch_size"]], "cleanlab.experimental.mnist_pytorch.SimpleNet": [[38, 6, 1, "", "T_destination"], [38, 3, 1, "", "__call__"], [38, 3, 1, "", "add_module"], [38, 3, 1, "", "apply"], [38, 3, 1, "", "bfloat16"], [38, 3, 1, "", "buffers"], [38, 6, 1, "", "call_super_init"], [38, 3, 1, "", "children"], [38, 3, 1, "", "compile"], [38, 3, 1, "", "cpu"], [38, 3, 1, "", "cuda"], [38, 3, 1, "", "double"], [38, 6, 1, "", "dump_patches"], [38, 3, 1, "", "eval"], [38, 3, 1, "", "extra_repr"], [38, 3, 1, "", "float"], [38, 3, 1, "", "forward"], [38, 3, 1, "", "get_buffer"], [38, 3, 1, "", "get_extra_state"], [38, 3, 1, "", "get_parameter"], [38, 3, 1, "", "get_submodule"], [38, 3, 1, "", "half"], [38, 3, 1, "", "ipu"], [38, 3, 1, "", "load_state_dict"], [38, 3, 1, "", "modules"], [38, 3, 1, "", "named_buffers"], [38, 3, 1, "", "named_children"], [38, 3, 1, "", "named_modules"], [38, 3, 1, "", "named_parameters"], [38, 3, 1, "", "parameters"], [38, 3, 1, "", "register_backward_hook"], [38, 3, 1, "", "register_buffer"], [38, 3, 1, "", "register_forward_hook"], [38, 3, 1, "", "register_forward_pre_hook"], [38, 3, 1, "", "register_full_backward_hook"], [38, 3, 1, "", "register_full_backward_pre_hook"], [38, 3, 1, "", "register_load_state_dict_post_hook"], [38, 3, 1, "", "register_module"], [38, 3, 1, "", "register_parameter"], [38, 3, 1, "", "register_state_dict_pre_hook"], [38, 3, 1, "", "requires_grad_"], [38, 3, 1, "", "set_extra_state"], [38, 3, 1, "", "share_memory"], [38, 3, 1, "", "state_dict"], [38, 3, 1, "", "to"], [38, 3, 1, "", "to_empty"], [38, 3, 1, "", "train"], [38, 6, 1, "", "training"], [38, 3, 1, "", "type"], [38, 3, 1, "", "xpu"], [38, 3, 1, "", "zero_grad"]], "cleanlab.filter": [[39, 1, 1, "", "find_label_issues"], [39, 1, 1, "", "find_label_issues_using_argmax_confusion_matrix"], [39, 1, 1, "", "find_predicted_neq_given"], [39, 7, 1, "", "pred_probs_by_class"], [39, 7, 1, "", "prune_count_matrix_cols"]], "cleanlab.internal": [[41, 0, 0, "-", "label_quality_utils"], [42, 0, 0, "-", "latent_algebra"], [43, 0, 0, "-", "multiannotator_utils"], [44, 0, 0, "-", "multilabel_scorer"], [45, 0, 0, "-", "multilabel_utils"], [46, 0, 0, "-", "outlier"], [47, 0, 0, "-", "token_classification_utils"], [48, 0, 0, "-", "util"], [49, 0, 0, "-", "validation"]], "cleanlab.internal.label_quality_utils": [[41, 1, 1, "", "get_normalized_entropy"]], "cleanlab.internal.latent_algebra": [[42, 1, 1, "", "compute_inv_noise_matrix"], [42, 1, 1, "", "compute_noise_matrix_from_inverse"], [42, 1, 1, "", "compute_ps_py_inv_noise_matrix"], [42, 1, 1, "", "compute_py"], [42, 1, 1, "", "compute_py_inv_noise_matrix"], [42, 1, 1, "", "compute_pyx"]], "cleanlab.internal.multiannotator_utils": [[43, 1, 1, "", "assert_valid_inputs_multiannotator"], [43, 1, 1, "", "assert_valid_pred_probs"], [43, 1, 1, "", "check_consensus_label_classes"], [43, 1, 1, "", "compute_soft_cross_entropy"], [43, 1, 1, "", "find_best_temp_scaler"], [43, 1, 1, "", "format_multiannotator_labels"], [43, 1, 1, "", "temp_scale_pred_probs"]], "cleanlab.internal.multilabel_scorer": [[44, 2, 1, "", "Aggregator"], [44, 2, 1, "", "ClassLabelScorer"], [44, 2, 1, "", "MultilabelScorer"], [44, 1, 1, "", "exponential_moving_average"], [44, 1, 1, "", "get_cross_validated_multilabel_pred_probs"], [44, 1, 1, "", "get_label_quality_scores"], [44, 1, 1, "", "multilabel_py"], [44, 1, 1, "", "softmin"]], "cleanlab.internal.multilabel_scorer.Aggregator": [[44, 3, 1, "", "__call__"], [44, 6, 1, "", "possible_methods"]], "cleanlab.internal.multilabel_scorer.ClassLabelScorer": [[44, 6, 1, "", "CONFIDENCE_WEIGHTED_ENTROPY"], [44, 6, 1, "", "NORMALIZED_MARGIN"], [44, 6, 1, "", "SELF_CONFIDENCE"], [44, 3, 1, "", "__call__"], [44, 3, 1, "", "__contains__"], [44, 3, 1, "", "__getitem__"], [44, 3, 1, "", "__iter__"], [44, 3, 1, "", "__len__"], [44, 3, 1, "", "from_str"]], "cleanlab.internal.multilabel_scorer.MultilabelScorer": [[44, 3, 1, "", "__call__"], [44, 3, 1, "", "aggregate"], [44, 3, 1, "", "get_class_label_quality_scores"]], "cleanlab.internal.multilabel_utils": [[45, 1, 1, "", "get_onehot_num_classes"], [45, 1, 1, "", "int2onehot"], [45, 1, 1, "", "onehot2int"], [45, 1, 1, "", "stack_complement"]], "cleanlab.internal.outlier": [[46, 1, 1, "", "transform_distances_to_scores"]], "cleanlab.internal.token_classification_utils": [[47, 1, 1, "", "color_sentence"], [47, 1, 1, "", "filter_sentence"], [47, 1, 1, "", "get_sentence"], [47, 1, 1, "", "mapping"], [47, 1, 1, "", "merge_probs"], [47, 1, 1, "", "process_token"]], "cleanlab.internal.util": [[48, 1, 1, "", "append_extra_datapoint"], [48, 1, 1, "", "clip_noise_rates"], [48, 1, 1, "", "clip_values"], [48, 1, 1, "", "compress_int_array"], [48, 1, 1, "", "confusion_matrix"], [48, 1, 1, "", "csr_vstack"], [48, 1, 1, "", "estimate_pu_f1"], [48, 1, 1, "", "extract_indices_tf"], [48, 1, 1, "", "force_two_dimensions"], [48, 1, 1, "", "format_labels"], [48, 1, 1, "", "get_missing_classes"], [48, 1, 1, "", "get_num_classes"], [48, 1, 1, "", "get_unique_classes"], [48, 1, 1, "", "is_tensorflow_dataset"], [48, 1, 1, "", "is_torch_dataset"], [48, 1, 1, "", "num_unique_classes"], [48, 1, 1, "", "print_inverse_noise_matrix"], [48, 1, 1, "", "print_joint_matrix"], [48, 1, 1, "", "print_noise_matrix"], [48, 1, 1, "", "print_square_matrix"], [48, 1, 1, "", "remove_noise_from_class"], [48, 1, 1, "", "round_preserving_row_totals"], [48, 1, 1, "", "round_preserving_sum"], [48, 1, 1, "", "smart_display_dataframe"], [48, 1, 1, "", "subset_X_y"], [48, 1, 1, "", "subset_data"], [48, 1, 1, "", "subset_labels"], [48, 1, 1, "", "train_val_split"], [48, 1, 1, "", "unshuffle_tensorflow_dataset"], [48, 1, 1, "", "value_counts"], [48, 1, 1, "", "value_counts_fill_missing_classes"]], "cleanlab.internal.validation": [[49, 1, 1, "", "assert_indexing_works"], [49, 1, 1, "", "assert_nonempty_input"], [49, 1, 1, "", "assert_valid_class_labels"], [49, 1, 1, "", "assert_valid_inputs"], [49, 1, 1, "", "labels_to_array"], [49, 1, 1, "", "labels_to_list_multilabel"]], "cleanlab.models": [[52, 0, 0, "-", "keras"]], "cleanlab.models.keras": [[52, 2, 1, "", "KerasWrapperModel"], [52, 2, 1, "", "KerasWrapperSequential"]], "cleanlab.models.keras.KerasWrapperModel": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "set_params"], [52, 3, 1, "", "summary"]], "cleanlab.models.keras.KerasWrapperSequential": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "set_params"], [52, 3, 1, "", "summary"]], "cleanlab.multiannotator": [[53, 1, 1, "", "convert_long_to_wide_dataset"], [53, 1, 1, "", "get_active_learning_scores"], [53, 1, 1, "", "get_active_learning_scores_ensemble"], [53, 1, 1, "", "get_label_quality_multiannotator"], [53, 1, 1, "", "get_label_quality_multiannotator_ensemble"], [53, 1, 1, "", "get_majority_vote_label"]], "cleanlab.multilabel_classification": [[54, 0, 0, "-", "dataset"], [55, 0, 0, "-", "filter"], [57, 0, 0, "-", "rank"]], "cleanlab.multilabel_classification.dataset": [[54, 1, 1, "", "common_multilabel_issues"], [54, 1, 1, "", "multilabel_health_summary"], [54, 1, 1, "", "overall_multilabel_health_score"], [54, 1, 1, "", "rank_classes_by_multilabel_quality"]], "cleanlab.multilabel_classification.filter": [[55, 1, 1, "", "find_label_issues"], [55, 1, 1, "", "find_multilabel_issues_per_class"]], "cleanlab.multilabel_classification.rank": [[57, 1, 1, "", "get_label_quality_scores"], [57, 1, 1, "", "get_label_quality_scores_per_class"]], "cleanlab.object_detection": [[58, 0, 0, "-", "filter"], [60, 0, 0, "-", "rank"], [61, 0, 0, "-", "summary"]], "cleanlab.object_detection.filter": [[58, 1, 1, "", "find_label_issues"]], "cleanlab.object_detection.rank": [[60, 1, 1, "", "compute_badloc_box_scores"], [60, 1, 1, "", "compute_overlooked_box_scores"], [60, 1, 1, "", "compute_swap_box_scores"], [60, 1, 1, "", "get_label_quality_scores"], [60, 1, 1, "", "issues_from_scores"], [60, 1, 1, "", "pool_box_scores_per_image"]], "cleanlab.object_detection.summary": [[61, 1, 1, "", "bounding_box_size_distribution"], [61, 1, 1, "", "calculate_per_class_metrics"], [61, 1, 1, "", "class_label_distribution"], [61, 1, 1, "", "get_average_per_class_confusion_matrix"], [61, 1, 1, "", "get_sorted_bbox_count_idxs"], [61, 1, 1, "", "object_counts_per_image"], [61, 1, 1, "", "plot_class_distribution"], [61, 1, 1, "", "plot_class_size_distributions"], [61, 1, 1, "", "visualize"]], "cleanlab.outlier": [[62, 2, 1, "", "OutOfDistribution"]], "cleanlab.outlier.OutOfDistribution": [[62, 3, 1, "", "fit"], [62, 3, 1, "", "fit_score"], [62, 3, 1, "", "score"]], "cleanlab.rank": [[63, 1, 1, "", "find_top_issues"], [63, 1, 1, "", "get_confidence_weighted_entropy_for_each_label"], [63, 1, 1, "", "get_label_quality_ensemble_scores"], [63, 1, 1, "", "get_label_quality_scores"], [63, 1, 1, "", "get_normalized_margin_for_each_label"], [63, 1, 1, "", "get_self_confidence_for_each_label"], [63, 1, 1, "", "order_label_issues"]], "cleanlab.regression": [[65, 0, 0, "-", "learn"], [66, 0, 0, "-", "rank"]], "cleanlab.regression.learn": [[65, 2, 1, "", "CleanLearning"]], "cleanlab.regression.learn.CleanLearning": [[65, 3, 1, "", "__init_subclass__"], [65, 3, 1, "", "find_label_issues"], [65, 3, 1, "", "fit"], [65, 3, 1, "", "get_aleatoric_uncertainty"], [65, 3, 1, "", "get_epistemic_uncertainty"], [65, 3, 1, "", "get_label_issues"], [65, 3, 1, "", "get_metadata_routing"], [65, 3, 1, "", "get_params"], [65, 3, 1, "", "predict"], [65, 3, 1, "", "save_space"], [65, 3, 1, "", "score"], [65, 3, 1, "", "set_fit_request"], [65, 3, 1, "", "set_params"], [65, 3, 1, "", "set_score_request"]], "cleanlab.regression.rank": [[66, 1, 1, "", "get_label_quality_scores"]], "cleanlab.segmentation": [[67, 0, 0, "-", "filter"], [69, 0, 0, "-", "rank"], [70, 0, 0, "-", "summary"]], "cleanlab.segmentation.filter": [[67, 1, 1, "", "find_label_issues"]], "cleanlab.segmentation.rank": [[69, 1, 1, "", "get_label_quality_scores"], [69, 1, 1, "", "issues_from_scores"]], "cleanlab.segmentation.summary": [[70, 1, 1, "", "common_label_issues"], [70, 1, 1, "", "display_issues"], [70, 1, 1, "", "filter_by_class"]], "cleanlab.token_classification": [[71, 0, 0, "-", "filter"], [73, 0, 0, "-", "rank"], [74, 0, 0, "-", "summary"]], "cleanlab.token_classification.filter": [[71, 1, 1, "", "find_label_issues"]], "cleanlab.token_classification.rank": [[73, 1, 1, "", "get_label_quality_scores"], [73, 1, 1, "", "issues_from_scores"]], "cleanlab.token_classification.summary": [[74, 1, 1, "", "common_label_issues"], [74, 1, 1, "", "display_issues"], [74, 1, 1, "", "filter_by_token"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:attribute", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"], "7": ["py", "data", "Python data"]}, "titleterms": {"benchmark": 0, "noise_gener": 1, "classif": [2, 77, 81, 82, 84, 85, 86, 89, 95, 96, 97], "count": [3, 86], "datalab": [4, 5, 7, 8, 9, 78, 79, 80, 81, 82, 86, 89], "creat": [5, 78, 79, 86, 88], "your": [5, 75, 78, 79, 82, 84, 86], "own": 5, "issu": [5, 7, 8, 19, 28, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 94, 95, 97], "manag": [5, 19], "prerequisit": 5, "implement": 5, "issuemanag": [5, 78], "basic": 5, "check": 5, "intermedi": 5, "advanc": [5, 78], "us": [5, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "gener": 6, "cluster": [6, 84], "id": 6, "guid": [7, 9], "type": [7, 8, 86], "custom": [7, 78], "can": [8, 79, 83, 84, 86, 88], "detect": [8, 79, 81, 82, 84, 86, 90, 91], "estim": [8, 86, 88, 89], "each": 8, "label": [8, 21, 23, 28, 75, 77, 79, 81, 82, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97], "outlier": [8, 26, 46, 62, 81, 82, 85, 89, 91], "Near": [8, 79, 81, 82, 85], "duplic": [8, 17, 79, 81, 82, 84, 85, 89], "non": [8, 82], "iid": [8, 82], "class": [8, 76, 86, 94], "imbal": [8, 18], "imag": [8, 85, 91], "specif": [8, 19, 94], "underperform": [8, 84], "group": [8, 84], "null": [8, 25], "data": [8, 10, 75, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 95, 97], "valuat": 8, "option": 8, "paramet": [8, 86], "get": [9, 78, 79, 88, 89, 90, 94, 97], "start": [9, 83], "api": 9, "refer": 9, "data_issu": 11, "factori": 12, "intern": [13, 40], "issue_find": 14, "data_valu": 16, "issue_manag": [19, 20], "regist": 19, "unregist": 19, "ml": [19, 84, 86], "task": [19, 31], "multilabel": 22, "noniid": 24, "regress": [27, 64, 65, 66, 84, 93], "prioriti": 28, "order": 28, "find": [28, 75, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "underperforming_group": 29, "report": [30, 85], "dataset": [33, 54, 75, 79, 82, 83, 84, 85, 86, 89, 90, 91, 93, 94, 96, 97], "cifar_cnn": 34, "coteach": 35, "experiment": 36, "label_issues_batch": 37, "mnist_pytorch": 38, "filter": [39, 55, 58, 67, 71, 86], "label_quality_util": 41, "latent_algebra": 42, "multiannotator_util": 43, "multilabel_scor": 44, "multilabel_util": 45, "token_classification_util": 47, "util": 48, "valid": [49, 85, 92], "fasttext": 50, "model": [51, 75, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96], "kera": 52, "multiannot": [53, 88], "multilabel_classif": 56, "rank": [57, 60, 63, 66, 69, 73, 86], "object_detect": 59, "summari": [61, 70, 74], "learn": [65, 79, 84, 86, 95], "segment": [68, 94], "token_classif": [72, 97], "cleanlab": [75, 77, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "open": [75, 84], "sourc": [75, 84], "document": 75, "quickstart": 75, "1": [75, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "instal": [75, 77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "2": [75, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "common": [75, 76, 97], "3": [75, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "handl": [75, 84], "error": [75, 84, 85, 86, 88, 89, 90, 93, 94, 96, 97], "train": [75, 77, 84, 91, 93, 95, 96], "robust": [75, 86, 93, 95, 96], "noisi": [75, 86, 93, 95, 96], "4": [75, 77, 78, 79, 81, 82, 85, 86, 88, 90, 91, 93, 95, 96], "curat": [75, 83], "fix": [75, 84], "level": [75, 83, 86, 97], "5": [75, 77, 79, 81, 85, 86, 88, 93, 95], "improv": [75, 88], "via": [75, 86, 88], "mani": [75, 86], "other": [75, 88, 90, 93], "techniqu": 75, "contribut": 75, "easi": [75, 81, 82, 85], "mode": [75, 81, 82, 85], "how": [76, 84, 86, 88, 89, 97], "migrat": 76, "version": 76, "0": 76, "from": [76, 78, 79, 86, 93, 95, 96], "pre": [76, 77, 84, 91], "function": [76, 78], "name": 76, "chang": 76, "modul": [76, 86], "new": 76, "remov": 76, "argument": [76, 78], "variabl": 76, "audio": 77, "speechbrain": 77, "depend": [77, 78, 79, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97], "import": [77, 78, 79, 83, 85, 86, 88], "them": [77, 83, 86], "load": [77, 78, 79, 81, 82, 93, 95, 96], "featur": [77, 85, 91], "fit": 77, "linear": 77, "comput": [77, 81, 82, 84, 85, 88, 92, 95], "out": [77, 78, 79, 81, 82, 85, 88, 92, 95], "sampl": [77, 78, 79, 81, 82, 85, 88, 92, 95], "predict": [77, 78, 79, 81, 82, 85, 88, 89, 90, 92, 95], "probabl": [77, 78, 79, 81, 82, 85, 88, 92, 95], "workflow": [78, 86], "audit": [78, 79], "requir": [78, 79, 81, 82, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97], "classifi": [78, 79], "instanti": 78, "object": [78, 90], "increment": 78, "search": 78, "specifi": [78, 84], "nondefault": 78, "save": 78, "ad": 78, "A": 79, "unifi": 79, "all": [79, 86], "kind": [79, 90], "skip": [79, 83, 86, 88], "detail": [79, 83, 86, 88], "more": [79, 86, 93, 95, 96], "about": 79, "addit": 79, "inform": [79, 85], "tutori": [80, 83, 87], "tabular": [81, 95], "numer": 81, "categor": 81, "column": 81, "process": [81, 91, 93, 95], "select": [81, 95], "construct": 81, "k": [81, 85, 92], "nearest": 81, "neighbour": 81, "graph": 81, "text": [82, 96, 97], "format": [82, 84, 89, 90, 96], "defin": [82, 85, 93, 96], "drift": [82, 89], "fetch": [83, 85], "evalu": 83, "health": [83, 86], "8": [83, 86], "popular": 83, "faq": 84, "what": [84, 86, 92], "do": [84, 86], "i": [84, 86, 92], "infer": 84, "correct": 84, "exampl": [84, 85, 86, 91], "ha": 84, "flag": 84, "should": 84, "v": 84, "test": [84, 86, 91], "big": 84, "limit": 84, "memori": 84, "why": 84, "isn": 84, "t": 84, "cleanlearn": [84, 86], "work": [84, 86, 88, 97], "me": 84, "differ": [84, 90], "clean": [84, 86], "final": 84, "hyperparamet": 84, "tune": 84, "onli": 84, "one": [84, 86, 89, 94], "doe": [84, 88, 97], "take": 84, "so": 84, "long": 84, "slice": 84, "when": [84, 86], "identifi": [84, 90], "run": 84, "licens": 84, "under": 84, "an": 84, "answer": 84, "question": 84, "pytorch": [85, 91], "normal": 85, "fashion": 85, "mnist": 85, "prepar": 85, "fold": [85, 92], "cross": [85, 92], "embed": [85, 91], "7": [85, 86], "view": 85, "most": [85, 97], "like": 85, "sever": 85, "set": [85, 86], "dark": 85, "top": [85, 94], "low": 85, "The": 86, "centric": 86, "ai": 86, "machin": 86, "find_label_issu": 86, "line": 86, "code": 86, "visual": [86, 90, 91, 94], "twenti": 86, "lowest": 86, "qualiti": [86, 88, 89, 90, 94, 97], "see": 86, "now": 86, "let": 86, "": 86, "happen": 86, "we": 86, "merg": 86, "seafoam": 86, "green": 86, "yellow": 86, "too": 86, "you": 86, "re": 86, "6": 86, "One": 86, "score": [86, 88, 89, 90, 94, 97], "rule": 86, "overal": [86, 94], "accur": 86, "thi": 86, "directli": 86, "fulli": 86, "character": 86, "nois": 86, "matrix": [86, 89], "joint": 86, "prior": 86, "true": 86, "distribut": 86, "flip": 86, "rate": 86, "ani": 86, "again": 86, "support": 86, "lot": 86, "method": 86, "filter_bi": 86, "automat": 86, "everi": 86, "uniqu": 86, "num_label_issu": 86, "threshold": 86, "found": 86, "Not": 86, "sure": 86, "ensembl": 86, "multipl": [86, 88], "predictor": 86, "consensu": 88, "annot": 88, "initi": 88, "major": 88, "vote": 88, "better": 88, "statist": 88, "compar": 88, "inspect": 88, "potenti": [88, 93, 96], "retrain": 88, "further": 88, "multi": 89, "beyond": 89, "mislabel": [89, 94, 97], "given": 89, "hot": 89, "binari": 89, "without": 89, "applic": 89, "real": 89, "download": [90, 94, 97], "objectlab": 90, "exploratori": 90, "analysi": 90, "timm": 91, "cifar10": 91, "some": 91, "pred_prob": [91, 94, 97], "wai": 93, "semant": 94, "which": 94, "ar": 94, "commonli": 94, "focus": 94, "scikit": 95, "token": 97, "word": 97, "sentenc": 97, "contain": 97, "particular": 97}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinx": 58}, "alltitles": {"benchmarking": [[0, "module-cleanlab.benchmarking"]], "noise_generation": [[1, "module-cleanlab.benchmarking.noise_generation"]], "classification": [[2, "module-cleanlab.classification"]], "count": [[3, "module-cleanlab.count"]], "datalab": [[4, "module-cleanlab.datalab.datalab"], [9, "module-cleanlab.datalab"]], "Creating Your Own Issues Manager": [[5, "creating-your-own-issues-manager"]], "Prerequisites": [[5, "prerequisites"]], "Implementing IssueManagers": [[5, "implementing-issuemanagers"]], "Basic Issue Check": [[5, "basic-issue-check"]], "Intermediate Issue Check": [[5, "intermediate-issue-check"]], "Advanced Issue Check": [[5, "advanced-issue-check"]], "Use with Datalab": [[5, "use-with-datalab"]], "Generating Cluster IDs": [[6, "generating-cluster-ids"]], "Datalab guides": [[7, "datalab-guides"]], "Types of issues": [[7, "types-of-issues"]], "Customizing issue types": [[7, "customizing-issue-types"]], "Datalab Issue Types": [[8, "datalab-issue-types"]], "Types of issues Datalab can detect": [[8, "types-of-issues-datalab-can-detect"]], "Estimates for Each Issue Type": [[8, "estimates-for-each-issue-type"]], "Label Issue": [[8, "label-issue"]], "Outlier Issue": [[8, "outlier-issue"]], "(Near) Duplicate Issue": [[8, "near-duplicate-issue"]], "Non-IID Issue": [[8, "non-iid-issue"]], "Class Imbalance Issue": [[8, "class-imbalance-issue"]], "Image-specific Issues": [[8, "image-specific-issues"]], "Underperforming Group Issue": [[8, "underperforming-group-issue"]], "Null Issue": [[8, "null-issue"]], "Data Valuation Issue": [[8, "data-valuation-issue"]], "Optional Issue Parameters": [[8, "optional-issue-parameters"]], "Label Issue Parameters": [[8, "label-issue-parameters"]], "Outlier Issue Parameters": [[8, "outlier-issue-parameters"]], "Duplicate Issue Parameters": [[8, "duplicate-issue-parameters"]], "Non-IID Issue Parameters": [[8, "non-iid-issue-parameters"]], "Imbalance Issue Parameters": [[8, "imbalance-issue-parameters"]], "Underperforming Group Issue Parameters": [[8, "underperforming-group-issue-parameters"]], "Null Issue Parameters": [[8, "null-issue-parameters"]], "Data Valuation Issue Parameters": [[8, "data-valuation-issue-parameters"]], "Image Issue Parameters": [[8, "image-issue-parameters"]], "Getting Started": [[9, "getting-started"]], "Guides": [[9, "guides"]], "API Reference": [[9, "api-reference"]], "data": [[10, "module-cleanlab.datalab.internal.data"]], "data_issues": [[11, "module-cleanlab.datalab.internal.data_issues"]], "factory": [[12, "module-cleanlab.datalab.internal.issue_manager_factory"]], "internal": [[13, "internal"], [40, "internal"]], "issue_finder": [[14, "issue-finder"]], "data_valuation": [[16, "data-valuation"]], "duplicate": [[17, "module-cleanlab.datalab.internal.issue_manager.duplicate"]], "imbalance": [[18, "module-cleanlab.datalab.internal.issue_manager.imbalance"]], "issue_manager": [[19, "issue-manager"], [20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"]], "Registered issue managers": [[19, "registered-issue-managers"]], "Unregistered issue managers": [[19, "unregistered-issue-managers"]], "ML task-specific issue managers": [[19, "ml-task-specific-issue-managers"]], "label": [[21, "module-cleanlab.datalab.internal.issue_manager.label"], [23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"], [28, "module-cleanlab.datalab.internal.issue_manager.regression.label"]], "multilabel": [[22, "multilabel"]], "noniid": [[24, "module-cleanlab.datalab.internal.issue_manager.noniid"]], "null": [[25, "null"]], "outlier": [[26, "module-cleanlab.datalab.internal.issue_manager.outlier"], [46, "module-cleanlab.internal.outlier"], [62, "module-cleanlab.outlier"]], "regression": [[27, "regression"], [64, "regression"]], "Priority Order for finding issues:": [[28, null]], "underperforming_group": [[29, "underperforming-group"]], "report": [[30, "report"]], "task": [[31, "task"]], "dataset": [[33, "module-cleanlab.dataset"], [54, "module-cleanlab.multilabel_classification.dataset"]], "cifar_cnn": [[34, "module-cleanlab.experimental.cifar_cnn"]], "coteaching": [[35, "module-cleanlab.experimental.coteaching"]], "experimental": [[36, "experimental"]], "label_issues_batched": [[37, "module-cleanlab.experimental.label_issues_batched"]], "mnist_pytorch": [[38, "module-cleanlab.experimental.mnist_pytorch"]], "filter": [[39, "module-cleanlab.filter"], [55, "module-cleanlab.multilabel_classification.filter"], [58, "filter"], [67, "filter"], [71, "module-cleanlab.token_classification.filter"]], "label_quality_utils": [[41, "module-cleanlab.internal.label_quality_utils"]], "latent_algebra": [[42, "module-cleanlab.internal.latent_algebra"]], "multiannotator_utils": [[43, "module-cleanlab.internal.multiannotator_utils"]], "multilabel_scorer": [[44, "module-cleanlab.internal.multilabel_scorer"]], "multilabel_utils": [[45, "module-cleanlab.internal.multilabel_utils"]], "token_classification_utils": [[47, "module-cleanlab.internal.token_classification_utils"]], "util": [[48, "module-cleanlab.internal.util"]], "validation": [[49, "module-cleanlab.internal.validation"]], "fasttext": [[50, "fasttext"]], "models": [[51, "models"]], "keras": [[52, "module-cleanlab.models.keras"]], "multiannotator": [[53, "module-cleanlab.multiannotator"]], "multilabel_classification": [[56, "multilabel-classification"]], "rank": [[57, "module-cleanlab.multilabel_classification.rank"], [60, "module-cleanlab.object_detection.rank"], [63, "module-cleanlab.rank"], [69, "module-cleanlab.segmentation.rank"], [73, "module-cleanlab.token_classification.rank"]], "object_detection": [[59, "object-detection"]], "summary": [[61, "summary"], [70, "module-cleanlab.segmentation.summary"], [74, "module-cleanlab.token_classification.summary"]], "regression.learn": [[65, "module-cleanlab.regression.learn"]], "regression.rank": [[66, "module-cleanlab.regression.rank"]], "segmentation": [[68, "segmentation"]], "token_classification": [[72, "token-classification"]], "cleanlab open-source documentation": [[75, "cleanlab-open-source-documentation"]], "Quickstart": [[75, "quickstart"]], "1. Install cleanlab": [[75, "install-cleanlab"]], "2. Find common issues in your data": [[75, "find-common-issues-in-your-data"]], "3. Handle label errors and train robust models with noisy labels": [[75, "handle-label-errors-and-train-robust-models-with-noisy-labels"]], "4. Dataset curation: fix dataset-level issues": [[75, "dataset-curation-fix-dataset-level-issues"]], "5. Improve your data via many other techniques": [[75, "improve-your-data-via-many-other-techniques"]], "Contributing": [[75, "contributing"]], "Easy Mode": [[75, "easy-mode"], [81, "Easy-Mode"], [82, "Easy-Mode"], [85, "Easy-Mode"]], "How to migrate to versions >= 2.0.0 from pre 1.0.1": [[76, "how-to-migrate-to-versions-2-0-0-from-pre-1-0-1"]], "Function and class name changes": [[76, "function-and-class-name-changes"]], "Module name changes": [[76, "module-name-changes"]], "New modules": [[76, "new-modules"]], "Removed modules": [[76, "removed-modules"]], "Common argument and variable name changes": [[76, "common-argument-and-variable-name-changes"]], "Audio Classification with SpeechBrain and Cleanlab": [[77, "Audio-Classification-with-SpeechBrain-and-Cleanlab"]], "1. Install dependencies and import them": [[77, "1.-Install-dependencies-and-import-them"]], "2. Load the data": [[77, "2.-Load-the-data"]], "3. Use pre-trained SpeechBrain model to featurize audio": [[77, "3.-Use-pre-trained-SpeechBrain-model-to-featurize-audio"]], "4. Fit linear model and compute out-of-sample predicted probabilities": [[77, "4.-Fit-linear-model-and-compute-out-of-sample-predicted-probabilities"]], "5. Use cleanlab to find label issues": [[77, "5.-Use-cleanlab-to-find-label-issues"], [81, "5.-Use-cleanlab-to-find-label-issues"]], "Datalab: Advanced workflows to audit your data": [[78, "Datalab:-Advanced-workflows-to-audit-your-data"]], "Install and import required dependencies": [[78, "Install-and-import-required-dependencies"]], "Create and load the data": [[78, "Create-and-load-the-data"]], "Get out-of-sample predicted probabilities from a classifier": [[78, "Get-out-of-sample-predicted-probabilities-from-a-classifier"]], "Instantiate Datalab object": [[78, "Instantiate-Datalab-object"]], "Functionality 1: Incremental issue search": [[78, "Functionality-1:-Incremental-issue-search"]], "Functionality 2: Specifying nondefault arguments": [[78, "Functionality-2:-Specifying-nondefault-arguments"]], "Functionality 3: Save and load Datalab objects": [[78, "Functionality-3:-Save-and-load-Datalab-objects"]], "Functionality 4: Adding a custom IssueManager": [[78, "Functionality-4:-Adding-a-custom-IssueManager"]], "Datalab: A unified audit to detect all kinds of issues in data and labels": [[79, "Datalab:-A-unified-audit-to-detect-all-kinds-of-issues-in-data-and-labels"]], "1. Install and import required dependencies": [[79, "1.-Install-and-import-required-dependencies"], [85, "1.-Install-and-import-required-dependencies"], [88, "1.-Install-and-import-required-dependencies"]], "2. Create and load the data (can skip these details)": [[79, "2.-Create-and-load-the-data-(can-skip-these-details)"]], "3. Get out-of-sample predicted probabilities from a classifier": [[79, "3.-Get-out-of-sample-predicted-probabilities-from-a-classifier"]], "4. Use Datalab to find issues in the dataset": [[79, "4.-Use-Datalab-to-find-issues-in-the-dataset"]], "5. Learn more about the issues in your dataset": [[79, "5.-Learn-more-about-the-issues-in-your-dataset"]], "Get additional information": [[79, "Get-additional-information"]], "Near duplicate issues": [[79, "Near-duplicate-issues"], [85, "Near-duplicate-issues"]], "Datalab Tutorials": [[80, "datalab-tutorials"]], "Detecting Issues in Tabular Data\u00a0(Numeric/Categorical columns) with Datalab": [[81, "Detecting-Issues-in-Tabular-Data\u00a0(Numeric/Categorical-columns)-with-Datalab"]], "1. Install required dependencies": [[81, "1.-Install-required-dependencies"], [82, "1.-Install-required-dependencies"], [93, "1.-Install-required-dependencies"], [95, "1.-Install-required-dependencies"], [96, "1.-Install-required-dependencies"]], "2. Load and process the data": [[81, "2.-Load-and-process-the-data"], [93, "2.-Load-and-process-the-data"], [95, "2.-Load-and-process-the-data"]], "3. Select a classification model and compute out-of-sample predicted probabilities": [[81, "3.-Select-a-classification-model-and-compute-out-of-sample-predicted-probabilities"], [95, "3.-Select-a-classification-model-and-compute-out-of-sample-predicted-probabilities"]], "4. Construct K nearest neighbours graph": [[81, "4.-Construct-K-nearest-neighbours-graph"]], "Label issues": [[81, "Label-issues"], [82, "Label-issues"], [85, "Label-issues"]], "Outlier issues": [[81, "Outlier-issues"], [82, "Outlier-issues"], [85, "Outlier-issues"]], "Near-duplicate issues": [[81, "Near-duplicate-issues"], [82, "Near-duplicate-issues"]], "Detecting Issues in a Text Dataset with Datalab": [[82, "Detecting-Issues-in-a-Text-Dataset-with-Datalab"]], "2. Load and format the text dataset": [[82, "2.-Load-and-format-the-text-dataset"], [96, "2.-Load-and-format-the-text-dataset"]], "3. Define a classification model and compute out-of-sample predicted probabilities": [[82, "3.-Define-a-classification-model-and-compute-out-of-sample-predicted-probabilities"]], "4. Use cleanlab to find issues in your dataset": [[82, "4.-Use-cleanlab-to-find-issues-in-your-dataset"]], "Non-IID issues (data drift)": [[82, "Non-IID-issues-(data-drift)"]], "Find Dataset-level Issues for Dataset Curation": [[83, "Find-Dataset-level-Issues-for-Dataset-Curation"]], "Install dependencies and import them": [[83, "Install-dependencies-and-import-them"], [86, "Install-dependencies-and-import-them"]], "Fetch the data (can skip these details)": [[83, "Fetch-the-data-(can-skip-these-details)"]], "Start of tutorial: Evaluate the health of 8 popular datasets": [[83, "Start-of-tutorial:-Evaluate-the-health-of-8-popular-datasets"]], "FAQ": [[84, "FAQ"]], "What data can cleanlab detect issues in?": [[84, "What-data-can-cleanlab-detect-issues-in?"]], "How do I format classification labels for cleanlab?": [[84, "How-do-I-format-classification-labels-for-cleanlab?"]], "How do I infer the correct labels for examples cleanlab has flagged?": [[84, "How-do-I-infer-the-correct-labels-for-examples-cleanlab-has-flagged?"]], "How should I handle label errors in train vs. test data?": [[84, "How-should-I-handle-label-errors-in-train-vs.-test-data?"]], "How can I find label issues in big datasets with limited memory?": [[84, "How-can-I-find-label-issues-in-big-datasets-with-limited-memory?"]], "Why isn\u2019t CleanLearning working for me?": [[84, "Why-isn\u2019t-CleanLearning-working-for-me?"]], "How can I use different models for data cleaning vs. final training in CleanLearning?": [[84, "How-can-I-use-different-models-for-data-cleaning-vs.-final-training-in-CleanLearning?"]], "How do I hyperparameter tune only the final model trained (and not the one finding label issues) in CleanLearning?": [[84, "How-do-I-hyperparameter-tune-only-the-final-model-trained-(and-not-the-one-finding-label-issues)-in-CleanLearning?"]], "Why does regression.learn.CleanLearning take so long?": [[84, "Why-does-regression.learn.CleanLearning-take-so-long?"]], "How do I specify pre-computed data slices/clusters when detecting the Underperforming Group Issue?": [[84, "How-do-I-specify-pre-computed-data-slices/clusters-when-detecting-the-Underperforming-Group-Issue?"]], "How to handle near-duplicate data identified by cleanlab?": [[84, "How-to-handle-near-duplicate-data-identified-by-cleanlab?"]], "What ML models should I run cleanlab with? How do I fix the issues cleanlab has identified?": [[84, "What-ML-models-should-I-run-cleanlab-with?-How-do-I-fix-the-issues-cleanlab-has-identified?"]], "What license is cleanlab open-sourced under?": [[84, "What-license-is-cleanlab-open-sourced-under?"]], "Can\u2019t find an answer to your question?": [[84, "Can't-find-an-answer-to-your-question?"]], "Image Classification with PyTorch and Cleanlab": [[85, "Image-Classification-with-PyTorch-and-Cleanlab"]], "2. Fetch and normalize the Fashion-MNIST dataset": [[85, "2.-Fetch-and-normalize-the-Fashion-MNIST-dataset"]], "3. Define a classification model": [[85, "3.-Define-a-classification-model"]], "4. Prepare the dataset for K-fold cross-validation": [[85, "4.-Prepare-the-dataset-for-K-fold-cross-validation"]], "5. Compute out-of-sample predicted probabilities and feature embeddings": [[85, "5.-Compute-out-of-sample-predicted-probabilities-and-feature-embeddings"]], "7. Use cleanlab to find issues": [[85, "7.-Use-cleanlab-to-find-issues"]], "View report": [[85, "View-report"]], "View most likely examples with label errors": [[85, "View-most-likely-examples-with-label-errors"]], "View most severe outliers": [[85, "View-most-severe-outliers"]], "View sets of near duplicate images": [[85, "View-sets-of-near-duplicate-images"]], "Dark images": [[85, "Dark-images"]], "View top examples of dark images": [[85, "View-top-examples-of-dark-images"]], "Low information images": [[85, "Low-information-images"]], "The Workflows of Data-centric AI for Classification with Noisy Labels": [[86, "The-Workflows-of-Data-centric-AI-for-Classification-with-Noisy-Labels"]], "Create the data (can skip these details)": [[86, "Create-the-data-(can-skip-these-details)"]], "Workflow 1: Use Datalab to detect many types of issues": [[86, "Workflow-1:-Use-Datalab-to-detect-many-types-of-issues"]], "Workflow 2: Use CleanLearning for more robust Machine Learning": [[86, "Workflow-2:-Use-CleanLearning-for-more-robust-Machine-Learning"]], "Clean Learning = Machine Learning with cleaned data": [[86, "Clean-Learning-=-Machine-Learning-with-cleaned-data"]], "Workflow 3: Use CleanLearning to find_label_issues in one line of code": [[86, "Workflow-3:-Use-CleanLearning-to-find_label_issues-in-one-line-of-code"]], "Visualize the twenty examples with lowest label quality to see if Cleanlab works.": [[86, "Visualize-the-twenty-examples-with-lowest-label-quality-to-see-if-Cleanlab-works."]], "Workflow 4: Use cleanlab to find dataset-level and class-level issues": [[86, "Workflow-4:-Use-cleanlab-to-find-dataset-level-and-class-level-issues"]], "Now, let\u2019s see what happens if we merge classes \u201cseafoam green\u201d and \u201cyellow\u201d": [[86, "Now,-let's-see-what-happens-if-we-merge-classes-%22seafoam-green%22-and-%22yellow%22"]], "Workflow 5: Clean your test set too if you\u2019re doing ML with noisy labels!": [[86, "Workflow-5:-Clean-your-test-set-too-if-you're-doing-ML-with-noisy-labels!"]], "Workflow 6: One score to rule them all \u2013 use cleanlab\u2019s overall dataset health score": [[86, "Workflow-6:-One-score-to-rule-them-all----use-cleanlab's-overall-dataset-health-score"]], "How accurate is this dataset health score?": [[86, "How-accurate-is-this-dataset-health-score?"]], "Workflow(s) 7: Use count, rank, filter modules directly": [[86, "Workflow(s)-7:-Use-count,-rank,-filter-modules-directly"]], "Workflow 7.1 (count): Fully characterize label noise (noise matrix, joint, prior of true labels, \u2026)": [[86, "Workflow-7.1-(count):-Fully-characterize-label-noise-(noise-matrix,-joint,-prior-of-true-labels,-...)"]], "Use cleanlab to estimate and visualize the joint distribution of label noise and noise matrix of label flipping rates:": [[86, "Use-cleanlab-to-estimate-and-visualize-the-joint-distribution-of-label-noise-and-noise-matrix-of-label-flipping-rates:"]], "Workflow 7.2 (filter): Find label issues for any dataset and any model in one line of code": [[86, "Workflow-7.2-(filter):-Find-label-issues-for-any-dataset-and-any-model-in-one-line-of-code"]], "Again, we can visualize the twenty examples with lowest label quality to see if Cleanlab works.": [[86, "Again,-we-can-visualize-the-twenty-examples-with-lowest-label-quality-to-see-if-Cleanlab-works."]], "Workflow 7.2 supports lots of methods to find_label_issues() via the filter_by parameter.": [[86, "Workflow-7.2-supports-lots-of-methods-to-find_label_issues()-via-the-filter_by-parameter."]], "Workflow 7.3 (rank): Automatically rank every example by a unique label quality score. Find errors using cleanlab.count.num_label_issues as a threshold.": [[86, "Workflow-7.3-(rank):-Automatically-rank-every-example-by-a-unique-label-quality-score.-Find-errors-using-cleanlab.count.num_label_issues-as-a-threshold."]], "Again, we can visualize the label issues found to see if Cleanlab works.": [[86, "Again,-we-can-visualize-the-label-issues-found-to-see-if-Cleanlab-works."]], "Not sure when to use Workflow 7.2 or 7.3 to find label issues?": [[86, "Not-sure-when-to-use-Workflow-7.2-or-7.3-to-find-label-issues?"]], "Workflow 8: Ensembling label quality scores from multiple predictors": [[86, "Workflow-8:-Ensembling-label-quality-scores-from-multiple-predictors"]], "Tutorials": [[87, "tutorials"]], "Estimate Consensus and Annotator Quality for Data Labeled by Multiple Annotators": [[88, "Estimate-Consensus-and-Annotator-Quality-for-Data-Labeled-by-Multiple-Annotators"]], "2. Create the data (can skip these details)": [[88, "2.-Create-the-data-(can-skip-these-details)"]], "3. Get initial consensus labels via majority vote and compute out-of-sample predicted probabilities": [[88, "3.-Get-initial-consensus-labels-via-majority-vote-and-compute-out-of-sample-predicted-probabilities"]], "4. Use cleanlab to get better consensus labels and other statistics": [[88, "4.-Use-cleanlab-to-get-better-consensus-labels-and-other-statistics"]], "Comparing improved consensus labels": [[88, "Comparing-improved-consensus-labels"]], "Inspecting consensus quality scores to find potential consensus label errors": [[88, "Inspecting-consensus-quality-scores-to-find-potential-consensus-label-errors"]], "5. Retrain model using improved consensus labels": [[88, "5.-Retrain-model-using-improved-consensus-labels"]], "Further improvements": [[88, "Further-improvements"]], "How does cleanlab.multiannotator work?": [[88, "How-does-cleanlab.multiannotator-work?"]], "Find Label Errors in Multi-Label Classification Datasets": [[89, "Find-Label-Errors-in-Multi-Label-Classification-Datasets"]], "1. Install required dependencies and get dataset": [[89, "1.-Install-required-dependencies-and-get-dataset"]], "2. Format data, labels, and model predictions": [[89, "2.-Format-data,-labels,-and-model-predictions"], [90, "2.-Format-data,-labels,-and-model-predictions"]], "3. Use cleanlab to find label issues": [[89, "3.-Use-cleanlab-to-find-label-issues"], [90, "3.-Use-cleanlab-to-find-label-issues"], [94, "3.-Use-cleanlab-to-find-label-issues"], [97, "3.-Use-cleanlab-to-find-label-issues"]], "Label quality scores": [[89, "Label-quality-scores"]], "Data issues beyond mislabeling (outliers, duplicates, drift, \u2026)": [[89, "Data-issues-beyond-mislabeling-(outliers,-duplicates,-drift,-...)"]], "How to format labels given as a one-hot (multi-hot) binary matrix?": [[89, "How-to-format-labels-given-as-a-one-hot-(multi-hot)-binary-matrix?"]], "Estimate label issues without Datalab": [[89, "Estimate-label-issues-without-Datalab"]], "Application to Real Data": [[89, "Application-to-Real-Data"]], "Finding Label Errors in Object Detection Datasets": [[90, "Finding-Label-Errors-in-Object-Detection-Datasets"]], "1. Install required dependencies and download data": [[90, "1.-Install-required-dependencies-and-download-data"], [94, "1.-Install-required-dependencies-and-download-data"], [97, "1.-Install-required-dependencies-and-download-data"]], "Get label quality scores": [[90, "Get-label-quality-scores"], [94, "Get-label-quality-scores"]], "4. Use ObjectLab to visualize label issues": [[90, "4.-Use-ObjectLab-to-visualize-label-issues"]], "Different kinds of label issues identified by ObjectLab": [[90, "Different-kinds-of-label-issues-identified-by-ObjectLab"]], "Other uses of visualize": [[90, "Other-uses-of-visualize"]], "Exploratory data analysis": [[90, "Exploratory-data-analysis"]], "Detect Outliers with Cleanlab and PyTorch Image Models (timm)": [[91, "Detect-Outliers-with-Cleanlab-and-PyTorch-Image-Models-(timm)"]], "1. Install the required dependencies": [[91, "1.-Install-the-required-dependencies"]], "2. Pre-process the Cifar10 dataset": [[91, "2.-Pre-process-the-Cifar10-dataset"]], "Visualize some of the training and test examples": [[91, "Visualize-some-of-the-training-and-test-examples"]], "3. Use cleanlab and feature embeddings to find outliers in the data": [[91, "3.-Use-cleanlab-and-feature-embeddings-to-find-outliers-in-the-data"]], "4. Use cleanlab and pred_probs to find outliers in the data": [[91, "4.-Use-cleanlab-and-pred_probs-to-find-outliers-in-the-data"]], "Computing Out-of-Sample Predicted Probabilities with Cross-Validation": [[92, "computing-out-of-sample-predicted-probabilities-with-cross-validation"]], "Out-of-sample predicted probabilities?": [[92, "out-of-sample-predicted-probabilities"]], "What is K-fold cross-validation?": [[92, "what-is-k-fold-cross-validation"]], "Find Noisy Labels in Regression Datasets": [[93, "Find-Noisy-Labels-in-Regression-Datasets"]], "3. Define a regression model and use cleanlab to find potential label errors": [[93, "3.-Define-a-regression-model-and-use-cleanlab-to-find-potential-label-errors"]], "4. Train a more robust model from noisy labels": [[93, "4.-Train-a-more-robust-model-from-noisy-labels"], [96, "4.-Train-a-more-robust-model-from-noisy-labels"]], "5. Other ways to find noisy labels in regression datasets": [[93, "5.-Other-ways-to-find-noisy-labels-in-regression-datasets"]], "Find Label Errors in Semantic Segmentation Datasets": [[94, "Find-Label-Errors-in-Semantic-Segmentation-Datasets"]], "2. Get data, labels, and pred_probs": [[94, "2.-Get-data,-labels,-and-pred_probs"], [97, "2.-Get-data,-labels,-and-pred_probs"]], "Visualize top label issues": [[94, "Visualize-top-label-issues"]], "Classes which are commonly mislabeled overall": [[94, "Classes-which-are-commonly-mislabeled-overall"]], "Focusing on one specific class": [[94, "Focusing-on-one-specific-class"]], "Classification with Tabular Data using Scikit-Learn and Cleanlab": [[95, "Classification-with-Tabular-Data-using-Scikit-Learn-and-Cleanlab"]], "4. Use cleanlab to find label issues": [[95, "4.-Use-cleanlab-to-find-label-issues"]], "5. Train a more robust model from noisy labels": [[95, "5.-Train-a-more-robust-model-from-noisy-labels"]], "Text Classification with Noisy Labels": [[96, "Text-Classification-with-Noisy-Labels"]], "3. Define a classification model and use cleanlab to find potential label errors": [[96, "3.-Define-a-classification-model-and-use-cleanlab-to-find-potential-label-errors"]], "Find Label Errors in Token Classification (Text) Datasets": [[97, "Find-Label-Errors-in-Token-Classification-(Text)-Datasets"]], "Most common word-level token mislabels": [[97, "Most-common-word-level-token-mislabels"]], "Find sentences containing a particular mislabeled word": [[97, "Find-sentences-containing-a-particular-mislabeled-word"]], "Sentence label quality score": [[97, "Sentence-label-quality-score"]], "How does cleanlab.token_classification work?": [[97, "How-does-cleanlab.token_classification-work?"]]}, "indexentries": {"cleanlab.benchmarking": [[0, "module-cleanlab.benchmarking"]], "module": [[0, "module-cleanlab.benchmarking"], [1, "module-cleanlab.benchmarking.noise_generation"], [2, "module-cleanlab.classification"], [3, "module-cleanlab.count"], [4, "module-cleanlab.datalab.datalab"], [9, "module-cleanlab.datalab"], [10, "module-cleanlab.datalab.internal.data"], [11, "module-cleanlab.datalab.internal.data_issues"], [12, "module-cleanlab.datalab.internal.issue_manager_factory"], [13, "module-cleanlab.datalab.internal"], [14, "module-cleanlab.datalab.internal.issue_finder"], [16, "module-cleanlab.datalab.internal.issue_manager.data_valuation"], [17, "module-cleanlab.datalab.internal.issue_manager.duplicate"], [18, "module-cleanlab.datalab.internal.issue_manager.imbalance"], [20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"], [21, "module-cleanlab.datalab.internal.issue_manager.label"], [23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"], [24, "module-cleanlab.datalab.internal.issue_manager.noniid"], [25, "module-cleanlab.datalab.internal.issue_manager.null"], [26, "module-cleanlab.datalab.internal.issue_manager.outlier"], [28, "module-cleanlab.datalab.internal.issue_manager.regression.label"], [29, "module-cleanlab.datalab.internal.issue_manager.underperforming_group"], [30, "module-cleanlab.datalab.internal.report"], [31, "module-cleanlab.datalab.internal.task"], [33, "module-cleanlab.dataset"], [34, "module-cleanlab.experimental.cifar_cnn"], [35, "module-cleanlab.experimental.coteaching"], [36, "module-cleanlab.experimental"], [37, "module-cleanlab.experimental.label_issues_batched"], [38, "module-cleanlab.experimental.mnist_pytorch"], [39, "module-cleanlab.filter"], [40, "module-cleanlab.internal"], [41, "module-cleanlab.internal.label_quality_utils"], [42, "module-cleanlab.internal.latent_algebra"], [43, "module-cleanlab.internal.multiannotator_utils"], [44, "module-cleanlab.internal.multilabel_scorer"], [45, "module-cleanlab.internal.multilabel_utils"], [46, "module-cleanlab.internal.outlier"], [47, "module-cleanlab.internal.token_classification_utils"], [48, "module-cleanlab.internal.util"], [49, "module-cleanlab.internal.validation"], [51, "module-cleanlab.models"], [52, "module-cleanlab.models.keras"], [53, "module-cleanlab.multiannotator"], [54, "module-cleanlab.multilabel_classification.dataset"], [55, "module-cleanlab.multilabel_classification.filter"], [56, "module-cleanlab.multilabel_classification"], [57, "module-cleanlab.multilabel_classification.rank"], [58, "module-cleanlab.object_detection.filter"], [59, "module-cleanlab.object_detection"], [60, "module-cleanlab.object_detection.rank"], [61, "module-cleanlab.object_detection.summary"], [62, "module-cleanlab.outlier"], [63, "module-cleanlab.rank"], [64, "module-cleanlab.regression"], [65, "module-cleanlab.regression.learn"], [66, "module-cleanlab.regression.rank"], [67, "module-cleanlab.segmentation.filter"], [68, "module-cleanlab.segmentation"], [69, "module-cleanlab.segmentation.rank"], [70, "module-cleanlab.segmentation.summary"], [71, "module-cleanlab.token_classification.filter"], [72, "module-cleanlab.token_classification"], [73, "module-cleanlab.token_classification.rank"], [74, "module-cleanlab.token_classification.summary"]], "cleanlab.benchmarking.noise_generation": [[1, "module-cleanlab.benchmarking.noise_generation"]], "generate_n_rand_probabilities_that_sum_to_m() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_n_rand_probabilities_that_sum_to_m"]], "generate_noise_matrix_from_trace() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_noise_matrix_from_trace"]], "generate_noisy_labels() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.generate_noisy_labels"]], "noise_matrix_is_valid() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.noise_matrix_is_valid"]], "randomly_distribute_n_balls_into_k_bins() (in module cleanlab.benchmarking.noise_generation)": [[1, "cleanlab.benchmarking.noise_generation.randomly_distribute_N_balls_into_K_bins"]], "cleanlearning (class in cleanlab.classification)": [[2, "cleanlab.classification.CleanLearning"]], "__init_subclass__() (cleanlab.classification.cleanlearning class method)": [[2, "cleanlab.classification.CleanLearning.__init_subclass__"]], "cleanlab.classification": [[2, "module-cleanlab.classification"]], "find_label_issues() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.find_label_issues"]], "fit() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.fit"]], "get_label_issues() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_label_issues"]], "get_metadata_routing() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_metadata_routing"]], "get_params() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.get_params"]], "predict() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.predict"]], "predict_proba() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.predict_proba"]], "save_space() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.save_space"]], "score() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.score"]], "set_fit_request() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_fit_request"]], "set_params() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_params"]], "set_score_request() (cleanlab.classification.cleanlearning method)": [[2, "cleanlab.classification.CleanLearning.set_score_request"]], "calibrate_confident_joint() (in module cleanlab.count)": [[3, "cleanlab.count.calibrate_confident_joint"]], "cleanlab.count": [[3, "module-cleanlab.count"]], "compute_confident_joint() (in module cleanlab.count)": [[3, "cleanlab.count.compute_confident_joint"]], "estimate_confident_joint_and_cv_pred_proba() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_confident_joint_and_cv_pred_proba"]], "estimate_cv_predicted_probabilities() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_cv_predicted_probabilities"]], "estimate_joint() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_joint"]], "estimate_latent() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_latent"]], "estimate_noise_matrices() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_noise_matrices"]], "estimate_py_and_noise_matrices_from_probabilities() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_py_and_noise_matrices_from_probabilities"]], "estimate_py_noise_matrices_and_cv_pred_proba() (in module cleanlab.count)": [[3, "cleanlab.count.estimate_py_noise_matrices_and_cv_pred_proba"]], "get_confident_thresholds() (in module cleanlab.count)": [[3, "cleanlab.count.get_confident_thresholds"]], "num_label_issues() (in module cleanlab.count)": [[3, "cleanlab.count.num_label_issues"]], "datalab (class in cleanlab.datalab.datalab)": [[4, "cleanlab.datalab.datalab.Datalab"]], "class_names (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.class_names"]], "cleanlab.datalab.datalab": [[4, "module-cleanlab.datalab.datalab"]], "find_issues() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.find_issues"]], "get_info() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_info"]], "get_issue_summary() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_issue_summary"]], "get_issues() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.get_issues"]], "has_labels (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.has_labels"]], "info (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.info"]], "issue_summary (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.issue_summary"]], "issues (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.issues"]], "labels (cleanlab.datalab.datalab.datalab property)": [[4, "cleanlab.datalab.datalab.Datalab.labels"]], "list_default_issue_types() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.list_default_issue_types"]], "list_possible_issue_types() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.list_possible_issue_types"]], "load() (cleanlab.datalab.datalab.datalab static method)": [[4, "cleanlab.datalab.datalab.Datalab.load"]], "report() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.report"]], "save() (cleanlab.datalab.datalab.datalab method)": [[4, "cleanlab.datalab.datalab.Datalab.save"]], "cleanlab.datalab": [[9, "module-cleanlab.datalab"]], "data (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.Data"]], "dataformaterror": [[10, "cleanlab.datalab.internal.data.DataFormatError"]], "datasetdicterror": [[10, "cleanlab.datalab.internal.data.DatasetDictError"]], "datasetloaderror": [[10, "cleanlab.datalab.internal.data.DatasetLoadError"]], "label (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.Label"]], "multiclass (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.MultiClass"]], "multilabel (class in cleanlab.datalab.internal.data)": [[10, "cleanlab.datalab.internal.data.MultiLabel"]], "add_note() (cleanlab.datalab.internal.data.dataformaterror method)": [[10, "cleanlab.datalab.internal.data.DataFormatError.add_note"]], "add_note() (cleanlab.datalab.internal.data.datasetdicterror method)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.add_note"]], "add_note() (cleanlab.datalab.internal.data.datasetloaderror method)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.add_note"]], "args (cleanlab.datalab.internal.data.dataformaterror attribute)": [[10, "cleanlab.datalab.internal.data.DataFormatError.args"]], "args (cleanlab.datalab.internal.data.datasetdicterror attribute)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.args"]], "args (cleanlab.datalab.internal.data.datasetloaderror attribute)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.args"]], "class_names (cleanlab.datalab.internal.data.data property)": [[10, "cleanlab.datalab.internal.data.Data.class_names"]], "class_names (cleanlab.datalab.internal.data.label property)": [[10, "cleanlab.datalab.internal.data.Label.class_names"]], "class_names (cleanlab.datalab.internal.data.multiclass property)": [[10, "cleanlab.datalab.internal.data.MultiClass.class_names"]], "class_names (cleanlab.datalab.internal.data.multilabel property)": [[10, "cleanlab.datalab.internal.data.MultiLabel.class_names"]], "cleanlab.datalab.internal.data": [[10, "module-cleanlab.datalab.internal.data"]], "has_labels (cleanlab.datalab.internal.data.data property)": [[10, "cleanlab.datalab.internal.data.Data.has_labels"]], "is_available (cleanlab.datalab.internal.data.label property)": [[10, "cleanlab.datalab.internal.data.Label.is_available"]], "is_available (cleanlab.datalab.internal.data.multiclass property)": [[10, "cleanlab.datalab.internal.data.MultiClass.is_available"]], "is_available (cleanlab.datalab.internal.data.multilabel property)": [[10, "cleanlab.datalab.internal.data.MultiLabel.is_available"]], "with_traceback() (cleanlab.datalab.internal.data.dataformaterror method)": [[10, "cleanlab.datalab.internal.data.DataFormatError.with_traceback"]], "with_traceback() (cleanlab.datalab.internal.data.datasetdicterror method)": [[10, "cleanlab.datalab.internal.data.DatasetDictError.with_traceback"]], "with_traceback() (cleanlab.datalab.internal.data.datasetloaderror method)": [[10, "cleanlab.datalab.internal.data.DatasetLoadError.with_traceback"]], "dataissues (class in cleanlab.datalab.internal.data_issues)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues"]], "cleanlab.datalab.internal.data_issues": [[11, "module-cleanlab.datalab.internal.data_issues"]], "collect_issues_from_imagelab() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_issues_from_imagelab"]], "collect_issues_from_issue_manager() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_issues_from_issue_manager"]], "collect_statistics() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.collect_statistics"]], "get_data_statistics() (in module cleanlab.datalab.internal.data_issues)": [[11, "cleanlab.datalab.internal.data_issues.get_data_statistics"]], "get_info() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_info"]], "get_issue_summary() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_issue_summary"]], "get_issues() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.get_issues"]], "info (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.info"]], "issue_summary (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.issue_summary"]], "issues (cleanlab.datalab.internal.data_issues.dataissues attribute)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.issues"]], "set_health_score() (cleanlab.datalab.internal.data_issues.dataissues method)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.set_health_score"]], "statistics (cleanlab.datalab.internal.data_issues.dataissues property)": [[11, "cleanlab.datalab.internal.data_issues.DataIssues.statistics"]], "registry (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.REGISTRY"]], "cleanlab.datalab.internal.issue_manager_factory": [[12, "module-cleanlab.datalab.internal.issue_manager_factory"]], "list_default_issue_types() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.list_default_issue_types"]], "list_possible_issue_types() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.list_possible_issue_types"]], "register() (in module cleanlab.datalab.internal.issue_manager_factory)": [[12, "cleanlab.datalab.internal.issue_manager_factory.register"]], "cleanlab.datalab.internal": [[13, "module-cleanlab.datalab.internal"]], "issuefinder (class in cleanlab.datalab.internal.issue_finder)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder"]], "cleanlab.datalab.internal.issue_finder": [[14, "module-cleanlab.datalab.internal.issue_finder"]], "find_issues() (cleanlab.datalab.internal.issue_finder.issuefinder method)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder.find_issues"]], "get_available_issue_types() (cleanlab.datalab.internal.issue_finder.issuefinder method)": [[14, "cleanlab.datalab.internal.issue_finder.IssueFinder.get_available_issue_types"]], "default_threshold (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.DEFAULT_THRESHOLD"]], "datavaluationissuemanager (class in cleanlab.datalab.internal.issue_manager.data_valuation)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager"]], "cleanlab.datalab.internal.issue_manager.data_valuation": [[16, "module-cleanlab.datalab.internal.issue_manager.data_valuation"]], "collect_info() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager class method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager class method)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.data_valuation.datavaluationissuemanager attribute)": [[16, "cleanlab.datalab.internal.issue_manager.data_valuation.DataValuationIssueManager.verbosity_levels"]], "nearduplicateissuemanager (class in cleanlab.datalab.internal.issue_manager.duplicate)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager"]], "cleanlab.datalab.internal.issue_manager.duplicate": [[17, "module-cleanlab.datalab.internal.issue_manager.duplicate"]], "collect_info() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager class method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.make_summary"]], "near_duplicate_sets (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.near_duplicate_sets"]], "report() (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager class method)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.duplicate.nearduplicateissuemanager attribute)": [[17, "cleanlab.datalab.internal.issue_manager.duplicate.NearDuplicateIssueManager.verbosity_levels"]], "classimbalanceissuemanager (class in cleanlab.datalab.internal.issue_manager.imbalance)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager"]], "cleanlab.datalab.internal.issue_manager.imbalance": [[18, "module-cleanlab.datalab.internal.issue_manager.imbalance"]], "collect_info() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager class method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager class method)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.imbalance.classimbalanceissuemanager attribute)": [[18, "cleanlab.datalab.internal.issue_manager.imbalance.ClassImbalanceIssueManager.verbosity_levels"]], "issuemanager (class in cleanlab.datalab.internal.issue_manager.issue_manager)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager"]], "cleanlab.datalab.internal.issue_manager.issue_manager": [[20, "module-cleanlab.datalab.internal.issue_manager.issue_manager"]], "collect_info() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager class method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager class method)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.issue_manager.issuemanager attribute)": [[20, "cleanlab.datalab.internal.issue_manager.issue_manager.IssueManager.verbosity_levels"]], "labelissuemanager (class in cleanlab.datalab.internal.issue_manager.label)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.label": [[21, "module-cleanlab.datalab.internal.issue_manager.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.find_issues"]], "get_health_summary() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.get_health_summary"]], "health_summary_parameters (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.health_summary_parameters"]], "info (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager class method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.label.labelissuemanager class method)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.label.labelissuemanager attribute)": [[21, "cleanlab.datalab.internal.issue_manager.label.LabelIssueManager.verbosity_levels"]], "multilabelissuemanager (class in cleanlab.datalab.internal.issue_manager.multilabel.label)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.multilabel.label": [[23, "module-cleanlab.datalab.internal.issue_manager.multilabel.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager class method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager class method)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.multilabel.label.multilabelissuemanager attribute)": [[23, "cleanlab.datalab.internal.issue_manager.multilabel.label.MultilabelIssueManager.verbosity_levels"]], "noniidissuemanager (class in cleanlab.datalab.internal.issue_manager.noniid)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager"]], "cleanlab.datalab.internal.issue_manager.noniid": [[24, "module-cleanlab.datalab.internal.issue_manager.noniid"]], "collect_info() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager class method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager class method)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.report"]], "simplified_kolmogorov_smirnov_test() (in module cleanlab.datalab.internal.issue_manager.noniid)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.simplified_kolmogorov_smirnov_test"]], "summary (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.noniid.noniidissuemanager attribute)": [[24, "cleanlab.datalab.internal.issue_manager.noniid.NonIIDIssueManager.verbosity_levels"]], "nullissuemanager (class in cleanlab.datalab.internal.issue_manager.null)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager"]], "cleanlab.datalab.internal.issue_manager.null": [[25, "module-cleanlab.datalab.internal.issue_manager.null"]], "collect_info() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager class method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.null.nullissuemanager class method)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.null.nullissuemanager attribute)": [[25, "cleanlab.datalab.internal.issue_manager.null.NullIssueManager.verbosity_levels"]], "default_thresholds (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.DEFAULT_THRESHOLDS"]], "outlierissuemanager (class in cleanlab.datalab.internal.issue_manager.outlier)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager"]], "cleanlab.datalab.internal.issue_manager.outlier": [[26, "module-cleanlab.datalab.internal.issue_manager.outlier"]], "collect_info() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.find_issues"]], "info (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager class method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.make_summary"]], "ood (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.ood"]], "report() (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager class method)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.outlier.outlierissuemanager attribute)": [[26, "cleanlab.datalab.internal.issue_manager.outlier.OutlierIssueManager.verbosity_levels"]], "regressionlabelissuemanager (class in cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager"]], "cleanlab.datalab.internal.issue_manager.regression.label": [[28, "module-cleanlab.datalab.internal.issue_manager.regression.label"]], "collect_info() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.description"]], "find_issues() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.find_issues"]], "find_issues_with_features() (in module cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.find_issues_with_features"]], "find_issues_with_predictions() (in module cleanlab.datalab.internal.issue_manager.regression.label)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.find_issues_with_predictions"]], "info (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager class method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.make_summary"]], "report() (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager class method)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.report"]], "summary (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.regression.label.regressionlabelissuemanager attribute)": [[28, "cleanlab.datalab.internal.issue_manager.regression.label.RegressionLabelIssueManager.verbosity_levels"]], "no_underperforming_cluster_id (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.NO_UNDERPERFORMING_CLUSTER_ID"]], "outlier_cluster_labels (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.OUTLIER_CLUSTER_LABELS"]], "underperforminggroupissuemanager (class in cleanlab.datalab.internal.issue_manager.underperforming_group)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager"]], "cleanlab.datalab.internal.issue_manager.underperforming_group": [[29, "module-cleanlab.datalab.internal.issue_manager.underperforming_group"]], "collect_info() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.collect_info"]], "description (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.description"]], "filter_cluster_ids() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.filter_cluster_ids"]], "find_issues() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.find_issues"]], "get_worst_cluster() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.get_worst_cluster"]], "info (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.info"]], "issue_name (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issue_name"]], "issue_score_key (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issue_score_key"]], "issues (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.issues"]], "make_summary() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager class method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.make_summary"]], "perform_clustering() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.perform_clustering"]], "report() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager class method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.report"]], "set_knn_graph() (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager method)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.set_knn_graph"]], "summary (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.summary"]], "verbosity_levels (cleanlab.datalab.internal.issue_manager.underperforming_group.underperforminggroupissuemanager attribute)": [[29, "cleanlab.datalab.internal.issue_manager.underperforming_group.UnderperformingGroupIssueManager.verbosity_levels"]], "reporter (class in cleanlab.datalab.internal.report)": [[30, "cleanlab.datalab.internal.report.Reporter"]], "cleanlab.datalab.internal.report": [[30, "module-cleanlab.datalab.internal.report"]], "get_report() (cleanlab.datalab.internal.report.reporter method)": [[30, "cleanlab.datalab.internal.report.Reporter.get_report"]], "report() (cleanlab.datalab.internal.report.reporter method)": [[30, "cleanlab.datalab.internal.report.Reporter.report"]], "classification (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.CLASSIFICATION"]], "multilabel (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.MULTILABEL"]], "regression (cleanlab.datalab.internal.task.task attribute)": [[31, "cleanlab.datalab.internal.task.Task.REGRESSION"]], "task (class in cleanlab.datalab.internal.task)": [[31, "cleanlab.datalab.internal.task.Task"]], "__contains__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__contains__"]], "__getitem__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__getitem__"]], "__iter__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__iter__"]], "__len__() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.__len__"]], "cleanlab.datalab.internal.task": [[31, "module-cleanlab.datalab.internal.task"]], "from_str() (cleanlab.datalab.internal.task.task class method)": [[31, "cleanlab.datalab.internal.task.Task.from_str"]], "is_classification (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_classification"]], "is_multilabel (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_multilabel"]], "is_regression (cleanlab.datalab.internal.task.task property)": [[31, "cleanlab.datalab.internal.task.Task.is_regression"]], "cleanlab.dataset": [[33, "module-cleanlab.dataset"]], "find_overlapping_classes() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.find_overlapping_classes"]], "health_summary() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.health_summary"]], "overall_label_health_score() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.overall_label_health_score"]], "rank_classes_by_label_quality() (in module cleanlab.dataset)": [[33, "cleanlab.dataset.rank_classes_by_label_quality"]], "cnn (class in cleanlab.experimental.cifar_cnn)": [[34, "cleanlab.experimental.cifar_cnn.CNN"]], "t_destination (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.T_destination"]], "__call__() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.__call__"]], "add_module() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.add_module"]], "apply() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.apply"]], "bfloat16() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.bfloat16"]], "buffers() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.buffers"]], "call_bn() (in module cleanlab.experimental.cifar_cnn)": [[34, "cleanlab.experimental.cifar_cnn.call_bn"]], "call_super_init (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.call_super_init"]], "children() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.children"]], "cleanlab.experimental.cifar_cnn": [[34, "module-cleanlab.experimental.cifar_cnn"]], "compile() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.compile"]], "cpu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.cpu"]], "cuda() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.cuda"]], "double() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.double"]], "dump_patches (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.dump_patches"]], "eval() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.eval"]], "extra_repr() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.extra_repr"]], "float() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.float"]], "forward() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.forward"], [34, "id0"]], "get_buffer() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_buffer"]], "get_extra_state() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_extra_state"]], "get_parameter() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_parameter"]], "get_submodule() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.get_submodule"]], "half() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.half"]], "ipu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.ipu"]], "load_state_dict() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.load_state_dict"]], "modules() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.modules"]], "named_buffers() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_buffers"]], "named_children() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_children"]], "named_modules() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_modules"]], "named_parameters() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.named_parameters"]], "parameters() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.parameters"]], "register_backward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_backward_hook"]], "register_buffer() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_buffer"]], "register_forward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_forward_hook"]], "register_forward_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_forward_pre_hook"]], "register_full_backward_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_full_backward_hook"]], "register_full_backward_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_load_state_dict_post_hook"]], "register_module() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_module"]], "register_parameter() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_parameter"]], "register_state_dict_pre_hook() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.register_state_dict_pre_hook"]], "requires_grad_() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.requires_grad_"]], "set_extra_state() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.set_extra_state"]], "share_memory() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.share_memory"]], "state_dict() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.state_dict"]], "to() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.to"]], "to_empty() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.to_empty"]], "train() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.train"]], "training (cleanlab.experimental.cifar_cnn.cnn attribute)": [[34, "cleanlab.experimental.cifar_cnn.CNN.training"]], "type() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.type"]], "xpu() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.xpu"]], "zero_grad() (cleanlab.experimental.cifar_cnn.cnn method)": [[34, "cleanlab.experimental.cifar_cnn.CNN.zero_grad"]], "adjust_learning_rate() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.adjust_learning_rate"]], "cleanlab.experimental.coteaching": [[35, "module-cleanlab.experimental.coteaching"]], "evaluate() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.evaluate"]], "forget_rate_scheduler() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.forget_rate_scheduler"]], "initialize_lr_scheduler() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.initialize_lr_scheduler"]], "loss_coteaching() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.loss_coteaching"]], "train() (in module cleanlab.experimental.coteaching)": [[35, "cleanlab.experimental.coteaching.train"]], "cleanlab.experimental": [[36, "module-cleanlab.experimental"]], "labelinspector (class in cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector"]], "adj_confident_thresholds_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.adj_confident_thresholds_shared"]], "cleanlab.experimental.label_issues_batched": [[37, "module-cleanlab.experimental.label_issues_batched"]], "find_label_issues_batched() (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.find_label_issues_batched"]], "get_confident_thresholds() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_confident_thresholds"]], "get_label_issues() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_label_issues"]], "get_num_issues() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_num_issues"]], "get_quality_scores() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.get_quality_scores"]], "labels_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.labels_shared"]], "pred_probs_shared (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.pred_probs_shared"]], "score_label_quality() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.score_label_quality"]], "split_arr() (in module cleanlab.experimental.label_issues_batched)": [[37, "cleanlab.experimental.label_issues_batched.split_arr"]], "update_confident_thresholds() (cleanlab.experimental.label_issues_batched.labelinspector method)": [[37, "cleanlab.experimental.label_issues_batched.LabelInspector.update_confident_thresholds"]], "cnn (class in cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.CNN"]], "simplenet (class in cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet"]], "t_destination (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.T_destination"]], "__call__() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.__call__"]], "__init_subclass__() (cleanlab.experimental.mnist_pytorch.cnn class method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.__init_subclass__"]], "add_module() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.add_module"]], "apply() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.apply"]], "batch_size (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.batch_size"]], "bfloat16() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.bfloat16"]], "buffers() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.buffers"]], "call_super_init (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.call_super_init"]], "children() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.children"]], "cleanlab.experimental.mnist_pytorch": [[38, "module-cleanlab.experimental.mnist_pytorch"]], "compile() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.compile"]], "cpu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.cpu"]], "cuda() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.cuda"]], "dataset (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.dataset"]], "double() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.double"]], "dump_patches (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.dump_patches"]], "epochs (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.epochs"]], "eval() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.eval"]], "extra_repr() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.extra_repr"]], "fit() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.fit"], [38, "id0"]], "float() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.float"]], "forward() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.forward"]], "get_buffer() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_buffer"]], "get_extra_state() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_extra_state"]], "get_metadata_routing() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.get_metadata_routing"]], "get_mnist_dataset() (in module cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.get_mnist_dataset"]], "get_parameter() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_parameter"]], "get_params() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.get_params"]], "get_sklearn_digits_dataset() (in module cleanlab.experimental.mnist_pytorch)": [[38, "cleanlab.experimental.mnist_pytorch.get_sklearn_digits_dataset"]], "get_submodule() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.get_submodule"]], "half() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.half"]], "ipu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.ipu"]], "load_state_dict() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.load_state_dict"]], "loader (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.loader"]], "log_interval (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.log_interval"]], "lr (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.lr"]], "modules() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.modules"]], "momentum (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.momentum"]], "named_buffers() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_buffers"]], "named_children() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_children"]], "named_modules() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_modules"]], "named_parameters() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.named_parameters"]], "no_cuda (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.no_cuda"]], "parameters() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.parameters"]], "predict() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.predict"], [38, "id1"]], "predict_proba() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.predict_proba"], [38, "id4"]], "register_backward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_backward_hook"]], "register_buffer() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_buffer"]], "register_forward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_forward_hook"]], "register_forward_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_forward_pre_hook"]], "register_full_backward_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_full_backward_hook"]], "register_full_backward_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_load_state_dict_post_hook"]], "register_module() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_module"]], "register_parameter() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_parameter"]], "register_state_dict_pre_hook() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.register_state_dict_pre_hook"]], "requires_grad_() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.requires_grad_"]], "seed (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.seed"]], "set_extra_state() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.set_extra_state"]], "set_fit_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_fit_request"]], "set_params() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_params"]], "set_predict_proba_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_predict_proba_request"]], "set_predict_request() (cleanlab.experimental.mnist_pytorch.cnn method)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.set_predict_request"]], "share_memory() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.share_memory"]], "state_dict() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.state_dict"]], "test_batch_size (cleanlab.experimental.mnist_pytorch.cnn attribute)": [[38, "cleanlab.experimental.mnist_pytorch.CNN.test_batch_size"]], "to() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.to"]], "to_empty() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.to_empty"]], "train() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.train"]], "training (cleanlab.experimental.mnist_pytorch.simplenet attribute)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.training"]], "type() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.type"]], "xpu() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.xpu"]], "zero_grad() (cleanlab.experimental.mnist_pytorch.simplenet method)": [[38, "cleanlab.experimental.mnist_pytorch.SimpleNet.zero_grad"]], "cleanlab.filter": [[39, "module-cleanlab.filter"]], "find_label_issues() (in module cleanlab.filter)": [[39, "cleanlab.filter.find_label_issues"]], "find_label_issues_using_argmax_confusion_matrix() (in module cleanlab.filter)": [[39, "cleanlab.filter.find_label_issues_using_argmax_confusion_matrix"]], "find_predicted_neq_given() (in module cleanlab.filter)": [[39, "cleanlab.filter.find_predicted_neq_given"]], "pred_probs_by_class (in module cleanlab.filter)": [[39, "cleanlab.filter.pred_probs_by_class"]], "prune_count_matrix_cols (in module cleanlab.filter)": [[39, "cleanlab.filter.prune_count_matrix_cols"]], "cleanlab.internal": [[40, "module-cleanlab.internal"]], "cleanlab.internal.label_quality_utils": [[41, "module-cleanlab.internal.label_quality_utils"]], "get_normalized_entropy() (in module cleanlab.internal.label_quality_utils)": [[41, "cleanlab.internal.label_quality_utils.get_normalized_entropy"]], "cleanlab.internal.latent_algebra": [[42, "module-cleanlab.internal.latent_algebra"]], "compute_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_inv_noise_matrix"]], "compute_noise_matrix_from_inverse() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_noise_matrix_from_inverse"]], "compute_ps_py_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_ps_py_inv_noise_matrix"]], "compute_py() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_py"]], "compute_py_inv_noise_matrix() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_py_inv_noise_matrix"]], "compute_pyx() (in module cleanlab.internal.latent_algebra)": [[42, "cleanlab.internal.latent_algebra.compute_pyx"]], "assert_valid_inputs_multiannotator() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.assert_valid_inputs_multiannotator"]], "assert_valid_pred_probs() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.assert_valid_pred_probs"]], "check_consensus_label_classes() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.check_consensus_label_classes"]], "cleanlab.internal.multiannotator_utils": [[43, "module-cleanlab.internal.multiannotator_utils"]], "compute_soft_cross_entropy() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.compute_soft_cross_entropy"]], "find_best_temp_scaler() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.find_best_temp_scaler"]], "format_multiannotator_labels() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.format_multiannotator_labels"]], "temp_scale_pred_probs() (in module cleanlab.internal.multiannotator_utils)": [[43, "cleanlab.internal.multiannotator_utils.temp_scale_pred_probs"]], "aggregator (class in cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.Aggregator"]], "confidence_weighted_entropy (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.CONFIDENCE_WEIGHTED_ENTROPY"]], "classlabelscorer (class in cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer"]], "multilabelscorer (class in cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.MultilabelScorer"]], "normalized_margin (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.NORMALIZED_MARGIN"]], "self_confidence (cleanlab.internal.multilabel_scorer.classlabelscorer attribute)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.SELF_CONFIDENCE"]], "__call__() (cleanlab.internal.multilabel_scorer.aggregator method)": [[44, "cleanlab.internal.multilabel_scorer.Aggregator.__call__"]], "__call__() (cleanlab.internal.multilabel_scorer.classlabelscorer method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__call__"]], "__call__() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[44, "cleanlab.internal.multilabel_scorer.MultilabelScorer.__call__"]], "__contains__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__contains__"]], "__getitem__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__getitem__"]], "__iter__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__iter__"]], "__len__() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.__len__"]], "aggregate() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[44, "cleanlab.internal.multilabel_scorer.MultilabelScorer.aggregate"]], "cleanlab.internal.multilabel_scorer": [[44, "module-cleanlab.internal.multilabel_scorer"]], "exponential_moving_average() (in module cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.exponential_moving_average"]], "from_str() (cleanlab.internal.multilabel_scorer.classlabelscorer class method)": [[44, "cleanlab.internal.multilabel_scorer.ClassLabelScorer.from_str"]], "get_class_label_quality_scores() (cleanlab.internal.multilabel_scorer.multilabelscorer method)": [[44, "cleanlab.internal.multilabel_scorer.MultilabelScorer.get_class_label_quality_scores"]], "get_cross_validated_multilabel_pred_probs() (in module cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.get_cross_validated_multilabel_pred_probs"]], "get_label_quality_scores() (in module cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.get_label_quality_scores"]], "multilabel_py() (in module cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.multilabel_py"]], "possible_methods (cleanlab.internal.multilabel_scorer.aggregator attribute)": [[44, "cleanlab.internal.multilabel_scorer.Aggregator.possible_methods"]], "softmin() (in module cleanlab.internal.multilabel_scorer)": [[44, "cleanlab.internal.multilabel_scorer.softmin"]], "cleanlab.internal.multilabel_utils": [[45, "module-cleanlab.internal.multilabel_utils"]], "get_onehot_num_classes() (in module cleanlab.internal.multilabel_utils)": [[45, "cleanlab.internal.multilabel_utils.get_onehot_num_classes"]], "int2onehot() (in module cleanlab.internal.multilabel_utils)": [[45, "cleanlab.internal.multilabel_utils.int2onehot"]], "onehot2int() (in module cleanlab.internal.multilabel_utils)": [[45, "cleanlab.internal.multilabel_utils.onehot2int"]], "stack_complement() (in module cleanlab.internal.multilabel_utils)": [[45, "cleanlab.internal.multilabel_utils.stack_complement"]], "cleanlab.internal.outlier": [[46, "module-cleanlab.internal.outlier"]], "transform_distances_to_scores() (in module cleanlab.internal.outlier)": [[46, "cleanlab.internal.outlier.transform_distances_to_scores"]], "cleanlab.internal.token_classification_utils": [[47, "module-cleanlab.internal.token_classification_utils"]], "color_sentence() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.color_sentence"]], "filter_sentence() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.filter_sentence"]], "get_sentence() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.get_sentence"]], "mapping() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.mapping"]], "merge_probs() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.merge_probs"]], "process_token() (in module cleanlab.internal.token_classification_utils)": [[47, "cleanlab.internal.token_classification_utils.process_token"]], "append_extra_datapoint() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.append_extra_datapoint"]], "cleanlab.internal.util": [[48, "module-cleanlab.internal.util"]], "clip_noise_rates() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.clip_noise_rates"]], "clip_values() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.clip_values"]], "compress_int_array() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.compress_int_array"]], "confusion_matrix() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.confusion_matrix"]], "csr_vstack() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.csr_vstack"]], "estimate_pu_f1() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.estimate_pu_f1"]], "extract_indices_tf() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.extract_indices_tf"]], "force_two_dimensions() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.force_two_dimensions"]], "format_labels() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.format_labels"]], "get_missing_classes() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.get_missing_classes"]], "get_num_classes() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.get_num_classes"]], "get_unique_classes() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.get_unique_classes"]], "is_tensorflow_dataset() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.is_tensorflow_dataset"]], "is_torch_dataset() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.is_torch_dataset"]], "num_unique_classes() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.num_unique_classes"]], "print_inverse_noise_matrix() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.print_inverse_noise_matrix"]], "print_joint_matrix() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.print_joint_matrix"]], "print_noise_matrix() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.print_noise_matrix"]], "print_square_matrix() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.print_square_matrix"]], "remove_noise_from_class() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.remove_noise_from_class"]], "round_preserving_row_totals() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.round_preserving_row_totals"]], "round_preserving_sum() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.round_preserving_sum"]], "smart_display_dataframe() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.smart_display_dataframe"]], "subset_x_y() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.subset_X_y"]], "subset_data() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.subset_data"]], "subset_labels() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.subset_labels"]], "train_val_split() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.train_val_split"]], "unshuffle_tensorflow_dataset() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.unshuffle_tensorflow_dataset"]], "value_counts() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.value_counts"]], "value_counts_fill_missing_classes() (in module cleanlab.internal.util)": [[48, "cleanlab.internal.util.value_counts_fill_missing_classes"]], "assert_indexing_works() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.assert_indexing_works"]], "assert_nonempty_input() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.assert_nonempty_input"]], "assert_valid_class_labels() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.assert_valid_class_labels"]], "assert_valid_inputs() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.assert_valid_inputs"]], "cleanlab.internal.validation": [[49, "module-cleanlab.internal.validation"]], "labels_to_array() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.labels_to_array"]], "labels_to_list_multilabel() (in module cleanlab.internal.validation)": [[49, "cleanlab.internal.validation.labels_to_list_multilabel"]], "cleanlab.models": [[51, "module-cleanlab.models"]], "keraswrappermodel (class in cleanlab.models.keras)": [[52, "cleanlab.models.keras.KerasWrapperModel"]], "keraswrappersequential (class in cleanlab.models.keras)": [[52, "cleanlab.models.keras.KerasWrapperSequential"]], "cleanlab.models.keras": [[52, "module-cleanlab.models.keras"]], "fit() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.fit"]], "fit() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.fit"]], "get_params() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.get_params"]], "get_params() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.get_params"]], "predict() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.predict"]], "predict() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.predict"]], "predict_proba() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.predict_proba"]], "predict_proba() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.predict_proba"]], "set_params() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.set_params"]], "set_params() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.set_params"]], "summary() (cleanlab.models.keras.keraswrappermodel method)": [[52, "cleanlab.models.keras.KerasWrapperModel.summary"]], "summary() (cleanlab.models.keras.keraswrappersequential method)": [[52, "cleanlab.models.keras.KerasWrapperSequential.summary"]], "cleanlab.multiannotator": [[53, "module-cleanlab.multiannotator"]], "convert_long_to_wide_dataset() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.convert_long_to_wide_dataset"]], "get_active_learning_scores() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.get_active_learning_scores"]], "get_active_learning_scores_ensemble() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.get_active_learning_scores_ensemble"]], "get_label_quality_multiannotator() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.get_label_quality_multiannotator"]], "get_label_quality_multiannotator_ensemble() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.get_label_quality_multiannotator_ensemble"]], "get_majority_vote_label() (in module cleanlab.multiannotator)": [[53, "cleanlab.multiannotator.get_majority_vote_label"]], "cleanlab.multilabel_classification.dataset": [[54, "module-cleanlab.multilabel_classification.dataset"]], "common_multilabel_issues() (in module cleanlab.multilabel_classification.dataset)": [[54, "cleanlab.multilabel_classification.dataset.common_multilabel_issues"]], "multilabel_health_summary() (in module cleanlab.multilabel_classification.dataset)": [[54, "cleanlab.multilabel_classification.dataset.multilabel_health_summary"]], "overall_multilabel_health_score() (in module cleanlab.multilabel_classification.dataset)": [[54, "cleanlab.multilabel_classification.dataset.overall_multilabel_health_score"]], "rank_classes_by_multilabel_quality() (in module cleanlab.multilabel_classification.dataset)": [[54, "cleanlab.multilabel_classification.dataset.rank_classes_by_multilabel_quality"]], "cleanlab.multilabel_classification.filter": [[55, "module-cleanlab.multilabel_classification.filter"]], "find_label_issues() (in module cleanlab.multilabel_classification.filter)": [[55, "cleanlab.multilabel_classification.filter.find_label_issues"]], "find_multilabel_issues_per_class() (in module cleanlab.multilabel_classification.filter)": [[55, "cleanlab.multilabel_classification.filter.find_multilabel_issues_per_class"]], "cleanlab.multilabel_classification": [[56, "module-cleanlab.multilabel_classification"]], "cleanlab.multilabel_classification.rank": [[57, "module-cleanlab.multilabel_classification.rank"]], "get_label_quality_scores() (in module cleanlab.multilabel_classification.rank)": [[57, "cleanlab.multilabel_classification.rank.get_label_quality_scores"]], "get_label_quality_scores_per_class() (in module cleanlab.multilabel_classification.rank)": [[57, "cleanlab.multilabel_classification.rank.get_label_quality_scores_per_class"]], "cleanlab.object_detection.filter": [[58, "module-cleanlab.object_detection.filter"]], "find_label_issues() (in module cleanlab.object_detection.filter)": [[58, "cleanlab.object_detection.filter.find_label_issues"]], "cleanlab.object_detection": [[59, "module-cleanlab.object_detection"]], "cleanlab.object_detection.rank": [[60, "module-cleanlab.object_detection.rank"]], "compute_badloc_box_scores() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.compute_badloc_box_scores"]], "compute_overlooked_box_scores() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.compute_overlooked_box_scores"]], "compute_swap_box_scores() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.compute_swap_box_scores"]], "get_label_quality_scores() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.issues_from_scores"]], "pool_box_scores_per_image() (in module cleanlab.object_detection.rank)": [[60, "cleanlab.object_detection.rank.pool_box_scores_per_image"]], "bounding_box_size_distribution() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.bounding_box_size_distribution"]], "calculate_per_class_metrics() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.calculate_per_class_metrics"]], "class_label_distribution() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.class_label_distribution"]], "cleanlab.object_detection.summary": [[61, "module-cleanlab.object_detection.summary"]], "get_average_per_class_confusion_matrix() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.get_average_per_class_confusion_matrix"]], "get_sorted_bbox_count_idxs() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.get_sorted_bbox_count_idxs"]], "object_counts_per_image() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.object_counts_per_image"]], "plot_class_distribution() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.plot_class_distribution"]], "plot_class_size_distributions() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.plot_class_size_distributions"]], "visualize() (in module cleanlab.object_detection.summary)": [[61, "cleanlab.object_detection.summary.visualize"]], "outofdistribution (class in cleanlab.outlier)": [[62, "cleanlab.outlier.OutOfDistribution"]], "cleanlab.outlier": [[62, "module-cleanlab.outlier"]], "fit() (cleanlab.outlier.outofdistribution method)": [[62, "cleanlab.outlier.OutOfDistribution.fit"]], "fit_score() (cleanlab.outlier.outofdistribution method)": [[62, "cleanlab.outlier.OutOfDistribution.fit_score"]], "score() (cleanlab.outlier.outofdistribution method)": [[62, "cleanlab.outlier.OutOfDistribution.score"]], "cleanlab.rank": [[63, "module-cleanlab.rank"]], "find_top_issues() (in module cleanlab.rank)": [[63, "cleanlab.rank.find_top_issues"]], "get_confidence_weighted_entropy_for_each_label() (in module cleanlab.rank)": [[63, "cleanlab.rank.get_confidence_weighted_entropy_for_each_label"]], "get_label_quality_ensemble_scores() (in module cleanlab.rank)": [[63, "cleanlab.rank.get_label_quality_ensemble_scores"]], "get_label_quality_scores() (in module cleanlab.rank)": [[63, "cleanlab.rank.get_label_quality_scores"]], "get_normalized_margin_for_each_label() (in module cleanlab.rank)": [[63, "cleanlab.rank.get_normalized_margin_for_each_label"]], "get_self_confidence_for_each_label() (in module cleanlab.rank)": [[63, "cleanlab.rank.get_self_confidence_for_each_label"]], "order_label_issues() (in module cleanlab.rank)": [[63, "cleanlab.rank.order_label_issues"]], "cleanlab.regression": [[64, "module-cleanlab.regression"]], "cleanlearning (class in cleanlab.regression.learn)": [[65, "cleanlab.regression.learn.CleanLearning"]], "__init_subclass__() (cleanlab.regression.learn.cleanlearning class method)": [[65, "cleanlab.regression.learn.CleanLearning.__init_subclass__"]], "cleanlab.regression.learn": [[65, "module-cleanlab.regression.learn"]], "find_label_issues() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.find_label_issues"]], "fit() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.fit"]], "get_aleatoric_uncertainty() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.get_aleatoric_uncertainty"]], "get_epistemic_uncertainty() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.get_epistemic_uncertainty"]], "get_label_issues() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.get_label_issues"]], "get_metadata_routing() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.get_metadata_routing"]], "get_params() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.get_params"]], "predict() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.predict"]], "save_space() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.save_space"]], "score() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.score"]], "set_fit_request() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.set_fit_request"]], "set_params() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.set_params"]], "set_score_request() (cleanlab.regression.learn.cleanlearning method)": [[65, "cleanlab.regression.learn.CleanLearning.set_score_request"]], "cleanlab.regression.rank": [[66, "module-cleanlab.regression.rank"]], "get_label_quality_scores() (in module cleanlab.regression.rank)": [[66, "cleanlab.regression.rank.get_label_quality_scores"]], "cleanlab.segmentation.filter": [[67, "module-cleanlab.segmentation.filter"]], "find_label_issues() (in module cleanlab.segmentation.filter)": [[67, "cleanlab.segmentation.filter.find_label_issues"]], "cleanlab.segmentation": [[68, "module-cleanlab.segmentation"]], "cleanlab.segmentation.rank": [[69, "module-cleanlab.segmentation.rank"]], "get_label_quality_scores() (in module cleanlab.segmentation.rank)": [[69, "cleanlab.segmentation.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.segmentation.rank)": [[69, "cleanlab.segmentation.rank.issues_from_scores"]], "cleanlab.segmentation.summary": [[70, "module-cleanlab.segmentation.summary"]], "common_label_issues() (in module cleanlab.segmentation.summary)": [[70, "cleanlab.segmentation.summary.common_label_issues"]], "display_issues() (in module cleanlab.segmentation.summary)": [[70, "cleanlab.segmentation.summary.display_issues"]], "filter_by_class() (in module cleanlab.segmentation.summary)": [[70, "cleanlab.segmentation.summary.filter_by_class"]], "cleanlab.token_classification.filter": [[71, "module-cleanlab.token_classification.filter"]], "find_label_issues() (in module cleanlab.token_classification.filter)": [[71, "cleanlab.token_classification.filter.find_label_issues"]], "cleanlab.token_classification": [[72, "module-cleanlab.token_classification"]], "cleanlab.token_classification.rank": [[73, "module-cleanlab.token_classification.rank"]], "get_label_quality_scores() (in module cleanlab.token_classification.rank)": [[73, "cleanlab.token_classification.rank.get_label_quality_scores"]], "issues_from_scores() (in module cleanlab.token_classification.rank)": [[73, "cleanlab.token_classification.rank.issues_from_scores"]], "cleanlab.token_classification.summary": [[74, "module-cleanlab.token_classification.summary"]], "common_label_issues() (in module cleanlab.token_classification.summary)": [[74, "cleanlab.token_classification.summary.common_label_issues"]], "display_issues() (in module cleanlab.token_classification.summary)": [[74, "cleanlab.token_classification.summary.display_issues"]], "filter_by_token() (in module cleanlab.token_classification.summary)": [[74, "cleanlab.token_classification.summary.filter_by_token"]]}})